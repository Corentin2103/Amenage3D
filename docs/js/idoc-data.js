const MEMBERS = [
{"signature":"ErgoShop.TwoDScripts","childcount":2,"type":"Namespace","name":"ErgoShop.TwoDScripts","token":"namespace ErgoShop.TwoDScripts","scope":""},{"signature":"ErgoShop.TwoDScripts.Generic2DScript","childcount":3,"type":"Class","name":"Generic2DScript","token":"public class Generic2DScript : MonoBehaviour ","scope":"ErgoShop.TwoDScripts","comments":{"summary":"Adapt text transform to the sprite"}},{"signature":"ErgoShop.TwoDScripts.Generic2DScript.text","childcount":0,"type":"Field","name":"text","token":"private Transform text ","scope":"ErgoShop.TwoDScripts.Generic2DScript"},{"signature":"ErgoShop.TwoDScripts.Generic2DScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.TwoDScripts.Generic2DScript"},{"signature":"ErgoShop.TwoDScripts.Generic2DScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.TwoDScripts.Generic2DScript"},{"signature":"ErgoShop.TwoDScripts.ScaleSpriteScript","childcount":4,"type":"Class","name":"ScaleSpriteScript","token":"public class ScaleSpriteScript : MonoBehaviour ","scope":"ErgoShop.TwoDScripts","comments":{"summary":"Scale for the 2D View. Show the size of a square, in meters, according to camera zoom"}},{"signature":"ErgoShop.TwoDScripts.ScaleSpriteScript.cam2DTransform","childcount":0,"type":"Field","name":"cam2DTransform","token":"public Transform cam2DTransform ","scope":"ErgoShop.TwoDScripts.ScaleSpriteScript","comments":{"summary":"Camera"}},{"signature":"ErgoShop.TwoDScripts.ScaleSpriteScript.myText","childcount":0,"type":"Field","name":"myText","token":"public Text myText ","scope":"ErgoShop.TwoDScripts.ScaleSpriteScript","comments":{"summary":"Text to show the scaling"}},{"signature":"ErgoShop.TwoDScripts.ScaleSpriteScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.TwoDScripts.ScaleSpriteScript"},{"signature":"ErgoShop.TwoDScripts.ScaleSpriteScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.TwoDScripts.ScaleSpriteScript"},{"signature":"ErgoShop.Cameras","childcount":2,"type":"Namespace","name":"ErgoShop.Cameras","token":"namespace ErgoShop.Cameras","scope":""},{"signature":"ErgoShop.Cameras.Camera2DMove","childcount":25,"type":"Class","name":"Camera2DMove","token":"public class Camera2DMove : MonoBehaviour ","scope":"ErgoShop.Cameras","comments":{"summary":"Camera used in the 2D View"}},{"signature":"ErgoShop.Cameras.Camera2DMove.canMove","childcount":0,"type":"Field","name":"canMove","token":"private bool canMove ","scope":"ErgoShop.Cameras.Camera2DMove","comments":{"summary":"Updated by GlobalManager"}},{"signature":"ErgoShop.Cameras.Camera2DMove.target","childcount":0,"type":"Field","name":"target","token":"public Transform target ","scope":"ErgoShop.Cameras.Camera2DMove","comments":{"summary":"Target used to make the camera move"}},{"signature":"ErgoShop.Cameras.Camera2DMove.targetOffset","childcount":0,"type":"Field","name":"targetOffset","token":"public Vector3 targetOffset ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.moveSpeed","childcount":0,"type":"Field","name":"moveSpeed","token":"public float moveSpeed ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.minBound","childcount":0,"type":"Field","name":"minBound","token":"private Vector3 minBound ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.maxBound","childcount":0,"type":"Field","name":"maxBound","token":"private Vector3 maxBound ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.distance","childcount":0,"type":"Field","name":"distance","token":"public float distance ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.maxDistance","childcount":0,"type":"Field","name":"maxDistance","token":"public float maxDistance ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.minDistance","childcount":0,"type":"Field","name":"minDistance","token":"public float minDistance ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.zoomRate","childcount":0,"type":"Field","name":"zoomRate","token":"public int zoomRate ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.zoomDampening","childcount":0,"type":"Field","name":"zoomDampening","token":"public float zoomDampening ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.desiredDistance","childcount":0,"type":"Field","name":"desiredDistance","token":"float desiredDistance ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.currentDistance","childcount":0,"type":"Field","name":"currentDistance","token":"float currentDistance ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.position","childcount":0,"type":"Field","name":"position","token":"Vector3 position ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.prevMousePos","childcount":0,"type":"Field","name":"prevMousePos","token":"private Vector3 prevMousePos ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.mouseMovement","childcount":0,"type":"Field","name":"mouseMovement","token":"private Vector3 mouseMovement ","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.OnEnable()","childcount":0,"type":"Method","name":"OnEnable","token":"void OnEnable()","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.Init()","childcount":0,"type":"Method","name":"Init","token":"public void Init()","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.LateUpdate()","childcount":0,"type":"Method","name":"LateUpdate","token":"void LateUpdate()","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.BeginMoveCam()","childcount":0,"type":"Method","name":"BeginMoveCam","token":"private void BeginMoveCam()","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.EndMoveCam()","childcount":0,"type":"Method","name":"EndMoveCam","token":"private void EndMoveCam()","scope":"ErgoShop.Cameras.Camera2DMove"},{"signature":"ErgoShop.Cameras.Camera2DMove.ClampAngle(float, float, float)","childcount":0,"type":"Method","name":"ClampAngle","token":"private float ClampAngle(float angle, float min, float max)","scope":"ErgoShop.Cameras.Camera2DMove","params":{"angle":"float","min":"float","max":"float"}},{"signature":"ErgoShop.Cameras.Camera2DMove.SetPosition(Vector3)","childcount":0,"type":"Method","name":"SetPosition","token":"public void SetPosition(Vector3 pos3D)","scope":"ErgoShop.Cameras.Camera2DMove","params":{"pos3D":"Vector3"}},{"signature":"ErgoShop.Cameras.Camera2DMove.SetMoveSpeed(float)","childcount":0,"type":"Method","name":"SetMoveSpeed","token":"public void SetMoveSpeed(float s)","scope":"ErgoShop.Cameras.Camera2DMove","params":{"s":"float"}},{"signature":"ErgoShop.Cameras.Camera3DMove","childcount":35,"type":"Class","name":"Camera3DMove","token":"public class Camera3DMove : MonoBehaviour ","scope":"ErgoShop.Cameras","comments":{"summary":"Camera used in the 3D View"}},{"signature":"ErgoShop.Cameras.Camera3DMove.Speed","childcount":0,"type":"Field","name":"Speed","token":"public float Speed ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.yMinLimit","childcount":0,"type":"Field","name":"yMinLimit","token":"public int yMinLimit ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.yMaxLimit","childcount":0,"type":"Field","name":"yMaxLimit","token":"public int yMaxLimit ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.zoomRate","childcount":0,"type":"Field","name":"zoomRate","token":"public int zoomRate ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.zoomDampening","childcount":0,"type":"Field","name":"zoomDampening","token":"public float zoomDampening ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.moveSpeed","childcount":0,"type":"Field","name":"moveSpeed","token":"public float moveSpeed ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.canMove","childcount":0,"type":"Field","name":"canMove","token":"private bool canMove ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.canRotate","childcount":0,"type":"Field","name":"canRotate","token":"private bool canRotate ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.startMoving","childcount":0,"type":"Field","name":"startMoving","token":"private bool startMoving ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.minBound","childcount":0,"type":"Field","name":"minBound","token":"private Vector3 minBound ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.maxBound","childcount":0,"type":"Field","name":"maxBound","token":"private Vector3 maxBound ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.xDeg","childcount":0,"type":"Field","name":"xDeg","token":"float xDeg ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.yDeg","childcount":0,"type":"Field","name":"yDeg","token":"float yDeg ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.currentRotation","childcount":0,"type":"Field","name":"currentRotation","token":"Quaternion currentRotation ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.desiredRotation","childcount":0,"type":"Field","name":"desiredRotation","token":"Quaternion desiredRotation ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.rotation","childcount":0,"type":"Field","name":"rotation","token":"Quaternion rotation ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.position","childcount":0,"type":"Field","name":"position","token":"Vector3 position ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.prevMousePos","childcount":0,"type":"Field","name":"prevMousePos","token":"private Vector3 prevMousePos ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.mousePos","childcount":0,"type":"Field","name":"mousePos","token":"private Vector3 mousePos ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.previousAngle","childcount":0,"type":"Field","name":"previousAngle","token":"private Vector3 previousAngle ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.Timer","childcount":0,"type":"Field","name":"Timer","token":"public float Timer ","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.OnEnable()","childcount":0,"type":"Method","name":"OnEnable","token":"void OnEnable()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.Init()","childcount":0,"type":"Method","name":"Init","token":"public void Init()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.SetTopView()","childcount":0,"type":"Method","name":"SetTopView","token":"public void SetTopView()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.SetNormalView()","childcount":0,"type":"Method","name":"SetNormalView","token":"public void SetNormalView()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.SetFaceView(GameObject)","childcount":0,"type":"Method","name":"SetFaceView","token":"public void SetFaceView(GameObject wall)","scope":"ErgoShop.Cameras.Camera3DMove","params":{"wall":"GameObject"}},{"signature":"ErgoShop.Cameras.Camera3DMove.MoveWithArrows()","childcount":0,"type":"Method","name":"MoveWithArrows","token":"private void MoveWithArrows()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.GetMousePos()","childcount":0,"type":"Method","name":"GetMousePos","token":"Vector3 GetMousePos()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.LateUpdate()","childcount":0,"type":"Method","name":"LateUpdate","token":"void LateUpdate()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.BeginMoveCam()","childcount":0,"type":"Method","name":"BeginMoveCam","token":"private void BeginMoveCam()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.EndMoveCam()","childcount":0,"type":"Method","name":"EndMoveCam","token":"private void EndMoveCam()","scope":"ErgoShop.Cameras.Camera3DMove"},{"signature":"ErgoShop.Cameras.Camera3DMove.SetPosition(Vector3)","childcount":0,"type":"Method","name":"SetPosition","token":"public void SetPosition(Vector3 p)","scope":"ErgoShop.Cameras.Camera3DMove","params":{"p":"Vector3"}},{"signature":"ErgoShop.Cameras.Camera3DMove.SetRotation(Vector3)","childcount":0,"type":"Method","name":"SetRotation","token":"public void SetRotation(Vector3 euler)","scope":"ErgoShop.Cameras.Camera3DMove","params":{"euler":"Vector3"}},{"signature":"ErgoShop.Cameras.Camera3DMove.SetMoveSpeed(float)","childcount":0,"type":"Method","name":"SetMoveSpeed","token":"public void SetMoveSpeed(float s)","scope":"ErgoShop.Cameras.Camera3DMove","params":{"s":"float"}},{"signature":"ErgoShop.ConstraintsScripts","childcount":2,"type":"Namespace","name":"ErgoShop.ConstraintsScripts","token":"namespace ErgoShop.ConstraintsScripts","scope":""},{"signature":"ErgoShop.ConstraintsScripts.CollisionChecker","childcount":2,"type":"Class","name":"CollisionChecker","token":"public class CollisionChecker : MonoBehaviour ","scope":"ErgoShop.ConstraintsScripts","comments":{"summary":"If a character element enters in collision with a furniture, outline it in red"}},{"signature":"ErgoShop.ConstraintsScripts.CollisionChecker.OnCollisionStay(Collision)","childcount":0,"type":"Method","name":"OnCollisionStay","token":"private void OnCollisionStay(Collision collision)","scope":"ErgoShop.ConstraintsScripts.CollisionChecker","comments":{"summary":"If a character element enters in collision with a furniture, outline it in red"},"params":{"collision":"Collision"}},{"signature":"ErgoShop.ConstraintsScripts.CollisionChecker.OnCollisionExit(Collision)","childcount":0,"type":"Method","name":"OnCollisionExit","token":"private void OnCollisionExit(Collision collision)","scope":"ErgoShop.ConstraintsScripts.CollisionChecker","comments":{"summary":"If a character element enters in collision with a furniture, outline it in red"},"params":{"collision":"Collision"}},{"signature":"ErgoShop.ConstraintsScripts.NavigationBaker","childcount":5,"type":"Class","name":"NavigationBaker","token":"public class NavigationBaker : MonoBehaviour ","scope":"ErgoShop.ConstraintsScripts","comments":{"summary":"Bake the accessible area for a 45cm radius disk\r\n     Find the tools at github at https://github.com/Unity-Technologies/NavMeshComponents"}},{"signature":"ErgoShop.ConstraintsScripts.NavigationBaker.m_surface","childcount":0,"type":"Field","name":"m_surface","token":"private NavMeshSurface m_surface ","scope":"ErgoShop.ConstraintsScripts.NavigationBaker"},{"signature":"ErgoShop.ConstraintsScripts.NavigationBaker.m_goBake","childcount":0,"type":"Field","name":"m_goBake","token":"private bool m_goBake ","scope":"ErgoShop.ConstraintsScripts.NavigationBaker"},{"signature":"ErgoShop.ConstraintsScripts.NavigationBaker.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.ConstraintsScripts.NavigationBaker"},{"signature":"ErgoShop.ConstraintsScripts.NavigationBaker.BakeNavMeshSurface()","childcount":0,"type":"Method","name":"BakeNavMeshSurface","token":"public void BakeNavMeshSurface()","scope":"ErgoShop.ConstraintsScripts.NavigationBaker"},{"signature":"ErgoShop.ConstraintsScripts.NavigationBaker.EraseNavMeshSurface()","childcount":0,"type":"Method","name":"EraseNavMeshSurface","token":"public void EraseNavMeshSurface()","scope":"ErgoShop.ConstraintsScripts.NavigationBaker"},{"signature":"ErgoShop.Interactable","childcount":1,"type":"Namespace","name":"ErgoShop.Interactable","token":"namespace ErgoShop.Interactable","scope":""},{"signature":"ErgoShop.Interactable.ElementArrowsScript","childcount":11,"type":"Class","name":"ElementArrowsScript","token":"public class ElementArrowsScript : MonoBehaviour ","scope":"ErgoShop.Interactable","comments":{"summary":"Behaviour to put handles on a selected element, to change its size.\r\n     Used in 2D View"}},{"signature":"ErgoShop.Interactable.ElementArrowsScript.m_allArrows","childcount":0,"type":"Field","name":"m_allArrows","token":"private List<GameObject> m_allArrows ","scope":"ErgoShop.Interactable.ElementArrowsScript"},{"signature":"ErgoShop.Interactable.ElementArrowsScript.currentArrow","childcount":0,"type":"Field","name":"currentArrow","token":"private GameObject currentArrow ","scope":"ErgoShop.Interactable.ElementArrowsScript"},{"signature":"ErgoShop.Interactable.ElementArrowsScript.m_prevPos","childcount":0,"type":"Field","name":"m_prevPos","token":"private Vector3 m_prevPos ","scope":"ErgoShop.Interactable.ElementArrowsScript"},{"signature":"ErgoShop.Interactable.ElementArrowsScript.isMoving","childcount":0,"type":"Field","name":"isMoving","token":"public bool isMoving ","scope":"ErgoShop.Interactable.ElementArrowsScript"},{"signature":"ErgoShop.Interactable.ElementArrowsScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static ElementArrowsScript Instance { get; set; }","scope":"ErgoShop.Interactable.ElementArrowsScript"},{"signature":"ErgoShop.Interactable.ElementArrowsScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Interactable.ElementArrowsScript"},{"signature":"ErgoShop.Interactable.ElementArrowsScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Interactable.ElementArrowsScript"},{"signature":"ErgoShop.Interactable.ElementArrowsScript.SetOrigins(MovableElement, Vector3, Vector3)","childcount":0,"type":"Method","name":"SetOrigins","token":"void SetOrigins(MovableElement me, Vector3 pos, Vector3 size)","scope":"ErgoShop.Interactable.ElementArrowsScript","comments":{"summary":"adjust buttons position according to element bounds","param-me":"Element","param-pos":"Element position (2d)","param-size":"Element size (2d)"},"params":{"me":"MovableElement","pos":"Vector3","size":"Vector3"}},{"signature":"ErgoShop.Interactable.ElementArrowsScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Interactable.ElementArrowsScript"},{"signature":"ErgoShop.Interactable.ElementArrowsScript.SetSizeCompoAndDirection(Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"SetSizeCompoAndDirection","token":"private void SetSizeCompoAndDirection(Vector3 dif, Vector3 inDirection, Vector3 inSizeCompo, out Vector3 direction, out Vector3 sizeCompo)","scope":"ErgoShop.Interactable.ElementArrowsScript","comments":{"summary":"Updates arrow according to movement"},"params":{"dif":"Vector3","inDirection":"Vector3","inSizeCompo":"Vector3","direction":"Vector3","sizeCompo":"Vector3"}},{"signature":"ErgoShop.Interactable.ElementArrowsScript.ClickArrow()","childcount":0,"type":"Method","name":"ClickArrow","token":"private void ClickArrow()","scope":"ErgoShop.Interactable.ElementArrowsScript","comments":{"summary":"Main method, called when the users stars dragging one of the buttons"}},{"signature":"ErgoShop.Managers","childcount":19,"type":"Namespace","name":"ErgoShop.Managers","token":"namespace ErgoShop.Managers","scope":""},{"signature":"ErgoShop.Managers.FurnitureCreator","childcount":22,"type":"Class","name":"FurnitureCreator","token":"public class FurnitureCreator : CreatorBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Furnitures manager. Handle creation, movment, delete."}},{"signature":"ErgoShop.Managers.FurnitureCreator.ground3D","childcount":0,"type":"Field","name":"ground3D","token":"public GameObject ground3D ","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.m_currentFurniScript","childcount":0,"type":"Field","name":"m_currentFurniScript","token":"private FurnitureScript m_currentFurniScript ","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.m_currentFurniture","childcount":0,"type":"Field","name":"m_currentFurniture","token":"private Furniture m_currentFurniture ","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.backUpFurniture2DTop","childcount":0,"type":"Field","name":"backUpFurniture2DTop","token":"public GameObject backUpFurniture2DTop ","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.m_furnituresData","childcount":0,"type":"Field","name":"m_furnituresData","token":"private List<Furniture> m_furnituresData ","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.Instance","childcount":0,"type":"Field","name":"Instance","token":"public static FurnitureCreator Instance ","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.FurnitureCreator"},{"signature":"ErgoShop.Managers.FurnitureCreator.CancelFurniture()","childcount":0,"type":"Method","name":"CancelFurniture","token":"private void CancelFurniture()","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Destroy current furniture to cancel its creation"}},{"signature":"ErgoShop.Managers.FurnitureCreator.GetFurnitureFromGameObject(GameObject)","childcount":0,"type":"Method","name":"GetFurnitureFromGameObject","token":"public Furniture GetFurnitureFromGameObject(GameObject go)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Seek all associated objects in furnitures to find the Furniture object concerned","returns":"The Furniture data or null if not found","param-go":"Associated Gameobject, can be 2D or 3D"},"params":{"go":"GameObject"}},{"signature":"ErgoShop.Managers.FurnitureCreator.DestroyFurniture(Furniture)","childcount":0,"type":"Method","name":"DestroyFurniture","token":"public void DestroyFurniture(Furniture f)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Destroy a Furniture by destroying gameobject and set data to null","param-f":"The furniture"},"params":{"f":"Furniture"}},{"signature":"ErgoShop.Managers.FurnitureCreator.GetFurnitures()","childcount":0,"type":"Method","name":"GetFurnitures","token":"public List<Furniture> GetFurnitures()","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Get all furnitures","returns":"all current floor furnitures"}},{"signature":"ErgoShop.Managers.FurnitureCreator.AddCustomFurniture(GameObject, CustomFurniture)","childcount":0,"type":"Method","name":"AddCustomFurniture","token":"public void AddCustomFurniture(GameObject modelGO, CustomFurniture cf)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Add a custom furniture contained in %appdata%/ErgoShop/Imports on scene","param-modelGO":"the gameobject returned by the obj importer","param-cf":"Data containing path and name"},"params":{"modelGO":"GameObject","cf":"CustomFurniture"}},{"signature":"ErgoShop.Managers.FurnitureCreator.AddCollider(GameObject)","childcount":0,"type":"Method","name":"AddCollider","token":"private void AddCollider(GameObject modelGO)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Since custom furnitures are not prepared like the default ones, we need to add colliders and rigidbody.\r\n         For now the custom furnitures can only by \"ground\" ones\r\n         TO DO for later : add bool to set constraints for on wall furnitures","param-modelGO":"the gameobject returned by the obj importer"},"params":{"modelGO":"GameObject"}},{"signature":"ErgoShop.Managers.FurnitureCreator.InitFurnitureText(Furniture)","childcount":0,"type":"Method","name":"InitFurnitureText","token":"private void InitFurnitureText(Furniture f)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Sets the text mesh in 2D view","param-f":"Furniture data"},"params":{"f":"Furniture"}},{"signature":"ErgoShop.Managers.FurnitureCreator.SetFurni2DSize()","childcount":0,"type":"Method","name":"SetFurni2DSize","token":"private void SetFurni2DSize()","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Adapt sprite scaling according to mesh size and user's wanted size"}},{"signature":"ErgoShop.Managers.FurnitureCreator.AddFurniture(GameObject)","childcount":0,"type":"Method","name":"AddFurniture","token":"public void AddFurniture(GameObject furniture)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Add a furniture (not custom) on scene","param-furniture":"Gameobject containing data in a FurnitureScript (prefab data)"},"params":{"furniture":"GameObject"}},{"signature":"ErgoShop.Managers.FurnitureCreator.DestroyEverything()","childcount":0,"type":"Method","name":"DestroyEverything","token":"public override void DestroyEverything()","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Destroy every furniture (gameobjects and data)"}},{"signature":"ErgoShop.Managers.FurnitureCreator.LoadFurnituresFromFloor(Floor)","childcount":0,"type":"Method","name":"LoadFurnituresFromFloor","token":"public void LoadFurnituresFromFloor(Floor floor)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Load furnitures from floor data","param-floor":"Floor"},"params":{"floor":"Floor"}},{"signature":"ErgoShop.Managers.FurnitureCreator.RebuildFurniture(Furniture)","childcount":0,"type":"Method","name":"RebuildFurniture","token":"private void RebuildFurniture(Furniture f)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Force a furniture to rebuild gameobjects (scene data) and adjust the transforms","param-f":"Furniture data"},"params":{"f":"Furniture"}},{"signature":"ErgoShop.Managers.FurnitureCreator.CopyPaste(Element)","childcount":0,"type":"Method","name":"CopyPaste","token":"public override Element CopyPaste(Element m_copiedElement)","scope":"ErgoShop.Managers.FurnitureCreator","comments":{"summary":"Paste a copied furniture by getting a copy and instantiate it, and rebuilding gameobjects","returns":"The new furniture, identical to the copied one","param-m_copiedElement":"Copied furniture"},"params":{"m_copiedElement":"Element"}},{"signature":"ErgoShop.Managers.StairsCreator","childcount":18,"type":"Class","name":"StairsCreator","token":"public class StairsCreator : CreatorBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Stairs manager. Handle creation, movment, delete.\r\n     This manager uses the ProBuilder2 runtime mesh generator\r\n     More info at https://docs.unity3d.com/Packages/com.unity.probuilder@4.0/manual/api.html"}},{"signature":"ErgoShop.Managers.StairsCreator.roundedStairs2DPrefab","childcount":0,"type":"Field","name":"roundedStairs2DPrefab","token":"public GameObject roundedStairs2DPrefab ","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Sprite tile used to make both straight and round stairs"}},{"signature":"ErgoShop.Managers.StairsCreator.m_stairs","childcount":0,"type":"Field","name":"m_stairs","token":"private List<Stairs> m_stairs ","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"all stairs of the current floor"}},{"signature":"ErgoShop.Managers.StairsCreator.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static StairsCreator Instance { get; set; }","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Instance"}},{"signature":"ErgoShop.Managers.StairsCreator.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.StairsCreator"},{"signature":"ErgoShop.Managers.StairsCreator.Start()","childcount":0,"type":"Method","name":"Start","token":"private void Start()","scope":"ErgoShop.Managers.StairsCreator"},{"signature":"ErgoShop.Managers.StairsCreator.Update()","childcount":0,"type":"Method","name":"Update","token":"private void Update()","scope":"ErgoShop.Managers.StairsCreator"},{"signature":"ErgoShop.Managers.StairsCreator.GenerateStairs(int, float, float, float, bool, bool, bool)","childcount":0,"type":"Method","name":"GenerateStairs","token":"public GameObject GenerateStairs(int steps, float width, float height, float depth, bool sidesGoToFloor, bool generateBack = true, bool platformsOnly = false)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Generate 3D Stairs with probuilder tool"},"params":{"steps":"int","width":"float","height":"float","depth":"float","sidesGoToFloor":"bool","generateBack":"bool","platformsOnly":"bool"}},{"signature":"ErgoShop.Managers.StairsCreator.Generate2DStairs(Stairs)","childcount":0,"type":"Method","name":"Generate2DStairs","token":"public GameObject Generate2DStairs(Stairs s)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Generate 2D version of the stairs\r\n         It is NOT generated by Probuilder but in the RoundedStairsScript","param-s":"Stairs data"},"params":{"s":"Stairs"}},{"signature":"ErgoShop.Managers.StairsCreator.DestroyPreviousStairs(GameObject)","childcount":0,"type":"Method","name":"DestroyPreviousStairs","token":"public void DestroyPreviousStairs(GameObject obj)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Destroy unity scene objects","param-obj":"2d or 3d gameobject"},"params":{"obj":"GameObject"}},{"signature":"ErgoShop.Managers.StairsCreator.GenerateCurvedStairs(float, float, int, float, float, bool, bool)","childcount":0,"type":"Method","name":"GenerateCurvedStairs","token":"public GameObject GenerateCurvedStairs(float innerRadius, float circumference, int steps, float width, float height, bool sidesGoToFloor, bool toTheLeft)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Generate Curved stairs 3D"},"params":{"innerRadius":"float","circumference":"float","steps":"int","width":"float","height":"float","sidesGoToFloor":"bool","toTheLeft":"bool"}},{"signature":"ErgoShop.Managers.StairsCreator.CreateStairs()","childcount":0,"type":"Method","name":"CreateStairs","token":"public void CreateStairs()","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Called by UI"}},{"signature":"ErgoShop.Managers.StairsCreator.LoadStairsFromFloor(Floor)","childcount":0,"type":"Method","name":"LoadStairsFromFloor","token":"public void LoadStairsFromFloor(Floor floor)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Load all stairs of a floor","param-floor":"Floor data"},"params":{"floor":"Floor"}},{"signature":"ErgoShop.Managers.StairsCreator.GetStairsFromGameObject(GameObject)","childcount":0,"type":"Method","name":"GetStairsFromGameObject","token":"public Stairs GetStairsFromGameObject(GameObject go)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Seek all associated objects in stairs to find the Stairs object concerned","returns":"The Stairs data or null if not found","param-go":"Associated Gameobject, can be 2D or 3D"},"params":{"go":"GameObject"}},{"signature":"ErgoShop.Managers.StairsCreator.InstantiateSelf(GameObject)","childcount":0,"type":"Method","name":"InstantiateSelf","token":"public GameObject InstantiateSelf(GameObject associated2DObject)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Instantiate associated object","returns":"instiantiated object","param-associated2DObject":"associated2DObject prefab"},"params":{"associated2DObject":"GameObject"}},{"signature":"ErgoShop.Managers.StairsCreator.DestroyStairs(Stairs)","childcount":0,"type":"Method","name":"DestroyStairs","token":"public void DestroyStairs(Stairs s)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Destroy a stairs by destroying gameobject and set data to null","param-s":"The stairs"},"params":{"s":"Stairs"}},{"signature":"ErgoShop.Managers.StairsCreator.DestroyEverything()","childcount":0,"type":"Method","name":"DestroyEverything","token":"public override void DestroyEverything()","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Destroy every stairs (gameobjects and data)"}},{"signature":"ErgoShop.Managers.StairsCreator.CopyPaste(Element)","childcount":0,"type":"Method","name":"CopyPaste","token":"public override Element CopyPaste(Element stairs)","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Paste a copied stairs by getting a copy and instantiate it, and rebuilding gameobjects","returns":"The new stairs, identical to the copied one","param-m_copiedElement":"Copied stairs"},"params":{"stairs":"Element"}},{"signature":"ErgoShop.Managers.StairsCreator.GetStairs()","childcount":0,"type":"Method","name":"GetStairs","token":"public List<Stairs> GetStairs()","scope":"ErgoShop.Managers.StairsCreator","comments":{"summary":"Get all stairs","returns":"a list containing all stairs"}},{"signature":"ErgoShop.Managers.AllElementsManager","childcount":10,"type":"Class","name":"AllElementsManager","token":"public class AllElementsManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"A script computing all current instantiated Elements\r\n     It is used mostly for saving and loading data from floors and projects"}},{"signature":"ErgoShop.Managers.AllElementsManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static AllElementsManager Instance { get; set; }","scope":"ErgoShop.Managers.AllElementsManager","comments":{"summary":"Instance"}},{"signature":"ErgoShop.Managers.AllElementsManager.m_allElements","childcount":0,"type":"Field","name":"m_allElements","token":"private List<Element> m_allElements ","scope":"ErgoShop.Managers.AllElementsManager"},{"signature":"ErgoShop.Managers.AllElementsManager.AllElements","childcount":0,"type":"Property","name":"AllElements","token":"public List<Element> AllElements { get; }","scope":"ErgoShop.Managers.AllElementsManager","comments":{"summary":"Getting the elements implies finding all elements (without updating ids)"}},{"signature":"ErgoShop.Managers.AllElementsManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.AllElementsManager"},{"signature":"ErgoShop.Managers.AllElementsManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.AllElementsManager"},{"signature":"ErgoShop.Managers.AllElementsManager.UpdateElementsIds()","childcount":0,"type":"Method","name":"UpdateElementsIds","token":"public void UpdateElementsIds()","scope":"ErgoShop.Managers.AllElementsManager","comments":{"summary":"Update ids by setting id equal to position in the list (arbitrary)"}},{"signature":"ErgoShop.Managers.AllElementsManager.UpdateAllElements(bool)","childcount":0,"type":"Method","name":"UpdateAllElements","token":"public void UpdateAllElements(bool updateIds)","scope":"ErgoShop.Managers.AllElementsManager","comments":{"summary":"GET ALL ELEMENTS AND UPDATE THEIR IDS","param-updateIds":"if true, update ids"},"params":{"updateIds":"bool"}},{"signature":"ErgoShop.Managers.AllElementsManager.GetFurnitures()","childcount":0,"type":"Method","name":"GetFurnitures","token":"public List<Furniture> GetFurnitures()","scope":"ErgoShop.Managers.AllElementsManager","comments":{"summary":"Return all element of type Furniture","returns":"a list containing all furnitures"}},{"signature":"ErgoShop.Managers.AllElementsManager.GetElementById(int)","childcount":0,"type":"Method","name":"GetElementById","token":"public Element GetElementById(int id)","scope":"ErgoShop.Managers.AllElementsManager","comments":{"summary":"Finds the element with corresponding id","returns":"the element","param-id":"the id"},"params":{"id":"int"}},{"signature":"ErgoShop.Managers.AllElementsManager.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public string GetDescription()","scope":"ErgoShop.Managers.AllElementsManager","comments":{"summary":"Get all elements descriptions","returns":"a big string containing all descriptions separated by ======="}},{"signature":"ErgoShop.Managers.CharactersCreator","childcount":15,"type":"Class","name":"CharactersCreator","token":"public class CharactersCreator : CreatorBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Manager to create characters (with or without wheelchair)"}},{"signature":"ErgoShop.Managers.CharactersCreator.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static CharactersCreator Instance { get; set; }","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Instance"}},{"signature":"ErgoShop.Managers.CharactersCreator.m_characters","childcount":0,"type":"Field","name":"m_characters","token":"private List<CharacterElement> m_characters ","scope":"ErgoShop.Managers.CharactersCreator"},{"signature":"ErgoShop.Managers.CharactersCreator.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.CharactersCreator"},{"signature":"ErgoShop.Managers.CharactersCreator.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.CharactersCreator"},{"signature":"ErgoShop.Managers.CharactersCreator.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.CharactersCreator"},{"signature":"ErgoShop.Managers.CharactersCreator.DestroyEverything()","childcount":0,"type":"Method","name":"DestroyEverything","token":"public override void DestroyEverything()","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Destroy every element (gameobjects and data)"}},{"signature":"ErgoShop.Managers.CharactersCreator.GetCharacters()","childcount":0,"type":"Method","name":"GetCharacters","token":"public List<CharacterElement> GetCharacters()","scope":"ErgoShop.Managers.CharactersCreator"},{"signature":"ErgoShop.Managers.CharactersCreator.LoadCharactersFromFloor(Floor)","childcount":0,"type":"Method","name":"LoadCharactersFromFloor","token":"public void LoadCharactersFromFloor(Floor floor)","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Load CharacterElement from floor data","param-floor":"Floor"},"params":{"floor":"Floor"}},{"signature":"ErgoShop.Managers.CharactersCreator.CreateNewCharacter()","childcount":0,"type":"Method","name":"CreateNewCharacter","token":"public void CreateNewCharacter()","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Create new character and add it to scene"}},{"signature":"ErgoShop.Managers.CharactersCreator.CreateCharacter3D(CharacterType, bool)","childcount":0,"type":"Method","name":"CreateCharacter3D","token":"public GameObject CreateCharacter3D(CharacterType type, bool spread)","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Instantiate the good prefab mesh according to CharacterType","param-type":"Enum containing 5 types of characters, with or without wheelchair and differents positions"},"params":{"type":"CharacterType","spread":"bool"}},{"signature":"ErgoShop.Managers.CharactersCreator.DestroyGameObject(GameObject)","childcount":0,"type":"Method","name":"DestroyGameObject","token":"public void DestroyGameObject(GameObject go)","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Destroy an associated gameobject 2d 3d","param-go":"any"},"params":{"go":"GameObject"}},{"signature":"ErgoShop.Managers.CharactersCreator.CreateCharacter2D(CharacterType, bool)","childcount":0,"type":"Method","name":"CreateCharacter2D","token":"public GameObject CreateCharacter2D(CharacterType type, bool spread)","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Create the sprite according to the type","returns":"gameobject containing sprite for 2d view","param-type":"char type","param-spread":"spread arms or not"},"params":{"type":"CharacterType","spread":"bool"}},{"signature":"ErgoShop.Managers.CharactersCreator.GetCharacterFromGameObject(GameObject)","childcount":0,"type":"Method","name":"GetCharacterFromGameObject","token":"public CharacterElement GetCharacterFromGameObject(GameObject go)","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Seek all associated objects in characeters to find the CharacterElement object concerned","returns":"The CharacterElement data or null if not found","param-go":"Associated gameobject, can be 2D or 3D"},"params":{"go":"GameObject"}},{"signature":"ErgoShop.Managers.CharactersCreator.DestroyCharacter(CharacterElement)","childcount":0,"type":"Method","name":"DestroyCharacter","token":"public void DestroyCharacter(CharacterElement h)","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Destroy data and gamobjects from a character","param-h":"CharacterElement data"},"params":{"h":"CharacterElement"}},{"signature":"ErgoShop.Managers.CharactersCreator.CopyPaste(Element)","childcount":0,"type":"Method","name":"CopyPaste","token":"public override Element CopyPaste(Element elem)","scope":"ErgoShop.Managers.CharactersCreator","comments":{"summary":"Paste a copied CharacterElement by getting a copy and instantiate it, and rebuilding gameobjects","returns":"The new CharacterElement, identical to the copied one","param-m_copiedElement":"Copied CharacterElement"},"params":{"elem":"Element"}},{"signature":"ErgoShop.Managers.CreatorBehaviour","childcount":2,"type":"Class","name":"CreatorBehaviour","token":"public abstract class CreatorBehaviour : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"MonoBehaviour with methods for all creators\r\n     Mostly for Elements and MovableElements"}},{"signature":"ErgoShop.Managers.CreatorBehaviour.DestroyEverything()","childcount":0,"type":"Method","name":"DestroyEverything","token":"public abstract void DestroyEverything()","scope":"ErgoShop.Managers.CreatorBehaviour","comments":{"summary":"Destroy every element (gameobjects and data)"}},{"signature":"ErgoShop.Managers.CreatorBehaviour.CopyPaste(Element)","childcount":0,"type":"Method","name":"CopyPaste","token":"public abstract Element CopyPaste(Element elem)","scope":"ErgoShop.Managers.CreatorBehaviour","comments":{"summary":"Paste a copied element by getting a copy and instantiate it, and rebuilding gameobjects","returns":"The new element, identical to the copied one","param-m_copiedElement":"Copied element"},"params":{"elem":"Element"}},{"signature":"ErgoShop.Managers.FloorsCreator","childcount":8,"type":"Class","name":"FloorsCreator","token":"public class FloorsCreator : CreatorBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Currently NOT USED"}},{"signature":"ErgoShop.Managers.FloorsCreator.m_floorsData","childcount":0,"type":"Field","name":"m_floorsData","token":"private List<Floor> m_floorsData ","scope":"ErgoShop.Managers.FloorsCreator"},{"signature":"ErgoShop.Managers.FloorsCreator.CurrentFloor","childcount":0,"type":"Property","name":"CurrentFloor","token":"public Floor CurrentFloor { get; set; }","scope":"ErgoShop.Managers.FloorsCreator"},{"signature":"ErgoShop.Managers.FloorsCreator.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static FloorsCreator Instance { get; set; }","scope":"ErgoShop.Managers.FloorsCreator"},{"signature":"ErgoShop.Managers.FloorsCreator.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.FloorsCreator"},{"signature":"ErgoShop.Managers.FloorsCreator.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.FloorsCreator"},{"signature":"ErgoShop.Managers.FloorsCreator.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.FloorsCreator"},{"signature":"ErgoShop.Managers.FloorsCreator.DestroyEverything()","childcount":0,"type":"Method","name":"DestroyEverything","token":"public override void DestroyEverything()","scope":"ErgoShop.Managers.FloorsCreator"},{"signature":"ErgoShop.Managers.FloorsCreator.CopyPaste(Element)","childcount":0,"type":"Method","name":"CopyPaste","token":"public override Element CopyPaste(Element elem)","scope":"ErgoShop.Managers.FloorsCreator","params":{"elem":"Element"}},{"signature":"ErgoShop.Managers.GlobalManager","childcount":23,"type":"Class","name":"GlobalManager","token":"public class GlobalManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Main class used for software runtime"}},{"signature":"ErgoShop.Managers.GlobalManager.cam2DTop","childcount":0,"type":"Field","name":"cam2DTop","token":"public GameObject cam2DTop ","scope":"ErgoShop.Managers.GlobalManager"},{"signature":"ErgoShop.Managers.GlobalManager.cam3D","childcount":0,"type":"Field","name":"cam3D","token":"public GameObject cam3D ","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Cam 3D"}},{"signature":"ErgoShop.Managers.GlobalManager.grid","childcount":0,"type":"Field","name":"grid","token":"public GameObject grid ","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Grid object to show or hide (2D)"}},{"signature":"ErgoShop.Managers.GlobalManager.previewTexture1","childcount":0,"type":"Field","name":"previewTexture1","token":"public RenderTexture previewTexture1 ","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"The unused camera is rendered in a texture"}},{"signature":"ErgoShop.Managers.GlobalManager.m_mode","childcount":0,"type":"Field","name":"m_mode","token":"private ViewMode m_mode ","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Current view"}},{"signature":"ErgoShop.Managers.GlobalManager.eventSystem","childcount":0,"type":"Property","name":"eventSystem","token":"public EventSystem eventSystem { get; set; }","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Event system used for UI / Scene mouse management"}},{"signature":"ErgoShop.Managers.GlobalManager.handTexture","childcount":0,"type":"Field","name":"handTexture","token":"public Texture2D handTexture ","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Texture for cursor"}},{"signature":"ErgoShop.Managers.GlobalManager.arrowsTexture","childcount":0,"type":"Field","name":"arrowsTexture","token":"public Texture2D arrowsTexture ","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Texture for cursor"}},{"signature":"ErgoShop.Managers.GlobalManager.plusTexture","childcount":0,"type":"Field","name":"plusTexture","token":"public Texture2D plusTexture ","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Texture for cursor"}},{"signature":"ErgoShop.Managers.GlobalManager.Instance","childcount":0,"type":"Field","name":"Instance","token":"public static GlobalManager Instance ","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Instance"}},{"signature":"ErgoShop.Managers.GlobalManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.GlobalManager"},{"signature":"ErgoShop.Managers.GlobalManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.GlobalManager"},{"signature":"ErgoShop.Managers.GlobalManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.GlobalManager"},{"signature":"ErgoShop.Managers.GlobalManager.SwitchViewMode()","childcount":0,"type":"Method","name":"SwitchViewMode","token":"public void SwitchViewMode()","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Switch between 2D and 3D"}},{"signature":"ErgoShop.Managers.GlobalManager.Set3DMode()","childcount":0,"type":"Method","name":"Set3DMode","token":"public void Set3DMode()","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Switch to 3D view"}},{"signature":"ErgoShop.Managers.GlobalManager.Set2DTopMode()","childcount":0,"type":"Method","name":"Set2DTopMode","token":"public void Set2DTopMode()","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Switch to 2D view"}},{"signature":"ErgoShop.Managers.GlobalManager.UpdateRoomHeight(string)","childcount":0,"type":"Method","name":"UpdateRoomHeight","token":"public void UpdateRoomHeight(string heightText)","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Update room height PARAMETERS (project -> software settings)"},"params":{"heightText":"string"}},{"signature":"ErgoShop.Managers.GlobalManager.UpdateCursor(bool)","childcount":0,"type":"Method","name":"UpdateCursor","token":"public void UpdateCursor(bool isElementArrow)","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Change cursor according to context","param-isElementArrow":"Force changing to hand"},"params":{"isElementArrow":"bool"}},{"signature":"ErgoShop.Managers.GlobalManager.GetActiveCamera()","childcount":0,"type":"Method","name":"GetActiveCamera","token":"public Camera GetActiveCamera()","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Returns active Camera component according to view"}},{"signature":"ErgoShop.Managers.GlobalManager.Is3D()","childcount":0,"type":"Method","name":"Is3D","token":"public bool Is3D()","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Are we in 3D ?","returns":"true if 3D"}},{"signature":"ErgoShop.Managers.GlobalManager.CanCameraMove(Camera2DMove)","childcount":0,"type":"Method","name":"CanCameraMove","token":"public bool CanCameraMove(Camera2DMove cam)","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Check all managers to see if camera must be locked or not","returns":"true if camera can move"},"params":{"cam":"Camera2DMove"}},{"signature":"ErgoShop.Managers.GlobalManager.CanCameraMove(Camera3DMove)","childcount":0,"type":"Method","name":"CanCameraMove","token":"public bool CanCameraMove(Camera3DMove cam)","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Check all managers to see if camera must be locked or not","returns":"true if camera can move"},"params":{"cam":"Camera3DMove"}},{"signature":"ErgoShop.Managers.GlobalManager.GetCurrentMode()","childcount":0,"type":"Method","name":"GetCurrentMode","token":"public ViewMode GetCurrentMode()","scope":"ErgoShop.Managers.GlobalManager","comments":{"summary":"Current view","returns":"2d/3d"}},{"signature":"ErgoShop.Managers.GroupsManager","childcount":15,"type":"Class","name":"GroupsManager","token":"public class GroupsManager : CreatorBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Manager for groups, creation, suppression..."}},{"signature":"ErgoShop.Managers.GroupsManager.m_groups","childcount":0,"type":"Field","name":"m_groups","token":"private List<ElementGroup> m_groups ","scope":"ErgoShop.Managers.GroupsManager"},{"signature":"ErgoShop.Managers.GroupsManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static GroupsManager Instance { get; set; }","scope":"ErgoShop.Managers.GroupsManager"},{"signature":"ErgoShop.Managers.GroupsManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.GroupsManager"},{"signature":"ErgoShop.Managers.GroupsManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.GroupsManager"},{"signature":"ErgoShop.Managers.GroupsManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.GroupsManager"},{"signature":"ErgoShop.Managers.GroupsManager.CheckGroups()","childcount":0,"type":"Method","name":"CheckGroups","token":"private void CheckGroups()","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Check for duplicates, and destroy them"}},{"signature":"ErgoShop.Managers.GroupsManager.CreateGroup(List<Element>)","childcount":0,"type":"Method","name":"CreateGroup","token":"public ElementGroup CreateGroup(List<Element> elementsToAdd)","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Create a group from list of elements","returns":"The group","param-elementsToAdd":"Elements to group"},"params":{"elementsToAdd":"List<Element>"}},{"signature":"ErgoShop.Managers.GroupsManager.GetGroupFromGameObject(GameObject)","childcount":0,"type":"Method","name":"GetGroupFromGameObject","token":"public ElementGroup GetGroupFromGameObject(GameObject go)","scope":"ErgoShop.Managers.GroupsManager","params":{"go":"GameObject"}},{"signature":"ErgoShop.Managers.GroupsManager.GetGroupFromElement(Element)","childcount":0,"type":"Method","name":"GetGroupFromElement","token":"public ElementGroup GetGroupFromElement(Element e)","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Seek all elements in groups to find the ElementGroup object concerned","returns":"The ElementGroup data or null if not found","param-e":"Element you want to find its group"},"params":{"e":"Element"}},{"signature":"ErgoShop.Managers.GroupsManager.RemoveGroup(ElementGroup)","childcount":0,"type":"Method","name":"RemoveGroup","token":"public void RemoveGroup(ElementGroup groupToRemove)","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Delete association without destroying elements"},"params":{"groupToRemove":"ElementGroup"}},{"signature":"ErgoShop.Managers.GroupsManager.IsElementGrouped(Element)","childcount":0,"type":"Method","name":"IsElementGrouped","token":"public bool IsElementGrouped(Element e)","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Is the element in a group ?","returns":"true if is grouped","param-e":"the element"},"params":{"e":"Element"}},{"signature":"ErgoShop.Managers.GroupsManager.GetGroups()","childcount":0,"type":"Method","name":"GetGroups","token":"public List<ElementGroup> GetGroups()","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Get all groups in the current floor"}},{"signature":"ErgoShop.Managers.GroupsManager.LoadGroupsFromFloor(Floor)","childcount":0,"type":"Method","name":"LoadGroupsFromFloor","token":"public void LoadGroupsFromFloor(Floor floor)","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Load all groups in a given floor. Does not instantiate the elements but try to find them and update the references"},"params":{"floor":"Floor"}},{"signature":"ErgoShop.Managers.GroupsManager.DestroyEverything()","childcount":0,"type":"Method","name":"DestroyEverything","token":"public override void DestroyEverything()","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Disband all groups without deleting elements"}},{"signature":"ErgoShop.Managers.GroupsManager.CopyPaste(Element)","childcount":0,"type":"Method","name":"CopyPaste","token":"public override Element CopyPaste(Element elem)","scope":"ErgoShop.Managers.GroupsManager","comments":{"summary":"Paste a copied Group by getting a copy and instantiate it, and rebuilding gameobjects","returns":"The new ElementGroup, identical to the copied one","param-m_copiedElement":"Copied ElementGroup"},"params":{"elem":"Element"}},{"signature":"ErgoShop.Managers.HelpersCreator","childcount":21,"type":"Class","name":"HelpersCreator","token":"public class HelpersCreator : CreatorBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Manager to create HelperElements. For now the only HelperElement is a textzone, but it can evolve"}},{"signature":"ErgoShop.Managers.HelpersCreator.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static HelpersCreator Instance { get; set; }","scope":"ErgoShop.Managers.HelpersCreator"},{"signature":"ErgoShop.Managers.HelpersCreator.textZonePrefab","childcount":0,"type":"Field","name":"textZonePrefab","token":"public GameObject textZonePrefab ","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Prefab to instantiate a textzone"}},{"signature":"ErgoShop.Managers.HelpersCreator.m_helpers","childcount":0,"type":"Field","name":"m_helpers","token":"private List<HelperElement> m_helpers ","scope":"ErgoShop.Managers.HelpersCreator"},{"signature":"ErgoShop.Managers.HelpersCreator.currentElement","childcount":0,"type":"Field","name":"currentElement","token":"private HelperElement currentElement ","scope":"ErgoShop.Managers.HelpersCreator"},{"signature":"ErgoShop.Managers.HelpersCreator.m_isCreating","childcount":0,"type":"Field","name":"m_isCreating","token":"private bool m_isCreating ","scope":"ErgoShop.Managers.HelpersCreator"},{"signature":"ErgoShop.Managers.HelpersCreator.m_startPoint","childcount":0,"type":"Field","name":"m_startPoint","token":"private Vector3 m_startPoint ","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Info to drag a text zone"}},{"signature":"ErgoShop.Managers.HelpersCreator.m_isDragging","childcount":0,"type":"Field","name":"m_isDragging","token":"private bool m_isDragging ","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Currently dragging?"}},{"signature":"ErgoShop.Managers.HelpersCreator.m_endPoint","childcount":0,"type":"Field","name":"m_endPoint","token":"private Vector3 m_endPoint ","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"End of dragging to define a rectangle startpoint->endpoint"}},{"signature":"ErgoShop.Managers.HelpersCreator.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.HelpersCreator"},{"signature":"ErgoShop.Managers.HelpersCreator.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.HelpersCreator"},{"signature":"ErgoShop.Managers.HelpersCreator.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.HelpersCreator"},{"signature":"ErgoShop.Managers.HelpersCreator.GetHelpers()","childcount":0,"type":"Method","name":"GetHelpers","token":"public List<HelperElement> GetHelpers()","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Get all helpers"}},{"signature":"ErgoShop.Managers.HelpersCreator.IsOccupied()","childcount":0,"type":"Method","name":"IsOccupied","token":"public bool IsOccupied()","scope":"ErgoShop.Managers.HelpersCreator"},{"signature":"ErgoShop.Managers.HelpersCreator.LoadHelpersFromFloor(Floor)","childcount":0,"type":"Method","name":"LoadHelpersFromFloor","token":"public void LoadHelpersFromFloor(Floor floor)","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Load all helpers of a given floor"},"params":{"floor":"Floor"}},{"signature":"ErgoShop.Managers.HelpersCreator.CopyPaste(Element)","childcount":0,"type":"Method","name":"CopyPaste","token":"public override Element CopyPaste(Element tz)","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Copy Paste an helper","param-tz":"For now, it can be only a textzone"},"params":{"tz":"Element"}},{"signature":"ErgoShop.Managers.HelpersCreator.CreateTextZone()","childcount":0,"type":"Method","name":"CreateTextZone","token":"private void CreateTextZone()","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Create a new text zone. Its a comment zone shown in both views."}},{"signature":"ErgoShop.Managers.HelpersCreator.StartCreateTextZone()","childcount":0,"type":"Method","name":"StartCreateTextZone","token":"public void StartCreateTextZone()","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"First click : start of the text zone"}},{"signature":"ErgoShop.Managers.HelpersCreator.DestroyHelpers(HelperElement)","childcount":0,"type":"Method","name":"DestroyHelpers","token":"public void DestroyHelpers(HelperElement h)","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Destroy gameobject and helper data","param-h":"HelperElement data"},"params":{"h":"HelperElement"}},{"signature":"ErgoShop.Managers.HelpersCreator.GetHelperFromGameObject(GameObject)","childcount":0,"type":"Method","name":"GetHelperFromGameObject","token":"public HelperElement GetHelperFromGameObject(GameObject go)","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Seek in all helpers if associated 2d or 3d object is go, and return the good one","returns":"HelperElement data corresponding","param-go":"associated object 2d 3d"},"params":{"go":"GameObject"}},{"signature":"ErgoShop.Managers.HelpersCreator.RebuildTextZone(TextZoneElement)","childcount":0,"type":"Method","name":"RebuildTextZone","token":"public void RebuildTextZone(TextZoneElement tz)","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Build text zone from data","param-tz":"TextZoneElement"},"params":{"tz":"TextZoneElement"}},{"signature":"ErgoShop.Managers.HelpersCreator.DestroyEverything()","childcount":0,"type":"Method","name":"DestroyEverything","token":"public override void DestroyEverything()","scope":"ErgoShop.Managers.HelpersCreator","comments":{"summary":"Delete all gamobjects and data"}},{"signature":"ErgoShop.Managers.ImportManager","childcount":13,"type":"Class","name":"ImportManager","token":"public class ImportManager : MonoBehaviour ","scope":"ErgoShop.Managers"},{"signature":"ErgoShop.Managers.ImportManager.CustomFurniturePrefab","childcount":0,"type":"Field","name":"CustomFurniturePrefab","token":"public GameObject CustomFurniturePrefab ","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.CustomFurnitureButton","childcount":0,"type":"Field","name":"CustomFurnitureButton","token":"public GameObject CustomFurnitureButton ","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.modelsListContent","childcount":0,"type":"Field","name":"modelsListContent","token":"public GameObject modelsListContent ","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.customFurnituresList","childcount":0,"type":"Field","name":"customFurnituresList","token":"public List<GameObject> customFurnituresList ","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.furnitureDefaultListContent","childcount":0,"type":"Field","name":"furnitureDefaultListContent","token":"public GameObject furnitureDefaultListContent ","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static ImportManager Instance { get; set; }","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.ImportManager"},{"signature":"ErgoShop.Managers.ImportManager.UpdateList()","childcount":0,"type":"Method","name":"UpdateList","token":"public void UpdateList()","scope":"ErgoShop.Managers.ImportManager","comments":{"summary":"Update the list in software settings when a custom furniture is deleted or added"}},{"signature":"ErgoShop.Managers.ImportManager.ImportNewObject()","childcount":0,"type":"Method","name":"ImportNewObject","token":"public void ImportNewObject()","scope":"ErgoShop.Managers.ImportManager","comments":{"summary":"Select an obj file in browser and waits for a name"}},{"signature":"ErgoShop.Managers.ImportManager.GetGameObjectFromCustomObject(CustomFurniture)","childcount":0,"type":"Method","name":"GetGameObjectFromCustomObject","token":"public GameObject GetGameObjectFromCustomObject(CustomFurniture cf)","scope":"ErgoShop.Managers.ImportManager","comments":{"summary":"Loads the obj file contained in cf.Path","returns":"GameObject (without colliders !)","param-cf":"CustomFurniture we want to load"},"params":{"cf":"CustomFurniture"}},{"signature":"ErgoShop.Managers.ImportManager.WaitForName(string)","childcount":0,"type":"Method","name":"WaitForName","token":"private IEnumerator WaitForName(string filePath)","scope":"ErgoShop.Managers.ImportManager","comments":{"summary":"Waits for user entering a name in inputfield then copy paste the obj file in AppData\r\n         Also Saves the path and name entered in software settings","returns":"(coroutine)","param-filePath":"the path we got in ImportNewObject() method"},"params":{"filePath":"string"}},{"signature":"ErgoShop.Managers.MeasureManager","childcount":15,"type":"Class","name":"MeasureManager","token":"public class MeasureManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Manager to do user measures in both 2d and 3d view"}},{"signature":"ErgoShop.Managers.MeasureManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static MeasureManager Instance { get; set; }","scope":"ErgoShop.Managers.MeasureManager"},{"signature":"ErgoShop.Managers.MeasureManager.IsMesuring","childcount":0,"type":"Property","name":"IsMesuring","token":"public bool IsMesuring { get; set; }","scope":"ErgoShop.Managers.MeasureManager"},{"signature":"ErgoShop.Managers.MeasureManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.MeasureManager"},{"signature":"ErgoShop.Managers.MeasureManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.MeasureManager"},{"signature":"ErgoShop.Managers.MeasureManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"Update checks each frame if we are measuring"}},{"signature":"ErgoShop.Managers.MeasureManager.CancelMeasure()","childcount":0,"type":"Method","name":"CancelMeasure","token":"public void CancelMeasure()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"Right click to cancel a measure (hide it)"}},{"signature":"ErgoShop.Managers.MeasureManager.PutFirstPoint2D()","childcount":0,"type":"Method","name":"PutFirstPoint2D","token":"public void PutFirstPoint2D()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"Start 2D measure"}},{"signature":"ErgoShop.Managers.MeasureManager.PutSecondPoint2D()","childcount":0,"type":"Method","name":"PutSecondPoint2D","token":"public void PutSecondPoint2D()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"End 2D measure"}},{"signature":"ErgoShop.Managers.MeasureManager.PutFirstPoint3D()","childcount":0,"type":"Method","name":"PutFirstPoint3D","token":"public void PutFirstPoint3D()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"Start 3d measure"}},{"signature":"ErgoShop.Managers.MeasureManager.PutSecondPoint3D()","childcount":0,"type":"Method","name":"PutSecondPoint3D","token":"public void PutSecondPoint3D()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"End 3d measure"}},{"signature":"ErgoShop.Managers.MeasureManager.Hide2D()","childcount":0,"type":"Method","name":"Hide2D","token":"public void Hide2D()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"Hide the sprite & text for 2D"}},{"signature":"ErgoShop.Managers.MeasureManager.Hide3D()","childcount":0,"type":"Method","name":"Hide3D","token":"public void Hide3D()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"Hide the sprite & text for 3D"}},{"signature":"ErgoShop.Managers.MeasureManager.Hide()","childcount":0,"type":"Method","name":"Hide","token":"private void Hide()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"Hide all 2d and 3d"}},{"signature":"ErgoShop.Managers.MeasureManager.Measure2D()","childcount":0,"type":"Method","name":"Measure2D","token":"public void Measure2D()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"When users click on measure button 2d\r\n         Will trigger the PutFirstPoint2D() method when Update"}},{"signature":"ErgoShop.Managers.MeasureManager.Measure3D()","childcount":0,"type":"Method","name":"Measure3D","token":"public void Measure3D()","scope":"ErgoShop.Managers.MeasureManager","comments":{"summary":"When users click on measure button 3d\r\n         Will trigger the PutFirstPoint3D() method when Update"}},{"signature":"ErgoShop.Managers.ProjectManager","childcount":34,"type":"Class","name":"ProjectManager","token":"public class ProjectManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Manager to handle file load and save. Uses Newtonsoft.Json"}},{"signature":"ErgoShop.Managers.ProjectManager.Project","childcount":0,"type":"Property","name":"Project","token":"public Project Project { get; set; }","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Current Project"}},{"signature":"ErgoShop.Managers.ProjectManager.filePath","childcount":0,"type":"Field","name":"filePath","token":"private string filePath ","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.m_currentFilePath","childcount":0,"type":"Field","name":"m_currentFilePath","token":"private string m_currentFilePath ","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.m_folderAutoSave","childcount":0,"type":"Field","name":"m_folderAutoSave","token":"private string m_folderAutoSave ","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.popin","childcount":0,"type":"Field","name":"popin","token":"public ConfirmationPopinScript popin ","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.newpopin","childcount":0,"type":"Field","name":"newpopin","token":"public NewProjectConfirmationPopin newpopin ","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.Instance","childcount":0,"type":"Field","name":"Instance","token":"public static ProjectManager Instance ","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.WantsToQuit()","childcount":0,"type":"Method","name":"WantsToQuit","token":"static bool WantsToQuit()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Catch any user input to quit the software (with ALT+F4 or the close button)\r\n         And checks if diplay save warning or not"}},{"signature":"ErgoShop.Managers.ProjectManager.RunOnStart()","childcount":0,"type":"Method","name":"RunOnStart","token":"[RuntimeInitializeOnLoadMethod]\nstatic void RunOnStart()","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.ShowConfirmationPopin(bool)","childcount":0,"type":"Method","name":"ShowConfirmationPopin","token":"private void ShowConfirmationPopin(bool gonew)","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"UI popin to confirm the project change"},"params":{"gonew":"bool"}},{"signature":"ErgoShop.Managers.ProjectManager.SetNewProject()","childcount":0,"type":"Method","name":"SetNewProject","token":"public void SetNewProject()","scope":"ErgoShop.Managers.ProjectManager"},{"signature":"ErgoShop.Managers.ProjectManager.NewFile()","childcount":0,"type":"Method","name":"NewFile","token":"public void NewFile()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Restart software after confirmation"}},{"signature":"ErgoShop.Managers.ProjectManager.IsLastSaveChanged()","childcount":0,"type":"Method","name":"IsLastSaveChanged","token":"private bool IsLastSaveChanged()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Check if auto save if different from last save"}},{"signature":"ErgoShop.Managers.ProjectManager.LoadProject()","childcount":0,"type":"Method","name":"LoadProject","token":"public void LoadProject()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Show confirmation then load a file into project"}},{"signature":"ErgoShop.Managers.ProjectManager.ExportProjectOnODTFile()","childcount":0,"type":"Method","name":"ExportProjectOnODTFile","token":"public void ExportProjectOnODTFile()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Export project into odt file"}},{"signature":"ErgoShop.Managers.ProjectManager.ExportToOdt(string)","childcount":0,"type":"Method","name":"ExportToOdt","token":"public void ExportToOdt(string filePath)","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Build the odt file"},"params":{"filePath":"string"}},{"signature":"ErgoShop.Managers.ProjectManager.ExportProjectOnTxtFile()","childcount":0,"type":"Method","name":"ExportProjectOnTxtFile","token":"public void ExportProjectOnTxtFile()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Export project into a txt file"}},{"signature":"ErgoShop.Managers.ProjectManager.GetExportTxt()","childcount":0,"type":"Method","name":"GetExportTxt","token":"public string GetExportTxt()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Build the txt file","returns":"string containing all descriptions and data"}},{"signature":"ErgoShop.Managers.ProjectManager.LoadAutoSave(AutoSave)","childcount":0,"type":"Method","name":"LoadAutoSave","token":"public void LoadAutoSave(AutoSave auto)","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Load an autosave for the cancel / redo system"},"params":{"auto":"AutoSave"}},{"signature":"ErgoShop.Managers.ProjectManager.LoadProjectForReal()","childcount":0,"type":"Method","name":"LoadProjectForReal","token":"public bool LoadProjectForReal()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Loads a json file into Project"}},{"signature":"ErgoShop.Managers.ProjectManager.LoadFromCurrentFloor()","childcount":0,"type":"Method","name":"LoadFromCurrentFloor","token":"public void LoadFromCurrentFloor()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Set all elements of all creators and rebuild all scene data"}},{"signature":"ErgoShop.Managers.ProjectManager.SaveProjectNoCheck()","childcount":0,"type":"Method","name":"SaveProjectNoCheck","token":"public void SaveProjectNoCheck()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"SaveProject without checking if data would be lost"}},{"signature":"ErgoShop.Managers.ProjectManager.SaveCurrentFile()","childcount":0,"type":"Method","name":"SaveCurrentFile","token":"public void SaveCurrentFile()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Save without asking for name/path"}},{"signature":"ErgoShop.Managers.ProjectManager.SaveCurrentFileAs()","childcount":0,"type":"Method","name":"SaveCurrentFileAs","token":"public void SaveCurrentFileAs()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Save as (user defines path/name)"}},{"signature":"ErgoShop.Managers.ProjectManager.SaveCurrentFileAsAutoSave()","childcount":0,"type":"Method","name":"SaveCurrentFileAsAutoSave","token":"public AutoSave SaveCurrentFileAsAutoSave()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Create new autosave EVERYTIME an action is made on project\r\n         Currently, autosaves are only used for cancel/redo system"}},{"signature":"ErgoShop.Managers.ProjectManager.SaveProject(string, bool)","childcount":0,"type":"Method","name":"SaveProject","token":"public bool SaveProject(string path = \"\", bool isAuto = false)","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Save project in json format at path","param-path":"file path","param-isAuto":"is auto save for cancel redo ?"},"params":{"path":"string","isAuto":"bool"}},{"signature":"ErgoShop.Managers.ProjectManager.SaveCurrentFloor()","childcount":0,"type":"Method","name":"SaveCurrentFloor","token":"public void SaveCurrentFloor()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Copy data (make new references) and stores them in Project"}},{"signature":"ErgoShop.Managers.ProjectManager.SetCurrentFloor(int)","childcount":0,"type":"Method","name":"SetCurrentFloor","token":"public void SetCurrentFloor(int v)","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Destroy current floor and load another one","param-v":"floor id"},"params":{"v":"int"}},{"signature":"ErgoShop.Managers.ProjectManager.AddFloor(string, bool, string, float)","childcount":0,"type":"Method","name":"AddFloor","token":"public void AddFloor(string floorName, bool hasToCopyOtherFloor, string copyName, float wheight)","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Creates a new floor, and set current floor to it","param-floorName":"Name","param-hasToCopyOtherFloor":"Copy walls of another floor ?","param-copyName":"Name of the floor you want to copy the walls","param-wheight":"Wall height"},"params":{"floorName":"string","hasToCopyOtherFloor":"bool","copyName":"string","wheight":"float"}},{"signature":"ErgoShop.Managers.ProjectManager.DestroyEverything()","childcount":0,"type":"Method","name":"DestroyEverything","token":"public void DestroyEverything()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Ask every creator to delete its data and gameobjects"}},{"signature":"ErgoShop.Managers.ProjectManager.GetAutoSaveFolderPath()","childcount":0,"type":"Method","name":"GetAutoSaveFolderPath","token":"public string GetAutoSaveFolderPath()","scope":"ErgoShop.Managers.ProjectManager","comments":{"summary":"Path to %appdata%/ErgoShop/Autosaves"}},{"signature":"ErgoShop.Managers.RuntimeManager","childcount":0,"type":"Class","name":"RuntimeManager","token":"public class RuntimeManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Currently not used"}},{"signature":"ErgoShop.Managers.Screenshot","childcount":14,"type":"Class","name":"Screenshot","token":"public class Screenshot : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Manager to handle screenshot system"}},{"signature":"ErgoShop.Managers.Screenshot.resWidth","childcount":0,"type":"Field","name":"resWidth","token":"public int resWidth ","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.resHeight","childcount":0,"type":"Field","name":"resHeight","token":"public int resHeight ","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.folderPath","childcount":0,"type":"Field","name":"folderPath","token":"public string folderPath ","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.folderText","childcount":0,"type":"Field","name":"folderText","token":"public Text folderText ","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static Screenshot Instance { get; set; }","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.Start()","childcount":0,"type":"Method","name":"Start","token":"private void Start()","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.Update()","childcount":0,"type":"Method","name":"Update","token":"private void Update()","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.GetScreenShotName()","childcount":0,"type":"Method","name":"GetScreenShotName","token":"public string GetScreenShotName()","scope":"ErgoShop.Managers.Screenshot","comments":{"summary":"Get complete path with name for screenshot file"}},{"signature":"ErgoShop.Managers.Screenshot.GetNameWithoutNumber()","childcount":0,"type":"Method","name":"GetNameWithoutNumber","token":"private string GetNameWithoutNumber()","scope":"ErgoShop.Managers.Screenshot","comments":{"summary":"Build a name for the screenshot with date"}},{"signature":"ErgoShop.Managers.Screenshot.GetNumber()","childcount":0,"type":"Method","name":"GetNumber","token":"public string GetNumber()","scope":"ErgoShop.Managers.Screenshot","comments":{"summary":"Increment number if same screenshot"}},{"signature":"ErgoShop.Managers.Screenshot.LateUpdate()","childcount":0,"type":"Method","name":"LateUpdate","token":"void LateUpdate()","scope":"ErgoShop.Managers.Screenshot"},{"signature":"ErgoShop.Managers.Screenshot.SetFolderPath()","childcount":0,"type":"Method","name":"SetFolderPath","token":"public void SetFolderPath()","scope":"ErgoShop.Managers.Screenshot","comments":{"summary":"Set a folder path to store screenshots and save the path in software settings"}},{"signature":"ErgoShop.Managers.Screenshot.TakeScreenshot()","childcount":0,"type":"Method","name":"TakeScreenshot","token":"public void TakeScreenshot()","scope":"ErgoShop.Managers.Screenshot","comments":{"summary":"Take a screenshot using RenderTexture and save it"}},{"signature":"ErgoShop.Managers.SelectedObjectManager","childcount":88,"type":"Class","name":"SelectedObjectManager","token":"public class SelectedObjectManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Select objects and update properties\r\n     Works with EVERY type of Element"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.m_elementsToMove","childcount":0,"type":"Field","name":"m_elementsToMove","token":"private List<MovableElement> m_elementsToMove ","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Contains the elements the user wants to move with mouse"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.m_timerDoucleClick","childcount":0,"type":"Field","name":"m_timerDoucleClick","token":"private float m_timerDoucleClick ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.m_currentTimerMove","childcount":0,"type":"Field","name":"m_currentTimerMove","token":"private float m_currentTimerMove ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.m_currentPlacingFurniture","childcount":0,"type":"Field","name":"m_currentPlacingFurniture","token":"private Furniture m_currentPlacingFurniture ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.cotations3D","childcount":0,"type":"Field","name":"cotations3D","token":"private CurrentCotation3DScript cotations3D ","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"automatic measures in 3D"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.m_copiedElements","childcount":0,"type":"Field","name":"m_copiedElements","token":"private List<Element> m_copiedElements ","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Elements the users wants to copy paste"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentSelectedElements","childcount":0,"type":"Field","name":"currentSelectedElements","token":"public List<Element> currentSelectedElements ","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Selected elements of several types"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentWallsData","childcount":0,"type":"Field","name":"currentWallsData","token":"public List<Wall> currentWallsData ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentFurnitureData","childcount":0,"type":"Field","name":"currentFurnitureData","token":"public List<Furniture> currentFurnitureData ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentElementGroups","childcount":0,"type":"Field","name":"currentElementGroups","token":"public List<ElementGroup> currentElementGroups ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentWallOpenings","childcount":0,"type":"Field","name":"currentWallOpenings","token":"public List<WallOpening> currentWallOpenings ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentStairs","childcount":0,"type":"Field","name":"currentStairs","token":"public List<Stairs> currentStairs ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentHelperElements","childcount":0,"type":"Field","name":"currentHelperElements","token":"public List<HelperElement> currentHelperElements ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentCharacters","childcount":0,"type":"Field","name":"currentCharacters","token":"public List<CharacterElement> currentCharacters ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentRoomData","childcount":0,"type":"Field","name":"currentRoomData","token":"public Room currentRoomData ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentHoveredElementGo","childcount":0,"type":"Field","name":"currentHoveredElementGo","token":"public GameObject currentHoveredElementGo ","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Element hovered by the mouse, outlined in blue"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.currentCotation","childcount":0,"type":"Field","name":"currentCotation","token":"public CotationsScript currentCotation ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.doubleClickSpeed","childcount":0,"type":"Field","name":"doubleClickSpeed","token":"public float doubleClickSpeed ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.moveFurnitureTimer","childcount":0,"type":"Field","name":"moveFurnitureTimer","token":"public float moveFurnitureTimer ","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.cotationPrefab","childcount":0,"type":"Field","name":"cotationPrefab","token":"public GameObject cotationPrefab ","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Prefab to show object measures"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static SelectedObjectManager Instance { get; set; }","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.SelectedObjectManager"},{"signature":"ErgoShop.Managers.SelectedObjectManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update method handles everything to do with a selected object :\r\n         1) Double click to focus view on selection\r\n         2) If we are currently selecting with a drag n drop, Reset selection and seek elements in the bounds of the selection\r\n         3) Show hovered element, check if clicking to select it, and finally update our lists and measures\r\n         4) Check what objects need to be outlined\r\n         5) Move elements if user hold the click\r\n         6) Check CTRL C CTRL V\r\n         7) Check Suppr\r\n         8) Check focus\r\n         9) Check cancel selection\r\n         10) check cotation edition to update position"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ReFocusCoroutine()","childcount":0,"type":"Method","name":"ReFocusCoroutine","token":"private IEnumerator ReFocusCoroutine()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Refocus 0.1 second after focus command"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DoubleClick()","childcount":0,"type":"Method","name":"DoubleClick","token":"private void DoubleClick()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Double click will focus view on selection"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.CheckAffectations()","childcount":0,"type":"Method","name":"CheckAffectations","token":"private void CheckAffectations()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Outline selected objects"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.GetHoveredGameObject()","childcount":0,"type":"Method","name":"GetHoveredGameObject","token":"private GameObject GetHoveredGameObject()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Get hovered gameobject by mouse"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.HoverOnObject()","childcount":0,"type":"Method","name":"HoverOnObject","token":"private void HoverOnObject()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Outline in blue the object hovered"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ClickOnObject()","childcount":0,"type":"Method","name":"ClickOnObject","token":"private void ClickOnObject()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"If click on object : select it\r\n         If CTRL is maintained,"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.UpdateUIProperties()","childcount":0,"type":"Method","name":"UpdateUIProperties","token":"private void UpdateUIProperties()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update the UI shown according to selected element"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.MoveElements()","childcount":0,"type":"Method","name":"MoveElements","token":"private void MoveElements()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Move elements if users clicks and hold on the selection"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.CheckRoomFromWalls(List<Wall>)","childcount":0,"type":"Method","name":"CheckRoomFromWalls","token":"private Room CheckRoomFromWalls(List<Wall> currentWallsData)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Seek room containing all the walls","param-currentWallsData":"the walls"},"params":{"currentWallsData":"List<Wall>"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SWLRoutine(Wall, float, bool)","childcount":0,"type":"Method","name":"SWLRoutine","token":"public IEnumerator SWLRoutine(Wall w, float res, bool updateMin)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update wall length coroutine"},"params":{"w":"Wall","res":"float","updateMin":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.UpdateCharacterSize()","childcount":0,"type":"Method","name":"UpdateCharacterSize","token":"public void UpdateCharacterSize()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update element size when updating ui"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.UpdateFurnitureSize()","childcount":0,"type":"Method","name":"UpdateFurnitureSize","token":"public void UpdateFurnitureSize()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update element size when updating ui"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.UpdateFurnitureName()","childcount":0,"type":"Method","name":"UpdateFurnitureName","token":"public void UpdateFurnitureName()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update element name when updating ui"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SetRectangularRoom()","childcount":0,"type":"Method","name":"SetRectangularRoom","token":"public void SetRectangularRoom()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Not used !"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.UpdateCotationsAndSelectedElements()","childcount":0,"type":"Method","name":"UpdateCotationsAndSelectedElements","token":"public void UpdateCotationsAndSelectedElements()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update all lists"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.FocusOnSelectionFace()","childcount":0,"type":"Method","name":"FocusOnSelectionFace","token":"public void FocusOnSelectionFace()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Focus 3d view face"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.FocusOnSelection()","childcount":0,"type":"Method","name":"FocusOnSelection","token":"public void FocusOnSelection()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Focus 3d/2d view top"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.GetSelectedElementsCenter()","childcount":0,"type":"Method","name":"GetSelectedElementsCenter","token":"private Vector3 GetSelectedElementsCenter()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Return mean of every element position"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.CenterCameraInRoom()","childcount":0,"type":"Method","name":"CenterCameraInRoom","token":"public void CenterCameraInRoom()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"seek room center and move camera in the center"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ToggleGroupSelection(bool)","childcount":0,"type":"Method","name":"ToggleGroupSelection","token":"public void ToggleGroupSelection(bool v)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Group or ungroup according to the checkbox state","param-v":"Checkbox isOn"},"params":{"v":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.GroupSelection()","childcount":0,"type":"Method","name":"GroupSelection","token":"private void GroupSelection()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Group the selection by asking groupmanager"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.UnGroupSelection()","childcount":0,"type":"Method","name":"UnGroupSelection","token":"private void UnGroupSelection()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"unGroup the selection by asking groupmanager"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetSelection()","childcount":0,"type":"Method","name":"ResetSelection","token":"public void ResetSelection()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Reset selection by clearing all lists"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DeleteSelectedElements()","childcount":0,"type":"Method","name":"DeleteSelectedElements","token":"public void DeleteSelectedElements()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Destroy objects and data in selected elements"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ToggleRoomCotations(bool)","childcount":0,"type":"Method","name":"ToggleRoomCotations","token":"public void ToggleRoomCotations(bool v)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Show or Hide the room measures according to the checkbox state","param-v":"Checkbox isOn"},"params":{"v":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ToggleSelectedElementsVisibility(bool)","childcount":0,"type":"Method","name":"ToggleSelectedElementsVisibility","token":"public void ToggleSelectedElementsVisibility(bool v)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Show or Hide elements according to the checkbox state (the eye)","param-v":"Checkbox isOn"},"params":{"v":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ToggleSelectedElementsLockState(bool)","childcount":0,"type":"Method","name":"ToggleSelectedElementsLockState","token":"public void ToggleSelectedElementsLockState(bool v)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Group or ungroup according to the checkbox state","param-v":"Checkbox isOn"},"params":{"v":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.IsOccupied()","childcount":0,"type":"Method","name":"IsOccupied","token":"public bool IsOccupied()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"","returns":"true if user is moving elements"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.Select(Stairs)","childcount":0,"type":"Method","name":"Select","token":"public void Select(Stairs s)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Add manually elements in selection"},"params":{"s":"Stairs"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.Select(ElementGroup)","childcount":0,"type":"Method","name":"Select","token":"public void Select(ElementGroup g)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Add manually elements in selection"},"params":{"g":"ElementGroup"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.Select(CharacterElement)","childcount":0,"type":"Method","name":"Select","token":"public void Select(CharacterElement character)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Add manually elements in selection"},"params":{"character":"CharacterElement"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.Select(Room)","childcount":0,"type":"Method","name":"Select","token":"public void Select(Room r)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Add manually elements in selection"},"params":{"r":"Room"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetWalls()","childcount":0,"type":"Method","name":"ResetWalls","token":"public void ResetWalls()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Reset selection"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SetRoomFromWalls(bool)","childcount":0,"type":"Method","name":"SetRoomFromWalls","token":"public void SetRoomFromWalls(bool makeRoom)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Create room from walls (without verification) or remove room data","param-makeRoom":"make or not room"},"params":{"makeRoom":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SetWallsColor(Button)","childcount":0,"type":"Method","name":"SetWallsColor","token":"public void SetWallsColor(Button b)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update wall color from button color (which color is based on color picker)"},"params":{"b":"Button"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SetGroundColor(Button)","childcount":0,"type":"Method","name":"SetGroundColor","token":"public void SetGroundColor(Button b)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update ground color from button color (which color is based on color picker)"},"params":{"b":"Button"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DeleteWalls()","childcount":0,"type":"Method","name":"DeleteWalls","token":"public void DeleteWalls()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"delete"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DeleteRoom()","childcount":0,"type":"Method","name":"DeleteRoom","token":"public void DeleteRoom()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"delete"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SetRoomName(string)","childcount":0,"type":"Method","name":"SetRoomName","token":"public void SetRoomName(string t)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update room name from ui"},"params":{"t":"string"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SetRoomAngles90(bool)","childcount":0,"type":"Method","name":"SetRoomAngles90","token":"public void SetRoomAngles90(bool v)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Lock angles or not (doesn't have to be 90)"},"params":{"v":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.Select(Furniture, bool)","childcount":0,"type":"Method","name":"Select","token":"public void Select(Furniture f, bool place = true)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Select furniture and moves it if place","param-f":"Furniture data","param-place":"move it or not"},"params":{"f":"Furniture","place":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.PlaceFurniture(bool)","childcount":0,"type":"Method","name":"PlaceFurniture","token":"public void PlaceFurniture(bool init = false)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Move furniture"},"params":{"init":"bool"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetFurnitures()","childcount":0,"type":"Method","name":"ResetFurnitures","token":"public void ResetFurnitures()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"reset"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetCotations()","childcount":0,"type":"Method","name":"ResetCotations","token":"public void ResetCotations()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"hide cotation"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetWallOpening()","childcount":0,"type":"Method","name":"ResetWallOpening","token":"public void ResetWallOpening()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"reset"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetHelpers()","childcount":0,"type":"Method","name":"ResetHelpers","token":"public void ResetHelpers()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"reset"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetCharacters()","childcount":0,"type":"Method","name":"ResetCharacters","token":"public void ResetCharacters()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"reset"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetGroups()","childcount":0,"type":"Method","name":"ResetGroups","token":"public void ResetGroups()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"reset"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.ResetStairs()","childcount":0,"type":"Method","name":"ResetStairs","token":"public void ResetStairs()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"reset"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DeleteWallOpening()","childcount":0,"type":"Method","name":"DeleteWallOpening","token":"public void DeleteWallOpening()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"delete"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DeleteStairs()","childcount":0,"type":"Method","name":"DeleteStairs","token":"public void DeleteStairs()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"delete"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DeleteHelpers()","childcount":0,"type":"Method","name":"DeleteHelpers","token":"public void DeleteHelpers()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"delete"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DeleteCharacters()","childcount":0,"type":"Method","name":"DeleteCharacters","token":"public void DeleteCharacters()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"delete"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.DeleteFurnitures()","childcount":0,"type":"Method","name":"DeleteFurnitures","token":"public void DeleteFurnitures()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"delete"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.HasNoSelection()","childcount":0,"type":"Method","name":"HasNoSelection","token":"public bool HasNoSelection()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"check if has selection or not"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SetCurrentCotation(CotationsScript)","childcount":0,"type":"Method","name":"SetCurrentCotation","token":"public void SetCurrentCotation(CotationsScript cs)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":""},"params":{"cs":"CotationsScript"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.UpdateCurrentCotation(string)","childcount":0,"type":"Method","name":"UpdateCurrentCotation","token":"public void UpdateCurrentCotation(string value)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Update element position according to modified cotation from user"},"params":{"value":"string"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.Adjust2DElementFrom3DCoroutine(MovableElement)","childcount":0,"type":"Method","name":"Adjust2DElementFrom3DCoroutine","token":"private IEnumerator Adjust2DElementFrom3DCoroutine(MovableElement me)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Updates 2d position from 3d position"},"params":{"me":"MovableElement"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.SplitWall()","childcount":0,"type":"Method","name":"SplitWall","token":"public void SplitWall()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"not used"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.IsGoInSelectedElements(GameObject)","childcount":0,"type":"Method","name":"IsGoInSelectedElements","token":"private bool IsGoInSelectedElements(GameObject go)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"seeks gameobject in selection","returns":"true if found in selection","param-go":"gameobject"},"params":{"go":"GameObject"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.CopyElementToClipboard(Element)","childcount":0,"type":"Method","name":"CopyElementToClipboard","token":"private string CopyElementToClipboard(Element elem)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"copy selected elements","returns":"Description of elements to put in windows clipboard"},"params":{"elem":"Element"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.CopyElementsToClipboard()","childcount":0,"type":"Method","name":"CopyElementsToClipboard","token":"public void CopyElementsToClipboard()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"We can copy everything except walls\r\n         The elements are copied both in software and also in windows clipboard (text)"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.PasteElement()","childcount":0,"type":"Method","name":"PasteElement","token":"public void PasteElement()","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Instantiate a new element from copied ones"}},{"signature":"ErgoShop.Managers.SelectedObjectManager.CopyPasteElementWithManager(Element)","childcount":0,"type":"Method","name":"CopyPasteElementWithManager","token":"public Element CopyPasteElementWithManager(Element elem)","scope":"ErgoShop.Managers.SelectedObjectManager","comments":{"summary":"Called by PasteElement"},"params":{"elem":"Element"}},{"signature":"ErgoShop.Managers.SelectionManager","childcount":14,"type":"Class","name":"SelectionManager","token":"public class SelectionManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Class to draw a rectangle to select several elements\r\n     Is used by SelectedObjectManagers"}},{"signature":"ErgoShop.Managers.SelectionManager._whiteTexture","childcount":0,"type":"Field","name":"_whiteTexture","token":"static Texture2D _whiteTexture ","scope":"ErgoShop.Managers.SelectionManager","comments":{"summary":"Texture used to show what we are selecting"}},{"signature":"ErgoShop.Managers.SelectionManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static SelectionManager Instance { get; set; }","scope":"ErgoShop.Managers.SelectionManager"},{"signature":"ErgoShop.Managers.SelectionManager.IsSelecting","childcount":0,"type":"Field","name":"IsSelecting","token":"public bool IsSelecting ","scope":"ErgoShop.Managers.SelectionManager"},{"signature":"ErgoShop.Managers.SelectionManager.firstPosition","childcount":0,"type":"Field","name":"firstPosition","token":"private Vector3 firstPosition ","scope":"ErgoShop.Managers.SelectionManager"},{"signature":"ErgoShop.Managers.SelectionManager.firstClickOk","childcount":0,"type":"Field","name":"firstClickOk","token":"private bool firstClickOk ","scope":"ErgoShop.Managers.SelectionManager"},{"signature":"ErgoShop.Managers.SelectionManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.SelectionManager"},{"signature":"ErgoShop.Managers.SelectionManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.SelectionManager"},{"signature":"ErgoShop.Managers.SelectionManager.OnGUI()","childcount":0,"type":"Method","name":"OnGUI","token":"void OnGUI()","scope":"ErgoShop.Managers.SelectionManager","comments":{"summary":"Draw function"}},{"signature":"ErgoShop.Managers.SelectionManager.IsWithinSelectionBounds(Vector3)","childcount":0,"type":"Method","name":"IsWithinSelectionBounds","token":"public bool IsWithinSelectionBounds(Vector3 position)","scope":"ErgoShop.Managers.SelectionManager","comments":{"summary":"Check if a position is between our selection rectangle bounds"},"params":{"position":"Vector3"}},{"signature":"ErgoShop.Managers.SelectionManager.GetViewportBounds(Camera, Vector3, Vector3)","childcount":0,"type":"Method","name":"GetViewportBounds","token":"public static Bounds GetViewportBounds(Camera camera, Vector3 screenPosition1, Vector3 screenPosition2)","scope":"ErgoShop.Managers.SelectionManager","comments":{"summary":"Get bounds from camera and rectangle positions"},"params":{"camera":"Camera","screenPosition1":"Vector3","screenPosition2":"Vector3"}},{"signature":"ErgoShop.Managers.SelectionManager.DrawScreenRectBorder(Rect, float, Color)","childcount":0,"type":"Method","name":"DrawScreenRectBorder","token":"public static void DrawScreenRectBorder(Rect rect, float thickness, Color color)","scope":"ErgoShop.Managers.SelectionManager","comments":{"summary":"Draws border for rectangle selection"},"params":{"rect":"Rect","thickness":"float","color":"Color"}},{"signature":"ErgoShop.Managers.SelectionManager.GetScreenRect(Vector3, Vector3)","childcount":0,"type":"Method","name":"GetScreenRect","token":"public static Rect GetScreenRect(Vector3 screenPosition1, Vector3 screenPosition2)","scope":"ErgoShop.Managers.SelectionManager","comments":{"summary":"Get screen rectangle to help setting viewport"},"params":{"screenPosition1":"Vector3","screenPosition2":"Vector3"}},{"signature":"ErgoShop.Managers.SelectionManager.WhiteTexture","childcount":0,"type":"Property","name":"WhiteTexture","token":"public static Texture2D WhiteTexture { get; }","scope":"ErgoShop.Managers.SelectionManager"},{"signature":"ErgoShop.Managers.SelectionManager.DrawScreenRect(Rect, Color)","childcount":0,"type":"Method","name":"DrawScreenRect","token":"public static void DrawScreenRect(Rect rect, Color color)","scope":"ErgoShop.Managers.SelectionManager","comments":{"summary":"Draw rectangle"},"params":{"rect":"Rect","color":"Color"}},{"signature":"ErgoShop.Managers.SettingsManager","childcount":10,"type":"Class","name":"SettingsManager","token":"public class SettingsManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Manager to handle sotftware settings\r\n     Settings are splitted into two categories :\r\n         -> Project Settings, stored in Project file\r\n         -> Software Settings, stored in appdata in another json file"}},{"signature":"ErgoShop.Managers.SettingsManager.SoftwareParameters","childcount":0,"type":"Property","name":"SoftwareParameters","token":"public ErgoShopParameters SoftwareParameters { get; set; }","scope":"ErgoShop.Managers.SettingsManager","comments":{"summary":"Software settings"}},{"signature":"ErgoShop.Managers.SettingsManager.LoadOK","childcount":0,"type":"Property","name":"LoadOK","token":"public bool LoadOK { get; set; }","scope":"ErgoShop.Managers.SettingsManager"},{"signature":"ErgoShop.Managers.SettingsManager.m_folder","childcount":0,"type":"Field","name":"m_folder","token":"private string m_folder ","scope":"ErgoShop.Managers.SettingsManager"},{"signature":"ErgoShop.Managers.SettingsManager.m_jsonPath","childcount":0,"type":"Field","name":"m_jsonPath","token":"private string m_jsonPath ","scope":"ErgoShop.Managers.SettingsManager"},{"signature":"ErgoShop.Managers.SettingsManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static SettingsManager Instance { get; set; }","scope":"ErgoShop.Managers.SettingsManager"},{"signature":"ErgoShop.Managers.SettingsManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.SettingsManager"},{"signature":"ErgoShop.Managers.SettingsManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.SettingsManager"},{"signature":"ErgoShop.Managers.SettingsManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.SettingsManager"},{"signature":"ErgoShop.Managers.SettingsManager.LoadParameters()","childcount":0,"type":"Method","name":"LoadParameters","token":"public bool LoadParameters()","scope":"ErgoShop.Managers.SettingsManager","comments":{"summary":"Load parameters from json file. If none is found, create a new one","returns":"true if parameters found"}},{"signature":"ErgoShop.Managers.SettingsManager.SaveParameters()","childcount":0,"type":"Method","name":"SaveParameters","token":"public void SaveParameters()","scope":"ErgoShop.Managers.SettingsManager","comments":{"summary":"Save parameters into json file"}},{"signature":"ErgoShop.Managers.UIManager","childcount":21,"type":"Class","name":"UIManager","token":"public class UIManager : MonoBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"Main UI Manager\r\n     Used to show / hide the several parts of software UI\r\n     Also shows help into screen bottom"}},{"signature":"ErgoShop.Managers.UIManager.stairsForm","childcount":0,"type":"Field","name":"stairsForm","token":"public GameObject stairsForm ","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.focusFaceButton","childcount":0,"type":"Field","name":"focusFaceButton","token":"public Button focusFaceButton ","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.screenShotMessage","childcount":0,"type":"Field","name":"screenShotMessage","token":"public Text screenShotMessage ","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.cotationField","childcount":0,"type":"Field","name":"cotationField","token":"public InputField cotationField ","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static UIManager Instance { get; set; }","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.SetInstructionsText()","childcount":0,"type":"Method","name":"SetInstructionsText","token":"private void SetInstructionsText()","scope":"ErgoShop.Managers.UIManager","comments":{"summary":"Updates instructions when no selection context"}},{"signature":"ErgoShop.Managers.UIManager.CheckTogglesColors()","childcount":0,"type":"Method","name":"CheckTogglesColors","token":"private void CheckTogglesColors()","scope":"ErgoShop.Managers.UIManager","comments":{"summary":"Updates view buttons colors"}},{"signature":"ErgoShop.Managers.UIManager.ResetTopForms()","childcount":0,"type":"Method","name":"ResetTopForms","token":"public void ResetTopForms()","scope":"ErgoShop.Managers.UIManager","comments":{"summary":"Hide forms"}},{"signature":"ErgoShop.Managers.UIManager.ShowProjectForm()","childcount":0,"type":"Method","name":"ShowProjectForm","token":"public void ShowProjectForm()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.ShowFloorsForm()","childcount":0,"type":"Method","name":"ShowFloorsForm","token":"public void ShowFloorsForm()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.ShowOthersForm()","childcount":0,"type":"Method","name":"ShowOthersForm","token":"public void ShowOthersForm()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.ShowWallsForm()","childcount":0,"type":"Method","name":"ShowWallsForm","token":"public void ShowWallsForm()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.ShowScreenShotOK(string)","childcount":0,"type":"Method","name":"ShowScreenShotOK","token":"public void ShowScreenShotOK(string filename)","scope":"ErgoShop.Managers.UIManager","params":{"filename":"string"}},{"signature":"ErgoShop.Managers.UIManager.ShowMergeRoomsMessage()","childcount":0,"type":"Method","name":"ShowMergeRoomsMessage","token":"public void ShowMergeRoomsMessage()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.ShowStringBox(string)","childcount":0,"type":"Method","name":"ShowStringBox","token":"public void ShowStringBox(string message)","scope":"ErgoShop.Managers.UIManager","params":{"message":"string"}},{"signature":"ErgoShop.Managers.UIManager.ShowSaveOK()","childcount":0,"type":"Method","name":"ShowSaveOK","token":"public void ShowSaveOK()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.UIManager.ShowCustomMessage(string)","childcount":0,"type":"Method","name":"ShowCustomMessage","token":"public void ShowCustomMessage(string message)","scope":"ErgoShop.Managers.UIManager","params":{"message":"string"}},{"signature":"ErgoShop.Managers.UIManager.ShowHideScreenShotMessage(float)","childcount":0,"type":"Method","name":"ShowHideScreenShotMessage","token":"private IEnumerator ShowHideScreenShotMessage(float time)","scope":"ErgoShop.Managers.UIManager","params":{"time":"float"}},{"signature":"ErgoShop.Managers.UIManager.ShowFurnitureForm()","childcount":0,"type":"Method","name":"ShowFurnitureForm","token":"public void ShowFurnitureForm()","scope":"ErgoShop.Managers.UIManager"},{"signature":"ErgoShop.Managers.WallsCreator","childcount":68,"type":"Class","name":"WallsCreator","token":"public class WallsCreator : CreatorBehaviour ","scope":"ErgoShop.Managers","comments":{"summary":"CREATOR FOR WALLS AND ROOMS"}},{"signature":"ErgoShop.Managers.WallsCreator.angleSnap","childcount":0,"type":"Field","name":"angleSnap","token":"public float angleSnap ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.roomTextPrefab","childcount":0,"type":"Field","name":"roomTextPrefab","token":"public GameObject roomTextPrefab ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.wallTextPrefab","childcount":0,"type":"Field","name":"wallTextPrefab","token":"public GameObject wallTextPrefab ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.wb","childcount":0,"type":"Field","name":"wb","token":"public WallButtonsActiveScript wb ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.cotationPrefab","childcount":0,"type":"Field","name":"cotationPrefab","token":"public GameObject cotationPrefab ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.angleScriptPrefab","childcount":0,"type":"Field","name":"angleScriptPrefab","token":"public GameObject angleScriptPrefab ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.polyShapePrefab","childcount":0,"type":"Field","name":"polyShapePrefab","token":"public GameObject polyShapePrefab ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.wallOpeningAngleScriptPrefab","childcount":0,"type":"Field","name":"wallOpeningAngleScriptPrefab","token":"public GameObject wallOpeningAngleScriptPrefab ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.wallOpeningAngleScript3DPrefab","childcount":0,"type":"Field","name":"wallOpeningAngleScript3DPrefab","token":"public GameObject wallOpeningAngleScript3DPrefab ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static WallsCreator Instance { get; set; }","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_currentWallData","childcount":0,"type":"Field","name":"m_currentWallData","token":"private Wall m_currentWallData ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_currentRoomData","childcount":0,"type":"Field","name":"m_currentRoomData","token":"private Room m_currentRoomData ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_currentWallOpeningData","childcount":0,"type":"Field","name":"m_currentWallOpeningData","token":"private WallOpening m_currentWallOpeningData ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_currentWallIdx","childcount":0,"type":"Field","name":"m_currentWallIdx","token":"private int m_currentWallIdx ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_polygonalRoom","childcount":0,"type":"Field","name":"m_polygonalRoom","token":"private bool m_polygonalRoom ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_beginPolyRoom","childcount":0,"type":"Field","name":"m_beginPolyRoom","token":"private Vector3 m_beginPolyRoom ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_potentialPolyRoom","childcount":0,"type":"Field","name":"m_potentialPolyRoom","token":"private List<Wall> m_potentialPolyRoom ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.snapTol","childcount":0,"type":"Field","name":"snapTol","token":"private float snapTol ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_creationMode","childcount":0,"type":"Field","name":"m_creationMode","token":"private WallType m_creationMode ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_wallsData","childcount":0,"type":"Field","name":"m_wallsData","token":"private List<Wall> m_wallsData ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_roomsData","childcount":0,"type":"Field","name":"m_roomsData","token":"private List<Room> m_roomsData ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_anglesData","childcount":0,"type":"Field","name":"m_anglesData","token":"private List<AngleScript> m_anglesData ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_woAnglesData","childcount":0,"type":"Field","name":"m_woAnglesData","token":"private List<WallOpeningAngleScript> m_woAnglesData ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.m_woAngles3DData","childcount":0,"type":"Field","name":"m_woAngles3DData","token":"private List<WallOpeningAngleScript> m_woAngles3DData ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.UpdateCeils()","childcount":0,"type":"Method","name":"UpdateCeils","token":"private void UpdateCeils()","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"Show Ceils only if camera IN room"}},{"signature":"ErgoShop.Managers.WallsCreator.Creation()","childcount":0,"type":"Method","name":"Creation","token":"private void Creation()","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"Create wall and rooms"}},{"signature":"ErgoShop.Managers.WallsCreator.UpdateTextFromCreationMode()","childcount":0,"type":"Method","name":"UpdateTextFromCreationMode","token":"private void UpdateTextFromCreationMode()","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"Update instructions in screen bottom"}},{"signature":"ErgoShop.Managers.WallsCreator.ProcessWallOpening(bool)","childcount":0,"type":"Method","name":"ProcessWallOpening","token":"private void ProcessWallOpening(bool isWindow)","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"Creation wall opening"},"params":{"isWindow":"bool"}},{"signature":"ErgoShop.Managers.WallsCreator.SetWallOpeningEnd(bool)","childcount":0,"type":"Method","name":"SetWallOpeningEnd","token":"private void SetWallOpeningEnd(bool isWindow)","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":""},"params":{"isWindow":"bool"}},{"signature":"ErgoShop.Managers.WallsCreator.InstantiateWallOpening(WallOpening)","childcount":0,"type":"Method","name":"InstantiateWallOpening","token":"public void InstantiateWallOpening(WallOpening wo)","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"Create gameobjects"},"params":{"wo":"WallOpening"}},{"signature":"ErgoShop.Managers.WallsCreator.AdjustWallOpening(bool)","childcount":0,"type":"Method","name":"AdjustWallOpening","token":"private void AdjustWallOpening(bool isWindow)","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"Adjust during creation (first move)"},"params":{"isWindow":"bool"}},{"signature":"ErgoShop.Managers.WallsCreator.ProcessWallCreation()","childcount":0,"type":"Method","name":"ProcessWallCreation","token":"private void ProcessWallCreation()","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"create wall"}},{"signature":"ErgoShop.Managers.WallsCreator.ProcessRoomCreation()","childcount":0,"type":"Method","name":"ProcessRoomCreation","token":"private void ProcessRoomCreation()","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"create room"}},{"signature":"ErgoShop.Managers.WallsCreator.CancelWallOpening()","childcount":0,"type":"Method","name":"CancelWallOpening","token":"private void CancelWallOpening()","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"cancel wall"}},{"signature":"ErgoShop.Managers.WallsCreator.CancelRoom()","childcount":0,"type":"Method","name":"CancelRoom","token":"private void CancelRoom()","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"cancel room by destroying current walls"}},{"signature":"ErgoShop.Managers.WallsCreator.CancelWall()","childcount":0,"type":"Method","name":"CancelWall","token":"private void CancelWall()","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"cancel wall by destroying gamobjct"}},{"signature":"ErgoShop.Managers.WallsCreator.SetRoomStart(bool)","childcount":0,"type":"Method","name":"SetRoomStart","token":"private void SetRoomStart(bool setStart = true)","scope":"ErgoShop.Managers.WallsCreator","params":{"setStart":"bool"}},{"signature":"ErgoShop.Managers.WallsCreator.SetWallStart()","childcount":0,"type":"Method","name":"SetWallStart","token":"private void SetWallStart()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.SetRoomEnd()","childcount":0,"type":"Method","name":"SetRoomEnd","token":"private void SetRoomEnd()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.SetWallEnd()","childcount":0,"type":"Method","name":"SetWallEnd","token":"private void SetWallEnd()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.SetCreationModeNone()","childcount":0,"type":"Method","name":"SetCreationModeNone","token":"private void SetCreationModeNone()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.StickWalls(Wall, Wall)","childcount":0,"type":"Method","name":"StickWalls","token":"private void StickWalls(Wall oldWall, Wall newWall)","scope":"ErgoShop.Managers.WallsCreator","params":{"oldWall":"Wall","newWall":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.CreateRoomFromWidthAndHeight()","childcount":0,"type":"Method","name":"CreateRoomFromWidthAndHeight","token":"public void CreateRoomFromWidthAndHeight()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.AdjustRoom(bool)","childcount":0,"type":"Method","name":"AdjustRoom","token":"private void AdjustRoom(bool setEnd = true)","scope":"ErgoShop.Managers.WallsCreator","params":{"setEnd":"bool"}},{"signature":"ErgoShop.Managers.WallsCreator.AdjustWall()","childcount":0,"type":"Method","name":"AdjustWall","token":"private void AdjustWall()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.AdjustGroundsAndCeils()","childcount":0,"type":"Method","name":"AdjustGroundsAndCeils","token":"public void AdjustGroundsAndCeils()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.AdjustAllWalls()","childcount":0,"type":"Method","name":"AdjustAllWalls","token":"public void AdjustAllWalls()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.SetUIZoomWidthsAndAngles()","childcount":0,"type":"Method","name":"SetUIZoomWidthsAndAngles","token":"public void SetUIZoomWidthsAndAngles()","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Managers.WallsCreator.AdjustWallVertices(Wall)","childcount":0,"type":"Method","name":"AdjustWallVertices","token":"private void AdjustWallVertices(Wall w)","scope":"ErgoShop.Managers.WallsCreator","params":{"w":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.CreateWallPartsForWallOpening(WallOpening)","childcount":0,"type":"Method","name":"CreateWallPartsForWallOpening","token":"private void CreateWallPartsForWallOpening(WallOpening wopening)","scope":"ErgoShop.Managers.WallsCreator","params":{"wopening":"WallOpening"}},{"signature":"ErgoShop.Managers.WallsCreator.SnapStartingPosition(Vector3, float, bool)","childcount":0,"type":"Method","name":"SnapStartingPosition","token":"private Vector3 SnapStartingPosition(Vector3 pos, float dist = 1, bool isStart = false)","scope":"ErgoShop.Managers.WallsCreator","params":{"pos":"Vector3","dist":"float","isStart":"bool"}},{"signature":"ErgoShop.Managers.WallsCreator.SnapPosition(Vector3, Vector3, float)","childcount":0,"type":"Method","name":"SnapPosition","token":"private Vector3 SnapPosition(Vector3 end, Vector3 begin, float angleTol = 5)","scope":"ErgoShop.Managers.WallsCreator","params":{"end":"Vector3","begin":"Vector3","angleTol":"float"}},{"signature":"ErgoShop.Managers.WallsCreator.ClearWallGraphics(Wall)","childcount":0,"type":"Method","name":"ClearWallGraphics","token":"private void ClearWallGraphics(Wall w)","scope":"ErgoShop.Managers.WallsCreator","params":{"w":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.DestroyWallOpening(WallOpening)","childcount":0,"type":"Method","name":"DestroyWallOpening","token":"public void DestroyWallOpening(WallOpening wo)","scope":"ErgoShop.Managers.WallsCreator","params":{"wo":"WallOpening"}},{"signature":"ErgoShop.Managers.WallsCreator.DestroyWall(Wall, bool)","childcount":0,"type":"Method","name":"DestroyWall","token":"public void DestroyWall(Wall w, bool updateRoom = true)","scope":"ErgoShop.Managers.WallsCreator","params":{"w":"Wall","updateRoom":"bool"}},{"signature":"ErgoShop.Managers.WallsCreator.UpdateAngles(Wall, Wall)","childcount":0,"type":"Method","name":"UpdateAngles","token":"private void UpdateAngles(Wall w1, Wall w2)","scope":"ErgoShop.Managers.WallsCreator","params":{"w1":"Wall","w2":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.UpdateWallOpeningAngles(WallOpening)","childcount":0,"type":"Method","name":"UpdateWallOpeningAngles","token":"private void UpdateWallOpeningAngles(WallOpening wo)","scope":"ErgoShop.Managers.WallsCreator","params":{"wo":"WallOpening"}},{"signature":"ErgoShop.Managers.WallsCreator.UpdateWallCotation(Wall)","childcount":0,"type":"Method","name":"UpdateWallCotation","token":"private void UpdateWallCotation(Wall w)","scope":"ErgoShop.Managers.WallsCreator","params":{"w":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.UpdateDetailedWallCotation(Wall)","childcount":0,"type":"Method","name":"UpdateDetailedWallCotation","token":"private void UpdateDetailedWallCotation(Wall w)","scope":"ErgoShop.Managers.WallsCreator","params":{"w":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.CopyPaste(Element)","childcount":0,"type":"Method","name":"CopyPaste","token":"public override Element CopyPaste(Element m_copiedElement)","scope":"ErgoShop.Managers.WallsCreator","params":{"m_copiedElement":"Element"}},{"signature":"ErgoShop.Managers.WallsCreator.UpdateSimplifiedWallCotation(Wall)","childcount":0,"type":"Method","name":"UpdateSimplifiedWallCotation","token":"private void UpdateSimplifiedWallCotation(Wall w)","scope":"ErgoShop.Managers.WallsCreator","params":{"w":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.ShootRayFrom(Vector3, Vector3, Wall)","childcount":0,"type":"Method","name":"ShootRayFrom","token":"private Vector3 ShootRayFrom(Vector3 origin, Vector3 dir, Wall w)","scope":"ErgoShop.Managers.WallsCreator","params":{"origin":"Vector3","dir":"Vector3","w":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.UpdateRoomsFromDestroyedWall(Wall)","childcount":0,"type":"Method","name":"UpdateRoomsFromDestroyedWall","token":"private void UpdateRoomsFromDestroyedWall(Wall w)","scope":"ErgoShop.Managers.WallsCreator","comments":{"summary":"If a wall gets destroyed, check rooms and disband those who had this wall"},"params":{"w":"Wall"}},{"signature":"ErgoShop.Managers.WallsCreator.DestroyRoom(Room)","childcount":0,"type":"Method","name":"DestroyRoom","token":"public void DestroyRoom(Room r)","scope":"ErgoShop.Managers.WallsCreator","params":{"r":"Room"}},{"signature":"ErgoShop.Managers.WallsCreator.dist","childcount":0,"type":"Field","name":"dist","token":"float dist ","scope":"ErgoShop.Managers.WallsCreator"},{"signature":"ErgoShop.Utils","childcount":39,"type":"Namespace","name":"ErgoShop.Utils","token":"namespace ErgoShop.Utils","scope":"","comments":{"summary":"Enums"}},{"signature":"ErgoShop.Utils.FurnitureScript","childcount":8,"type":"Class","name":"FurnitureScript","token":"public class FurnitureScript : MonoBehaviour ","scope":"ErgoShop.Utils","comments":{"summary":"MonoBehaviour to make prefabs for furniture"}},{"signature":"ErgoShop.Utils.FurnitureScript.furniture2DTop","childcount":0,"type":"Field","name":"furniture2DTop","token":"public GameObject furniture2DTop ","scope":"ErgoShop.Utils.FurnitureScript","comments":{"summary":"Sprite for 2D View"}},{"signature":"ErgoShop.Utils.FurnitureScript.furniture3D","childcount":0,"type":"Field","name":"furniture3D","token":"public GameObject furniture3D ","scope":"ErgoShop.Utils.FurnitureScript","comments":{"summary":"Mesh"}},{"signature":"ErgoShop.Utils.FurnitureScript.isOnWall","childcount":0,"type":"Field","name":"isOnWall","token":"public bool isOnWall ","scope":"ErgoShop.Utils.FurnitureScript","comments":{"summary":"Put on a wall (like a painting...)"}},{"signature":"ErgoShop.Utils.FurnitureScript.canBePutOnFurniture","childcount":0,"type":"Field","name":"canBePutOnFurniture","token":"public bool canBePutOnFurniture ","scope":"ErgoShop.Utils.FurnitureScript","comments":{"summary":"Can be put on another furniture (like a microwave on a table)"}},{"signature":"ErgoShop.Utils.FurnitureScript.furnitureName","childcount":0,"type":"Field","name":"furnitureName","token":"public string furnitureName ","scope":"ErgoShop.Utils.FurnitureScript","comments":{"summary":"Displayed name"}},{"signature":"ErgoShop.Utils.FurnitureScript.furnitureType","childcount":0,"type":"Field","name":"furnitureType","token":"public string furnitureType ","scope":"ErgoShop.Utils.FurnitureScript","comments":{"summary":"Type (assise, eau, cuisine, ...)"}},{"signature":"ErgoShop.Utils.FurnitureScript.resourceName","childcount":0,"type":"Field","name":"resourceName","token":"public string resourceName ","scope":"ErgoShop.Utils.FurnitureScript","comments":{"summary":"Resource name for runtime loading"}},{"signature":"ErgoShop.Utils.FurnitureScript.scaleRatio","childcount":0,"type":"Field","name":"scaleRatio","token":"public float scaleRatio ","scope":"ErgoShop.Utils.FurnitureScript","comments":{"summary":"Runtime scaling for big meshs"}},{"signature":"ErgoShop.Utils.CollectionFunctions","childcount":0,"type":"Class","name":"CollectionFunctions","token":"public static class CollectionFunctions ","scope":"ErgoShop.Utils","comments":{"summary":"Not used"}},{"signature":"ErgoShop.Utils.WallType","childcount":5,"type":"Enum","name":"WallType","token":"public enum WallType ","scope":"ErgoShop.Utils","comments":{"summary":"used to create wall or opening"}},{"signature":"ErgoShop.Utils.WallType.Wall","childcount":0,"type":"EnumValue","name":"Wall","token":"Wall","scope":"ErgoShop.Utils.WallType"},{"signature":"ErgoShop.Utils.WallType.Door","childcount":0,"type":"EnumValue","name":"Door","token":"Door","scope":"ErgoShop.Utils.WallType"},{"signature":"ErgoShop.Utils.WallType.Window","childcount":0,"type":"EnumValue","name":"Window","token":"Window","scope":"ErgoShop.Utils.WallType"},{"signature":"ErgoShop.Utils.WallType.Room","childcount":0,"type":"EnumValue","name":"Room","token":"Room","scope":"ErgoShop.Utils.WallType"},{"signature":"ErgoShop.Utils.WallType.None","childcount":0,"type":"EnumValue","name":"None","token":"None","scope":"ErgoShop.Utils.WallType"},{"signature":"ErgoShop.Utils.CharacterType","childcount":5,"type":"Enum","name":"CharacterType","token":"public enum CharacterType ","scope":"ErgoShop.Utils","comments":{"summary":"Enum containing 5 types of characters, with or without wheelchair and differents positions"}},{"signature":"ErgoShop.Utils.CharacterType.StandUp","childcount":0,"type":"EnumValue","name":"StandUp","token":"StandUp","scope":"ErgoShop.Utils.CharacterType"},{"signature":"ErgoShop.Utils.CharacterType.Sitting","childcount":0,"type":"EnumValue","name":"Sitting","token":"Sitting","scope":"ErgoShop.Utils.CharacterType"},{"signature":"ErgoShop.Utils.CharacterType.LyingDown","childcount":0,"type":"EnumValue","name":"LyingDown","token":"LyingDown","scope":"ErgoShop.Utils.CharacterType"},{"signature":"ErgoShop.Utils.CharacterType.OnWheelChair","childcount":0,"type":"EnumValue","name":"OnWheelChair","token":"OnWheelChair","scope":"ErgoShop.Utils.CharacterType"},{"signature":"ErgoShop.Utils.CharacterType.WheelChairEmpty","childcount":0,"type":"EnumValue","name":"WheelChairEmpty","token":"WheelChairEmpty","scope":"ErgoShop.Utils.CharacterType"},{"signature":"ErgoShop.Utils.ErgoLayers","childcount":2,"type":"Enum","name":"ErgoLayers","token":"public enum ErgoLayers ","scope":"ErgoShop.Utils","comments":{"summary":"Enum containing ids of unity layers to show only 2d objects in 2d view, and 3d objects in 3d view"}},{"signature":"ErgoShop.Utils.ErgoLayers.Top","childcount":0,"type":"EnumValue","name":"Top","token":"Top = 9","scope":"ErgoShop.Utils.ErgoLayers"},{"signature":"ErgoShop.Utils.ErgoLayers.ThreeD","childcount":0,"type":"EnumValue","name":"ThreeD","token":"ThreeD = 10","scope":"ErgoShop.Utils.ErgoLayers"},{"signature":"ErgoShop.Utils.GetSizeScript","childcount":3,"type":"Class","name":"GetSizeScript","token":"[ExecuteInEditMode]\npublic class GetSizeScript : MonoBehaviour ","scope":"ErgoShop.Utils","comments":{"summary":"Script to use in editor only. Its like meshsize but in editor"}},{"signature":"ErgoShop.Utils.GetSizeScript.size","childcount":0,"type":"Field","name":"size","token":"public Vector3 size ","scope":"ErgoShop.Utils.GetSizeScript"},{"signature":"ErgoShop.Utils.GetSizeScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Utils.GetSizeScript"},{"signature":"ErgoShop.Utils.GetSizeScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Utils.GetSizeScript"},{"signature":"ErgoShop.Utils.InputFunctions","childcount":12,"type":"Class","name":"InputFunctions","token":"public static class InputFunctions ","scope":"ErgoShop.Utils","comments":{"summary":"Keyboard and mouse input functions"}},{"signature":"ErgoShop.Utils.InputFunctions.CTRL()","childcount":0,"type":"Method","name":"CTRL","token":"public static bool CTRL()","scope":"ErgoShop.Utils.InputFunctions"},{"signature":"ErgoShop.Utils.InputFunctions.CTRLC()","childcount":0,"type":"Method","name":"CTRLC","token":"public static bool CTRLC()","scope":"ErgoShop.Utils.InputFunctions"},{"signature":"ErgoShop.Utils.InputFunctions.CTRLV()","childcount":0,"type":"Method","name":"CTRLV","token":"public static bool CTRLV()","scope":"ErgoShop.Utils.InputFunctions"},{"signature":"ErgoShop.Utils.InputFunctions.IsMouseOutsideUI()","childcount":0,"type":"Method","name":"IsMouseOutsideUI","token":"public static bool IsMouseOutsideUI()","scope":"ErgoShop.Utils.InputFunctions","comments":{"summary":"true if mouse points on scene and not on an ui element"}},{"signature":"ErgoShop.Utils.InputFunctions.IsClickingOutsideUI()","childcount":0,"type":"Method","name":"IsClickingOutsideUI","token":"public static bool IsClickingOutsideUI()","scope":"ErgoShop.Utils.InputFunctions","comments":{"summary":"true if mouse points on scene and not on an ui element and user is clicking"}},{"signature":"ErgoShop.Utils.InputFunctions.GetWorldPoint2D(Camera)","childcount":0,"type":"Method","name":"GetWorldPoint2D","token":"public static Vector3 GetWorldPoint2D(Camera cam2D)","scope":"ErgoShop.Utils.InputFunctions","params":{"cam2D":"Camera"}},{"signature":"ErgoShop.Utils.InputFunctions.GetWorldPoint(Camera)","childcount":0,"type":"Method","name":"GetWorldPoint","token":"public static Vector3 GetWorldPoint(Camera cam)","scope":"ErgoShop.Utils.InputFunctions","params":{"cam":"Camera"}},{"signature":"ErgoShop.Utils.InputFunctions.GetWorldPoint(Camera, GameObject, string[])","childcount":0,"type":"Method","name":"GetWorldPoint","token":"public static Vector3 GetWorldPoint(Camera cam, GameObject avoid, string[] allowedTags)","scope":"ErgoShop.Utils.InputFunctions","params":{"cam":"Camera","avoid":"GameObject","allowedTags":"string[]"}},{"signature":"ErgoShop.Utils.InputFunctions.GetWorldPoint(GameObject, Camera, GameObject, string[])","childcount":0,"type":"Method","name":"GetWorldPoint","token":"public static Vector3 GetWorldPoint(out GameObject go, Camera cam, GameObject avoid, string[] allowedTags)","scope":"ErgoShop.Utils.InputFunctions","params":{"go":"GameObject","cam":"Camera","avoid":"GameObject","allowedTags":"string[]"}},{"signature":"ErgoShop.Utils.InputFunctions.GetWorldPoint3D(Camera, bool)","childcount":0,"type":"Method","name":"GetWorldPoint3D","token":"public static Vector3 GetWorldPoint3D(Camera cam, bool isOnWall)","scope":"ErgoShop.Utils.InputFunctions","params":{"cam":"Camera","isOnWall":"bool"}},{"signature":"ErgoShop.Utils.InputFunctions.GetHoveredObject2D(Camera, string, bool)","childcount":0,"type":"Method","name":"GetHoveredObject2D","token":"public static GameObject GetHoveredObject2D(Camera cam2D, string avoidName=\"\", bool onlyFurniture=false)","scope":"ErgoShop.Utils.InputFunctions","params":{"cam2D":"Camera","avoidName":"string","onlyFurniture":"bool"}},{"signature":"ErgoShop.Utils.InputFunctions.GetHoveredObject(Camera)","childcount":0,"type":"Method","name":"GetHoveredObject","token":"public static GameObject GetHoveredObject(Camera cam)","scope":"ErgoShop.Utils.InputFunctions","params":{"cam":"Camera"}},{"signature":"ErgoShop.Utils.Map<T1, T2>","childcount":9,"type":"Class","name":"Map<T1, T2>","token":"public class Map<T1, T2> ","scope":"ErgoShop.Utils","comments":{"summary":"NOT USED YET\r\n     Class to have a map"}},{"signature":"ErgoShop.Utils.Map<T1, T2>._forward","childcount":0,"type":"Field","name":"_forward","token":"private Dictionary<T1, T2> _forward ","scope":"ErgoShop.Utils.Map<T1, T2>"},{"signature":"ErgoShop.Utils.Map<T1, T2>._reverse","childcount":0,"type":"Field","name":"_reverse","token":"private Dictionary<T2, T1> _reverse ","scope":"ErgoShop.Utils.Map<T1, T2>"},{"signature":"ErgoShop.Utils.Map<T1, T2>.Map()","childcount":0,"type":"Constructor","name":"Map","token":"public  Map()","scope":"ErgoShop.Utils.Map<T1, T2>"},{"signature":"ErgoShop.Utils.Map<T1, T2>.Indexer<T3, T4>","childcount":3,"type":"Class","name":"Indexer<T3, T4>","token":"public class Indexer<T3, T4> ","scope":"ErgoShop.Utils.Map<T1, T2>"},{"signature":"ErgoShop.Utils.Map<T1, T2>.Indexer<T3, T4>._dictionary","childcount":0,"type":"Field","name":"_dictionary","token":"private Dictionary<T3, T4> _dictionary ","scope":"ErgoShop.Utils.Map<T1, T2>.Indexer<T3, T4>"},{"signature":"ErgoShop.Utils.Map<T1, T2>.Indexer<T3, T4>.Indexer(Dictionary<T3, T4>)","childcount":0,"type":"Constructor","name":"Indexer","token":"public  Indexer(Dictionary<T3, T4> dictionary)","scope":"ErgoShop.Utils.Map<T1, T2>.Indexer<T3, T4>","params":{"dictionary":"Dictionary<T3, T4>"}},{"signature":"ErgoShop.Utils.Map<T1, T2>.Indexer<T3, T4>.this[T3 index]","childcount":0,"type":"Property","name":"this[T3 index]","token":"public T4 this[T3 index] { get; set; }","scope":"ErgoShop.Utils.Map<T1, T2>.Indexer<T3, T4>"},{"signature":"ErgoShop.Utils.Map<T1, T2>.Add(T1, T2)","childcount":0,"type":"Method","name":"Add","token":"public void Add(T1 t1, T2 t2)","scope":"ErgoShop.Utils.Map<T1, T2>","params":{"t1":"T1","t2":"T2"}},{"signature":"ErgoShop.Utils.Map<T1, T2>.Remove(T1)","childcount":0,"type":"Method","name":"Remove","token":"public void Remove(T1 t1)","scope":"ErgoShop.Utils.Map<T1, T2>","params":{"t1":"T1"}},{"signature":"ErgoShop.Utils.Map<T1, T2>.Remove(T2)","childcount":0,"type":"Method","name":"Remove","token":"public void Remove(T2 t2)","scope":"ErgoShop.Utils.Map<T1, T2>","params":{"t2":"T2"}},{"signature":"ErgoShop.Utils.Map<T1, T2>.Forward","childcount":0,"type":"Property","name":"Forward","token":"public Indexer<T1, T2> Forward { get; set; }","scope":"ErgoShop.Utils.Map<T1, T2>"},{"signature":"ErgoShop.Utils.Map<T1, T2>.Reverse","childcount":0,"type":"Property","name":"Reverse","token":"public Indexer<T2, T1> Reverse { get; set; }","scope":"ErgoShop.Utils.Map<T1, T2>"},{"signature":"ErgoShop.Utils.Math3d","childcount":54,"type":"Class","name":"Math3d","token":"public class Math3d ","scope":"ErgoShop.Utils","comments":{"summary":"See http://wiki.unity3d.com/index.php/3d_Math_functions\r\n     And check methods comments in the file"}},{"signature":"ErgoShop.Utils.Math3d.tempChild","childcount":0,"type":"Field","name":"tempChild","token":"private static Transform tempChild ","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.tempParent","childcount":0,"type":"Field","name":"tempParent","token":"private static Transform tempParent ","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.positionRegister","childcount":0,"type":"Field","name":"positionRegister","token":"private static Vector3[] positionRegister ","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.posTimeRegister","childcount":0,"type":"Field","name":"posTimeRegister","token":"private static float[] posTimeRegister ","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.positionSamplesTaken","childcount":0,"type":"Field","name":"positionSamplesTaken","token":"private static int positionSamplesTaken ","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.rotationRegister","childcount":0,"type":"Field","name":"rotationRegister","token":"private static Quaternion[] rotationRegister ","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.rotTimeRegister","childcount":0,"type":"Field","name":"rotTimeRegister","token":"private static float[] rotTimeRegister ","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.rotationSamplesTaken","childcount":0,"type":"Field","name":"rotationSamplesTaken","token":"private static int rotationSamplesTaken ","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.Init()","childcount":0,"type":"Method","name":"Init","token":"public static void Init()","scope":"ErgoShop.Utils.Math3d"},{"signature":"ErgoShop.Utils.Math3d.GetPointOnSpline(float, Vector2[])","childcount":0,"type":"Method","name":"GetPointOnSpline","token":"public static Vector2 GetPointOnSpline(float percentage, Vector2[] cPoints)","scope":"ErgoShop.Utils.Math3d","params":{"percentage":"float","cPoints":"Vector2[]"}},{"signature":"ErgoShop.Utils.Math3d.GetLineSplineIntersections(Vector2[], Vector2[])","childcount":0,"type":"Method","name":"GetLineSplineIntersections","token":"public static float[] GetLineSplineIntersections(Vector2[] linePoints, Vector2[] cPoints)","scope":"ErgoShop.Utils.Math3d","params":{"linePoints":"Vector2[]","cPoints":"Vector2[]"}},{"signature":"ErgoShop.Utils.Math3d.SolveCubic(int, float, float, float, float, float, float, float)","childcount":0,"type":"Method","name":"SolveCubic","token":"private static void SolveCubic(out int nRoots, out float x1, out float x2, out float x3, float a, float b, float c, float d)","scope":"ErgoShop.Utils.Math3d","params":{"nRoots":"int","x1":"float","x2":"float","x3":"float","a":"float","b":"float","c":"float","d":"float"}},{"signature":"ErgoShop.Utils.Math3d.CubeRoot(float)","childcount":0,"type":"Method","name":"CubeRoot","token":"private static float CubeRoot(float d)","scope":"ErgoShop.Utils.Math3d","params":{"d":"float"}},{"signature":"ErgoShop.Utils.Math3d.AddVectorLength(Vector3, float)","childcount":0,"type":"Method","name":"AddVectorLength","token":"public static Vector3 AddVectorLength(Vector3 vector, float size)","scope":"ErgoShop.Utils.Math3d","params":{"vector":"Vector3","size":"float"}},{"signature":"ErgoShop.Utils.Math3d.SetVectorLength(Vector3, float)","childcount":0,"type":"Method","name":"SetVectorLength","token":"public static Vector3 SetVectorLength(Vector3 vector, float size)","scope":"ErgoShop.Utils.Math3d","params":{"vector":"Vector3","size":"float"}},{"signature":"ErgoShop.Utils.Math3d.SubtractRotation(Quaternion, Quaternion)","childcount":0,"type":"Method","name":"SubtractRotation","token":"public static Quaternion SubtractRotation(Quaternion B, Quaternion A)","scope":"ErgoShop.Utils.Math3d","params":{"B":"Quaternion","A":"Quaternion"}},{"signature":"ErgoShop.Utils.Math3d.AddRotation(Quaternion, Quaternion)","childcount":0,"type":"Method","name":"AddRotation","token":"public static Quaternion AddRotation(Quaternion A, Quaternion B)","scope":"ErgoShop.Utils.Math3d","params":{"A":"Quaternion","B":"Quaternion"}},{"signature":"ErgoShop.Utils.Math3d.TransformDirectionMath(Quaternion, Vector3)","childcount":0,"type":"Method","name":"TransformDirectionMath","token":"public static Vector3 TransformDirectionMath(Quaternion rotation, Vector3 vector)","scope":"ErgoShop.Utils.Math3d","params":{"rotation":"Quaternion","vector":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.InverseTransformDirectionMath(Quaternion, Vector3)","childcount":0,"type":"Method","name":"InverseTransformDirectionMath","token":"public static Vector3 InverseTransformDirectionMath(Quaternion rotation, Vector3 vector)","scope":"ErgoShop.Utils.Math3d","params":{"rotation":"Quaternion","vector":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.RotateVectorFromTo(Quaternion, Quaternion, Vector3)","childcount":0,"type":"Method","name":"RotateVectorFromTo","token":"public static Vector3 RotateVectorFromTo(Quaternion from, Quaternion to, Vector3 vector)","scope":"ErgoShop.Utils.Math3d","params":{"from":"Quaternion","to":"Quaternion","vector":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.PlanePlaneIntersection(Vector3, Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"PlanePlaneIntersection","token":"public static bool PlanePlaneIntersection(out Vector3 linePoint, out Vector3 lineVec, Vector3 plane1Normal, Vector3 plane1Position, Vector3 plane2Normal, Vector3 plane2Position)","scope":"ErgoShop.Utils.Math3d","params":{"linePoint":"Vector3","lineVec":"Vector3","plane1Normal":"Vector3","plane1Position":"Vector3","plane2Normal":"Vector3","plane2Position":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.LinePlaneIntersection(Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"LinePlaneIntersection","token":"public static bool LinePlaneIntersection(out Vector3 intersection, Vector3 linePoint, Vector3 lineVec, Vector3 planeNormal, Vector3 planePoint)","scope":"ErgoShop.Utils.Math3d","params":{"intersection":"Vector3","linePoint":"Vector3","lineVec":"Vector3","planeNormal":"Vector3","planePoint":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.LineLineIntersection(Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"LineLineIntersection","token":"public static bool LineLineIntersection(out Vector3 intersection, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)","scope":"ErgoShop.Utils.Math3d","params":{"intersection":"Vector3","linePoint1":"Vector3","lineVec1":"Vector3","linePoint2":"Vector3","lineVec2":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.ClosestPointsOnTwoLines(Vector3, Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"ClosestPointsOnTwoLines","token":"public static bool ClosestPointsOnTwoLines(out Vector3 closestPointLine1, out Vector3 closestPointLine2, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)","scope":"ErgoShop.Utils.Math3d","params":{"closestPointLine1":"Vector3","closestPointLine2":"Vector3","linePoint1":"Vector3","lineVec1":"Vector3","linePoint2":"Vector3","lineVec2":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.ProjectPointOnLine(Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"ProjectPointOnLine","token":"public static Vector3 ProjectPointOnLine(Vector3 linePoint, Vector3 lineVec, Vector3 point)","scope":"ErgoShop.Utils.Math3d","params":{"linePoint":"Vector3","lineVec":"Vector3","point":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.ProjectPointOnLineSegment(Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"ProjectPointOnLineSegment","token":"public static Vector3 ProjectPointOnLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)","scope":"ErgoShop.Utils.Math3d","params":{"linePoint1":"Vector3","linePoint2":"Vector3","point":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.ProjectPointOnPlane(Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"ProjectPointOnPlane","token":"public static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)","scope":"ErgoShop.Utils.Math3d","params":{"planeNormal":"Vector3","planePoint":"Vector3","point":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.ProjectVectorOnPlane(Vector3, Vector3)","childcount":0,"type":"Method","name":"ProjectVectorOnPlane","token":"public static Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)","scope":"ErgoShop.Utils.Math3d","params":{"planeNormal":"Vector3","vector":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.SignedDistancePlanePoint(Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"SignedDistancePlanePoint","token":"public static float SignedDistancePlanePoint(Vector3 planeNormal, Vector3 planePoint, Vector3 point)","scope":"ErgoShop.Utils.Math3d","params":{"planeNormal":"Vector3","planePoint":"Vector3","point":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.SignedDotProduct(Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"SignedDotProduct","token":"public static float SignedDotProduct(Vector3 vectorA, Vector3 vectorB, Vector3 normal)","scope":"ErgoShop.Utils.Math3d","params":{"vectorA":"Vector3","vectorB":"Vector3","normal":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.SignedVectorAngle(Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"SignedVectorAngle","token":"public static float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)","scope":"ErgoShop.Utils.Math3d","params":{"referenceVector":"Vector3","otherVector":"Vector3","normal":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.AngleVectorPlane(Vector3, Vector3)","childcount":0,"type":"Method","name":"AngleVectorPlane","token":"public static float AngleVectorPlane(Vector3 vector, Vector3 normal)","scope":"ErgoShop.Utils.Math3d","params":{"vector":"Vector3","normal":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.DotProductAngle(Vector3, Vector3)","childcount":0,"type":"Method","name":"DotProductAngle","token":"public static float DotProductAngle(Vector3 vec1, Vector3 vec2)","scope":"ErgoShop.Utils.Math3d","params":{"vec1":"Vector3","vec2":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.PlaneFrom3Points(Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"PlaneFrom3Points","token":"public static void PlaneFrom3Points(out Vector3 planeNormal, out Vector3 planePoint, Vector3 pointA, Vector3 pointB, Vector3 pointC)","scope":"ErgoShop.Utils.Math3d","params":{"planeNormal":"Vector3","planePoint":"Vector3","pointA":"Vector3","pointB":"Vector3","pointC":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.GetForwardVector(Quaternion)","childcount":0,"type":"Method","name":"GetForwardVector","token":"public static Vector3 GetForwardVector(Quaternion q)","scope":"ErgoShop.Utils.Math3d","params":{"q":"Quaternion"}},{"signature":"ErgoShop.Utils.Math3d.GetUpVector(Quaternion)","childcount":0,"type":"Method","name":"GetUpVector","token":"public static Vector3 GetUpVector(Quaternion q)","scope":"ErgoShop.Utils.Math3d","params":{"q":"Quaternion"}},{"signature":"ErgoShop.Utils.Math3d.GetRightVector(Quaternion)","childcount":0,"type":"Method","name":"GetRightVector","token":"public static Vector3 GetRightVector(Quaternion q)","scope":"ErgoShop.Utils.Math3d","params":{"q":"Quaternion"}},{"signature":"ErgoShop.Utils.Math3d.QuaternionFromMatrix(Matrix4x4)","childcount":0,"type":"Method","name":"QuaternionFromMatrix","token":"public static Quaternion QuaternionFromMatrix(Matrix4x4 m)","scope":"ErgoShop.Utils.Math3d","params":{"m":"Matrix4x4"}},{"signature":"ErgoShop.Utils.Math3d.PositionFromMatrix(Matrix4x4)","childcount":0,"type":"Method","name":"PositionFromMatrix","token":"public static Vector3 PositionFromMatrix(Matrix4x4 m)","scope":"ErgoShop.Utils.Math3d","params":{"m":"Matrix4x4"}},{"signature":"ErgoShop.Utils.Math3d.LookRotationExtended(GameObject, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"LookRotationExtended","token":"public static void LookRotationExtended(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 customForward, Vector3 customUp)","scope":"ErgoShop.Utils.Math3d","params":{"gameObjectInOut":"GameObject","alignWithVector":"Vector3","alignWithNormal":"Vector3","customForward":"Vector3","customUp":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.TransformWithParent(Quaternion, Vector3, Quaternion, Vector3, Quaternion, Vector3, Quaternion, Vector3)","childcount":0,"type":"Method","name":"TransformWithParent","token":"public static void TransformWithParent(out Quaternion childRotation, out Vector3 childPosition, Quaternion parentRotation, Vector3 parentPosition, Quaternion startParentRotation, Vector3 startParentPosition, Quaternion startChildRotation, Vector3 startChildPosition)","scope":"ErgoShop.Utils.Math3d","params":{"childRotation":"Quaternion","childPosition":"Vector3","parentRotation":"Quaternion","parentPosition":"Vector3","startParentRotation":"Quaternion","startParentPosition":"Vector3","startChildRotation":"Quaternion","startChildPosition":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.PreciseAlign(GameObject, Vector3, Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"PreciseAlign","token":"public static void PreciseAlign(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 alignWithPosition, Vector3 triangleForward, Vector3 triangleNormal, Vector3 trianglePosition)","scope":"ErgoShop.Utils.Math3d","params":{"gameObjectInOut":"GameObject","alignWithVector":"Vector3","alignWithNormal":"Vector3","alignWithPosition":"Vector3","triangleForward":"Vector3","triangleNormal":"Vector3","trianglePosition":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.VectorsToTransform(GameObject, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"VectorsToTransform","token":"public static void VectorsToTransform(ref GameObject gameObjectInOut, Vector3 positionVector, Vector3 directionVector, Vector3 normalVector)","scope":"ErgoShop.Utils.Math3d","params":{"gameObjectInOut":"GameObject","positionVector":"Vector3","directionVector":"Vector3","normalVector":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.PointOnWhichSideOfLineSegment(Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"PointOnWhichSideOfLineSegment","token":"public static int PointOnWhichSideOfLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)","scope":"ErgoShop.Utils.Math3d","params":{"linePoint1":"Vector3","linePoint2":"Vector3","point":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.MouseDistanceToLine(Vector3, Vector3)","childcount":0,"type":"Method","name":"MouseDistanceToLine","token":"public static float MouseDistanceToLine(Vector3 linePoint1, Vector3 linePoint2)","scope":"ErgoShop.Utils.Math3d","params":{"linePoint1":"Vector3","linePoint2":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.MouseDistanceToCircle(Vector3, float)","childcount":0,"type":"Method","name":"MouseDistanceToCircle","token":"public static float MouseDistanceToCircle(Vector3 point, float radius)","scope":"ErgoShop.Utils.Math3d","params":{"point":"Vector3","radius":"float"}},{"signature":"ErgoShop.Utils.Math3d.IsLineInRectangle(Vector3, Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"IsLineInRectangle","token":"public static bool IsLineInRectangle(Vector3 linePoint1, Vector3 linePoint2, Vector3 rectA, Vector3 rectB, Vector3 rectC, Vector3 rectD)","scope":"ErgoShop.Utils.Math3d","params":{"linePoint1":"Vector3","linePoint2":"Vector3","rectA":"Vector3","rectB":"Vector3","rectC":"Vector3","rectD":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.IsPointInRectangle(Vector3, Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"IsPointInRectangle","token":"public static bool IsPointInRectangle(Vector3 point, Vector3 rectA, Vector3 rectC, Vector3 rectB, Vector3 rectD)","scope":"ErgoShop.Utils.Math3d","params":{"point":"Vector3","rectA":"Vector3","rectC":"Vector3","rectB":"Vector3","rectD":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.AreLineSegmentsCrossing(Vector3, Vector3, Vector3, Vector3)","childcount":0,"type":"Method","name":"AreLineSegmentsCrossing","token":"public static bool AreLineSegmentsCrossing(Vector3 pointA1, Vector3 pointA2, Vector3 pointB1, Vector3 pointB2)","scope":"ErgoShop.Utils.Math3d","params":{"pointA1":"Vector3","pointA2":"Vector3","pointB1":"Vector3","pointB2":"Vector3"}},{"signature":"ErgoShop.Utils.Math3d.LinearAcceleration(Vector3, Vector3, int)","childcount":0,"type":"Method","name":"LinearAcceleration","token":"public static bool LinearAcceleration(out Vector3 vector, Vector3 position, int samples)","scope":"ErgoShop.Utils.Math3d","params":{"vector":"Vector3","position":"Vector3","samples":"int"}},{"signature":"ErgoShop.Utils.Math3d.AngularAcceleration(Vector3, Quaternion, int)","childcount":0,"type":"Method","name":"AngularAcceleration","token":"public static bool AngularAcceleration(out Vector3 vector, Quaternion rotation, int samples)","scope":"ErgoShop.Utils.Math3d","params":{"vector":"Vector3","rotation":"Quaternion","samples":"int"}},{"signature":"ErgoShop.Utils.Math3d.LinearFunction2DBasic(float, float, float)","childcount":0,"type":"Method","name":"LinearFunction2DBasic","token":"public static float LinearFunction2DBasic(float x, float Qx, float Qy)","scope":"ErgoShop.Utils.Math3d","params":{"x":"float","Qx":"float","Qy":"float"}},{"signature":"ErgoShop.Utils.Math3d.LinearFunction2DFull(float, float, float, float, float)","childcount":0,"type":"Method","name":"LinearFunction2DFull","token":"public static float LinearFunction2DFull(float x, float Px, float Py, float Qx, float Qy)","scope":"ErgoShop.Utils.Math3d","params":{"x":"float","Px":"float","Py":"float","Qx":"float","Qy":"float"}},{"signature":"ErgoShop.Utils.Math3d.RotDiffToSpeedVec(Quaternion, float)","childcount":0,"type":"Method","name":"RotDiffToSpeedVec","token":"private static Vector3 RotDiffToSpeedVec(Quaternion rotation, float deltaTime)","scope":"ErgoShop.Utils.Math3d","params":{"rotation":"Quaternion","deltaTime":"float"}},{"signature":"ErgoShop.Utils.OutlineFunctions","childcount":1,"type":"Class","name":"OutlineFunctions","token":"public static class OutlineFunctions ","scope":"ErgoShop.Utils","comments":{"summary":"Outline 2D and 3D objects"}},{"signature":"ErgoShop.Utils.OutlineFunctions.SetOutlineEnabled(GameObject, bool, int)","childcount":0,"type":"Method","name":"SetOutlineEnabled","token":"public static void SetOutlineEnabled(GameObject go, bool enab, int color = 0)","scope":"ErgoShop.Utils.OutlineFunctions","comments":{"summary":"Outline a gameobject or hide an outline","param-enab":"show or hide","param-color":"0=green 1=blue 2=red"},"params":{"go":"GameObject","enab":"bool","color":"int"}},{"signature":"ErgoShop.Utils.ParsingFunctions","childcount":2,"type":"Class","name":"ParsingFunctions","token":"public static class ParsingFunctions ","scope":"ErgoShop.Utils","comments":{"summary":"Parse float"}},{"signature":"ErgoShop.Utils.ParsingFunctions.ParseFloatCommaDot(string, float)","childcount":0,"type":"Method","name":"ParseFloatCommaDot","token":"public static bool ParseFloatCommaDot(string s, out float res)","scope":"ErgoShop.Utils.ParsingFunctions","params":{"s":"string","res":"float"}},{"signature":"ErgoShop.Utils.ParsingFunctions.ToStringCentimeters(float)","childcount":0,"type":"Method","name":"ToStringCentimeters","token":"public static string ToStringCentimeters(float f)","scope":"ErgoShop.Utils.ParsingFunctions","params":{"f":"float"}},{"signature":"ErgoShop.Utils.VectorFunctions","childcount":2,"type":"Class","name":"VectorFunctions","token":"public static class VectorFunctions ","scope":"ErgoShop.Utils","comments":{"summary":"Functions to manipulate vectors"}},{"signature":"ErgoShop.Utils.VectorFunctions.Switch2D3D(Vector3, float)","childcount":0,"type":"Method","name":"Switch2D3D","token":"public static Vector3 Switch2D3D(Vector3 v2D, float y = 0)","scope":"ErgoShop.Utils.VectorFunctions","comments":{"summary":"Invert y and z"},"params":{"v2D":"Vector3","y":"float"}},{"signature":"ErgoShop.Utils.VectorFunctions.z","childcount":0,"type":"Field","name":"z","token":"float z ","scope":"ErgoShop.Utils.VectorFunctions"},{"signature":"ErgoShop.Utils.InvertXZ(Vector3)","childcount":0,"type":"Method","name":"InvertXZ","token":"public static Vector3 InvertXZ(Vector3 v)","scope":"ErgoShop.Utils","params":{"v":"Vector3"}},{"signature":"ErgoShop.Utils.ClampAngle(float, float, float)","childcount":0,"type":"Method","name":"ClampAngle","token":"public static float ClampAngle(float angle, float min, float max)","scope":"ErgoShop.Utils","comments":{"summary":"Clamp angle between 0 and 360"},"params":{"angle":"float","min":"float","max":"float"}},{"signature":"ErgoShop.Utils.SnapToAngle(Vector3, float)","childcount":0,"type":"Method","name":"SnapToAngle","token":"public static Vector3 SnapToAngle(Vector3 v3, float snapAngle)","scope":"ErgoShop.Utils","comments":{"summary":""},"params":{"v3":"Vector3","snapAngle":"float"}},{"signature":"ErgoShop.Utils.GetCenter(List<Vector3>)","childcount":0,"type":"Method","name":"GetCenter","token":"public static Vector3 GetCenter(List<Vector3> vertices)","scope":"ErgoShop.Utils","params":{"vertices":"List<Vector3>"}},{"signature":"ErgoShop.Utils.GetIntersection(Vector2, Vector2)","childcount":0,"type":"Method","name":"GetIntersection","token":"public static Vector2 GetIntersection(Vector2 dir1, Vector2 dir2)","scope":"ErgoShop.Utils","comments":{"summary":"Return point Vector2 at intersection of two lines"},"params":{"dir1":"Vector2","dir2":"Vector2"}},{"signature":"ErgoShop.Utils.GetExactPositionFrom3DObject(GameObject, GameObject, Vector3)","childcount":0,"type":"Method","name":"GetExactPositionFrom3DObject","token":"public static Vector3 GetExactPositionFrom3DObject(GameObject associated2DObject, GameObject associated3DObject, Vector3 position)","scope":"ErgoShop.Utils","comments":{"summary":"Check bounds and update position of 2D Object from 3D"},"params":{"associated2DObject":"GameObject","associated3DObject":"GameObject","position":"Vector3"}},{"signature":"ErgoShop.Utils.SortVerticesConvex(Vector3, List<Vector3>)","childcount":0,"type":"Method","name":"SortVerticesConvex","token":"public static List<Vector3> SortVerticesConvex(Vector3 normal, List<Vector3> nodes)","scope":"ErgoShop.Utils","comments":{"summary":""},"params":{"normal":"Vector3","nodes":"List<Vector3>"}},{"signature":"ErgoShop.Utils.TriangulateConvex(List<Vector3>)","childcount":0,"type":"Method","name":"TriangulateConvex","token":"public static List<Vector3> TriangulateConvex(List<Vector3> vertices)","scope":"ErgoShop.Utils","comments":{"summary":"CONVEX TRIANGULATION"},"params":{"vertices":"List<Vector3>"}},{"signature":"ErgoShop.Utils.IsParallel(Vector2, Vector2)","childcount":0,"type":"Method","name":"IsParallel","token":"public static bool IsParallel(Vector2 v1, Vector2 v2)","scope":"ErgoShop.Utils","comments":{"summary":"Are 2 vectors parallel?"},"params":{"v1":"Vector2","v2":"Vector2"}},{"signature":"ErgoShop.Utils.IsOrthogonal(Vector2, Vector2)","childcount":0,"type":"Method","name":"IsOrthogonal","token":"public static bool IsOrthogonal(Vector2 v1, Vector2 v2)","scope":"ErgoShop.Utils","comments":{"summary":"Are 2 vectors orthogonal?"},"params":{"v1":"Vector2","v2":"Vector2"}},{"signature":"ErgoShop.Utils.IsBetween(Vector2, Vector2, Vector2)","childcount":0,"type":"Method","name":"IsBetween","token":"public static bool IsBetween(Vector2 a, Vector2 b, Vector2 c)","scope":"ErgoShop.Utils","comments":{"summary":"Is a point c between 2 other points a and b?"},"params":{"a":"Vector2","b":"Vector2","c":"Vector2"}},{"signature":"ErgoShop.Utils.Triangulate(List<Vector3>)","childcount":0,"type":"Method","name":"Triangulate","token":"public static List<Vector3> Triangulate(List<Vector3> pointsSorted)","scope":"ErgoShop.Utils","comments":{"summary":"NOT USED YET (replaced by another one)\r\n         ESSAIS TRIANGULATIONS CONCAVE"},"params":{"pointsSorted":"List<Vector3>"}},{"signature":"ErgoShop.Utils.CheckIfReflexOrConvex(Vertex)","childcount":0,"type":"Method","name":"CheckIfReflexOrConvex","token":"private static void CheckIfReflexOrConvex(Vertex v)","scope":"ErgoShop.Utils","comments":{"summary":"Check if a vertex if reflex or convex, and add to appropriate list"},"params":{"v":"Vertex"}},{"signature":"ErgoShop.Utils.IsVertexEar(Vertex, List<Vertex>, List<Vertex>)","childcount":0,"type":"Method","name":"IsVertexEar","token":"private static void IsVertexEar(Vertex v, List<Vertex> vertices, List<Vertex> earVertices)","scope":"ErgoShop.Utils","comments":{"summary":"Check if a vertex is an ear"},"params":{"v":"Vertex","vertices":"List<Vertex>","earVertices":"List<Vertex>"}},{"signature":"ErgoShop.Utils.IsTriangleOrientedClockwise(Vector2, Vector2, Vector2)","childcount":0,"type":"Method","name":"IsTriangleOrientedClockwise","token":"public static bool IsTriangleOrientedClockwise(Vector2 p1, Vector2 p2, Vector2 p3)","scope":"ErgoShop.Utils","params":{"p1":"Vector2","p2":"Vector2","p3":"Vector2"}},{"signature":"ErgoShop.Utils.IsPointInTriangle(Vector2, Vector2, Vector2, Vector2)","childcount":0,"type":"Method","name":"IsPointInTriangle","token":"public static bool IsPointInTriangle(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p)","scope":"ErgoShop.Utils","params":{"p1":"Vector2","p2":"Vector2","p3":"Vector2","p":"Vector2"}},{"signature":"ErgoShop.Utils.ClampListIndex(int, int)","childcount":0,"type":"Method","name":"ClampListIndex","token":"public static int ClampListIndex(int index, int listSize)","scope":"ErgoShop.Utils","params":{"index":"int","listSize":"int"}},{"signature":"ErgoShop.Utils.WallFunctions","childcount":18,"type":"Class","name":"WallFunctions","token":"public static class WallFunctions ","scope":"ErgoShop.Utils","comments":{"summary":"Functions used mostly in WallsCreator"}},{"signature":"ErgoShop.Utils.WallFunctions.GetAngleBetweenWalls(Wall, Wall)","childcount":0,"type":"Method","name":"GetAngleBetweenWalls","token":"public static float GetAngleBetweenWalls(Wall w1, Wall w2)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"angle from w1 to w2"},"params":{"w1":"Wall","w2":"Wall"}},{"signature":"ErgoShop.Utils.WallFunctions.IsCommonUnique(Wall, Wall)","childcount":0,"type":"Method","name":"IsCommonUnique","token":"public static bool IsCommonUnique(Wall w1, Wall w2)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"Check if only one linked wall"},"params":{"w1":"Wall","w2":"Wall"}},{"signature":"ErgoShop.Utils.WallFunctions.GetFourVerticesFromWall(Wall)","childcount":0,"type":"Method","name":"GetFourVerticesFromWall","token":"public static List<Vector3> GetFourVerticesFromWall(Wall w)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"Get all 4 points 2D to draw the wall"},"params":{"w":"Wall"}},{"signature":"ErgoShop.Utils.WallFunctions.GetCommonPosition(Wall, Wall, float)","childcount":0,"type":"Method","name":"GetCommonPosition","token":"public static Vector3 GetCommonPosition(Wall w1, Wall w2, float tol)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"","returns":"The point between the closest extremities of w1 and w2"},"params":{"w1":"Wall","w2":"Wall","tol":"float"}},{"signature":"ErgoShop.Utils.WallFunctions.IsIntersecting(Vector3, Wall, Wall)","childcount":0,"type":"Method","name":"IsIntersecting","token":"public static bool IsIntersecting(out Vector3 intersection, Wall w1, Wall w2)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"Check if the lines are interesecting in 2d space"},"params":{"intersection":"Vector3","w1":"Wall","w2":"Wall"}},{"signature":"ErgoShop.Utils.WallFunctions.IsWallContainingOther(Wall, Wall, float)","childcount":0,"type":"Method","name":"IsWallContainingOther","token":"public static bool IsWallContainingOther(Wall w1, Wall w2, float dist=1f)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"","returns":"true if a wall contain another one"},"params":{"w1":"Wall","w2":"Wall","dist":"float"}},{"signature":"ErgoShop.Utils.WallFunctions.MergeRoomsCommonWall(Room, Room, Wall, Wall, float)","childcount":0,"type":"Method","name":"MergeRoomsCommonWall","token":"public static void MergeRoomsCommonWall(Room r1, Room r2, Wall w1, Wall w2, float dist=1f)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"Delete one wall and make the other one the common wall of the two rooms"},"params":{"r1":"Room","r2":"Room","w1":"Wall","w2":"Wall","dist":"float"}},{"signature":"ErgoShop.Utils.WallFunctions.ConsolidateRoom(Room, Wall, float)","childcount":0,"type":"Method","name":"ConsolidateRoom","token":"public static void ConsolidateRoom(Room r, Wall w, float dist = 1f)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"Stick walls to the new common wall","param-w":"Common wall"},"params":{"r":"Room","w":"Wall","dist":"float"}},{"signature":"ErgoShop.Utils.WallFunctions.GetCommonPosition(Wall, Wall)","childcount":0,"type":"Method","name":"GetCommonPosition","token":"public static Vector3 GetCommonPosition(Wall w1, Wall w2)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"Get the common extremity between two linked walls w1 and w2"},"params":{"w1":"Wall","w2":"Wall"}},{"signature":"ErgoShop.Utils.WallFunctions.GetDistinctPositions(List<Wall>)","childcount":0,"type":"Method","name":"GetDistinctPositions","token":"public static List<Vector3> GetDistinctPositions(List<Wall> walls)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"Get all extremities positions with removing doubles"},"params":{"walls":"List<Wall>"}},{"signature":"ErgoShop.Utils.WallFunctions.GetDistinctPositionsSortedForOneRoom(List<Wall>)","childcount":0,"type":"Method","name":"GetDistinctPositionsSortedForOneRoom","token":"public static List<Vector3> GetDistinctPositionsSortedForOneRoom(List<Wall> walls)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"","param-walls":"An entire room where all the walls are linked (circular)"},"params":{"walls":"List<Wall>"}},{"signature":"ErgoShop.Utils.WallFunctions.GetDistinctPositions3D(List<Wall>, float)","childcount":0,"type":"Method","name":"GetDistinctPositions3D","token":"public static List<Vector3> GetDistinctPositions3D(List<Wall> walls, float y=0)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":""},"params":{"walls":"List<Wall>","y":"float"}},{"signature":"ErgoShop.Utils.WallFunctions.GetVerticesToStickWalls(Wall, Wall)","childcount":0,"type":"Method","name":"GetVerticesToStickWalls","token":"private static Vector3[] GetVerticesToStickWalls(Wall cur, Wall linked)","scope":"ErgoShop.Utils.WallFunctions","params":{"cur":"Wall","linked":"Wall"}},{"signature":"ErgoShop.Utils.WallFunctions.MakeGraphicalWall(Vector3, Vector3, Wall)","childcount":0,"type":"Method","name":"MakeGraphicalWall","token":"public static List<Vector3> MakeGraphicalWall(Vector3 start, Vector3 end, Wall w)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":"Draw a wall w with extremities start and end"},"params":{"start":"Vector3","end":"Vector3","w":"Wall"}},{"signature":"ErgoShop.Utils.WallFunctions.SeekAssociatedObjectFromGameObject(GameObject)","childcount":0,"type":"Method","name":"SeekAssociatedObjectFromGameObject","token":"public static GameObject SeekAssociatedObjectFromGameObject(GameObject go)","scope":"ErgoShop.Utils.WallFunctions","comments":{"summary":""},"params":{"go":"GameObject"}},{"signature":"ErgoShop.Utils.WallFunctions.tol","childcount":0,"type":"Field","name":"tol","token":"float tol ","scope":"ErgoShop.Utils.WallFunctions"},{"signature":"ErgoShop.Utils.WallFunctions.newWall1","childcount":0,"type":"Field","name":"newWall1","token":"Wall newWall1 ","scope":"ErgoShop.Utils.WallFunctions"},{"signature":"ErgoShop.Utils.WallFunctions.newWall2","childcount":0,"type":"Field","name":"newWall2","token":"Wall newWall2 ","scope":"ErgoShop.Utils.WallFunctions"},{"signature":"ErgoShop.Utils.SortOpenings(List<WallOpening>)","childcount":0,"type":"Method","name":"SortOpenings","token":"public static List<WallOpening> SortOpenings(List<WallOpening> opens)","scope":"ErgoShop.Utils","comments":{"summary":"Sort openings by percentage position"},"params":{"opens":"List<WallOpening>"}},{"signature":"ErgoShop.Utils.SetNewPointsForWall(Wall, Vector3, Vector3, bool, bool, bool)","childcount":0,"type":"Method","name":"SetNewPointsForWall","token":"public static void SetNewPointsForWall(Wall w, Vector3 newP1, Vector3 newP2, bool isRect = false, bool moveOpenings = false, bool updateLinked = true)","scope":"ErgoShop.Utils","comments":{"summary":"Update wall position by updating P1 and P2, and linked walls"},"params":{"w":"Wall","newP1":"Vector3","newP2":"Vector3","isRect":"bool","moveOpenings":"bool","updateLinked":"bool"}},{"signature":"ErgoShop.Utils.tol","childcount":0,"type":"Field","name":"tol","token":"float tol ","scope":"ErgoShop.Utils"},{"signature":"ErgoShop.Utils.i","childcount":0,"type":"Field","name":"i","token":"int i ","scope":"ErgoShop.Utils"},{"signature":"ErgoShop.Utils.j","childcount":0,"type":"Field","name":"j","token":"int j ","scope":"ErgoShop.Utils"},{"signature":"ErgoShop.Utils.w1","childcount":0,"type":"Field","name":"w1","token":"Wall w1 ","scope":"ErgoShop.Utils"},{"signature":"ErgoShop.Utils.w2","childcount":0,"type":"Field","name":"w2","token":"Wall w2 ","scope":"ErgoShop.Utils"},{"signature":"ErgoShop.Utils.inter","childcount":0,"type":"Field","name":"inter","token":"Vector3 inter ","scope":"ErgoShop.Utils"},{"signature":"ErgoShop.Utils.WallIntersection","childcount":0,"type":"Property","name":"WallIntersection","token":"new WallIntersection { get; }","scope":"ErgoShop.Utils"},{"signature":"ViewMode","childcount":2,"type":"Enum","name":"ViewMode","token":"public enum ViewMode ","scope":"","comments":{"summary":"To know if we are currently in 2D or 3D view"}},{"signature":"ViewMode.Top","childcount":0,"type":"EnumValue","name":"Top","token":"Top","scope":"ViewMode"},{"signature":"ViewMode.ThreeD","childcount":0,"type":"EnumValue","name":"ThreeD","token":"ThreeD","scope":"ViewMode"},{"signature":"IOperation","childcount":1,"type":"Interface","name":"IOperation","token":"public interface IOperation ","scope":"","comments":{"summary":"Interface to define an operation NOT USED"}},{"signature":"IOperation.Cancel()","childcount":0,"type":"Method","name":"Cancel","token":"void Cancel()","scope":"IOperation"},{"signature":"ErgoShop.Operations","childcount":3,"type":"Namespace","name":"ErgoShop.Operations","token":"namespace ErgoShop.Operations","scope":""},{"signature":"ErgoShop.Operations.Operation","childcount":1,"type":"Class","name":"Operation","token":"public class Operation : IOperation ","scope":"ErgoShop.Operations"},{"signature":"ErgoShop.Operations.Operation.Cancel()","childcount":0,"type":"Method","name":"Cancel","token":"public void Cancel()","scope":"ErgoShop.Operations.Operation"},{"signature":"ErgoShop.Operations.AutoSave","childcount":3,"type":"Class","name":"AutoSave","token":"public class AutoSave ","scope":"ErgoShop.Operations","comments":{"summary":"Autosave poco"}},{"signature":"ErgoShop.Operations.AutoSave.Date","childcount":0,"type":"Property","name":"Date","token":"public DateTime Date { get; set; }","scope":"ErgoShop.Operations.AutoSave","comments":{"summary":"When"}},{"signature":"ErgoShop.Operations.AutoSave.ProjectPath","childcount":0,"type":"Property","name":"ProjectPath","token":"public string ProjectPath { get; set; }","scope":"ErgoShop.Operations.AutoSave","comments":{"summary":"path to json file"}},{"signature":"ErgoShop.Operations.AutoSave.OperationName","childcount":0,"type":"Property","name":"OperationName","token":"public string OperationName { get; set; }","scope":"ErgoShop.Operations.AutoSave","comments":{"summary":"What was the last operation ?"}},{"signature":"ErgoShop.Operations.OperationsBufferScript","childcount":16,"type":"Class","name":"OperationsBufferScript","token":"public class OperationsBufferScript : MonoBehaviour ","scope":"ErgoShop.Operations","comments":{"summary":"Cancel / Redo system"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.CANCEL_LIMIT_COUNT","childcount":0,"type":"Field","name":"CANCEL_LIMIT_COUNT","token":"private const int CANCEL_LIMIT_COUNT = 50;","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"How many operations do we store"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.m_projects","childcount":0,"type":"Field","name":"m_projects","token":"private List<AutoSave> m_projects ","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"auto save + navigation between projects"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.m_idx","childcount":0,"type":"Field","name":"m_idx","token":"private int m_idx ","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Index for current autosave state"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.goAuto","childcount":0,"type":"Field","name":"goAuto","token":"private bool goAuto ","scope":"ErgoShop.Operations.OperationsBufferScript"},{"signature":"ErgoShop.Operations.OperationsBufferScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static OperationsBufferScript Instance { get; set; }","scope":"ErgoShop.Operations.OperationsBufferScript"},{"signature":"ErgoShop.Operations.OperationsBufferScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.Operations.OperationsBufferScript"},{"signature":"ErgoShop.Operations.OperationsBufferScript.GetOperations()","childcount":0,"type":"Method","name":"GetOperations","token":"public List<AutoSave> GetOperations()","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Get all autosave data"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.Operations.OperationsBufferScript"},{"signature":"ErgoShop.Operations.OperationsBufferScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.Operations.OperationsBufferScript"},{"signature":"ErgoShop.Operations.OperationsBufferScript.Cancel()","childcount":0,"type":"Method","name":"Cancel","token":"public void Cancel()","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Cancel last action by loading the previous autosave"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.Redo()","childcount":0,"type":"Method","name":"Redo","token":"public void Redo()","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Redo last action by loading the next autosave"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.GoToOperation(AutoSave)","childcount":0,"type":"Method","name":"GoToOperation","token":"public void GoToOperation(AutoSave auto)","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Go to specific autosave"},"params":{"auto":"AutoSave"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.ClearAutoSave()","childcount":0,"type":"Method","name":"ClearAutoSave","token":"public void ClearAutoSave()","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Clear list"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.GetLastAutoSaveContent()","childcount":0,"type":"Method","name":"GetLastAutoSaveContent","token":"public string GetLastAutoSaveContent()","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Get json file content"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.AddAutoSave(string)","childcount":0,"type":"Method","name":"AddAutoSave","token":"public void AddAutoSave(string operationName)","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Create new autosave\r\n         This method is called by lots of scripts in the software\r\n         All actions modifying the project will call this method after completing their function","param-operationName":"What is the operation the user just did ? (create wall, room, update a propertie etc)"},"params":{"operationName":"string"}},{"signature":"ErgoShop.Operations.OperationsBufferScript.DeleteAllAutoSavesAfterIdx()","childcount":0,"type":"Method","name":"DeleteAllAutoSavesAfterIdx","token":"private void DeleteAllAutoSavesAfterIdx()","scope":"ErgoShop.Operations.OperationsBufferScript","comments":{"summary":"Clean all \"redo states\" (because a new operation is being saved)"}},{"signature":"ErgoShop.POCO","childcount":21,"type":"Namespace","name":"ErgoShop.POCO","token":"namespace ErgoShop.POCO","scope":""},{"signature":"ErgoShop.POCO.Ceil","childcount":2,"type":"Class","name":"Ceil","token":"public class Ceil ","scope":"ErgoShop.POCO","comments":{"summary":"Ceil data is the color (saved) and its gameobject (regenerated)"}},{"signature":"ErgoShop.POCO.Ceil.Color","childcount":0,"type":"Property","name":"Color","token":"public Color Color { get; set; }","scope":"ErgoShop.POCO.Ceil"},{"signature":"ErgoShop.POCO.Ceil.planeGenerated","childcount":0,"type":"Field","name":"planeGenerated","token":"[JsonIgnore]\npublic GameObject planeGenerated ","scope":"ErgoShop.POCO.Ceil","comments":{"summary":"its gameobject (regenerated)"}},{"signature":"ErgoShop.POCO.CharacterElement","childcount":5,"type":"Class","name":"CharacterElement","token":"public class CharacterElement : MovableElement ","scope":"ErgoShop.POCO","comments":{"summary":"Character is used to check environnemental constraints. Can be a dummy or a wheelchair (or both)"}},{"signature":"ErgoShop.POCO.CharacterElement.Type","childcount":0,"type":"Property","name":"Type","token":"public CharacterType Type { get; set; }","scope":"ErgoShop.POCO.CharacterElement"},{"signature":"ErgoShop.POCO.CharacterElement.SpreadArms","childcount":0,"type":"Property","name":"SpreadArms","token":"public bool SpreadArms { get; set; }","scope":"ErgoShop.POCO.CharacterElement","comments":{"summary":"Spread arms (T-Pose) or let them along the body"}},{"signature":"ErgoShop.POCO.CharacterElement.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public override Element GetCopy()","scope":"ErgoShop.POCO.CharacterElement","comments":{"summary":"Instantiate an identical object","returns":"The same Element"}},{"signature":"ErgoShop.POCO.CharacterElement.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public override string GetDescription()","scope":"ErgoShop.POCO.CharacterElement","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.CharacterElement.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public override void RebuildSceneData()","scope":"ErgoShop.POCO.CharacterElement","comments":{"summary":"Rebuild 2D and 3D objects from data"}},{"signature":"ErgoShop.POCO.CustomFurniture","childcount":2,"type":"Class","name":"CustomFurniture","token":"public class CustomFurniture ","scope":"ErgoShop.POCO","comments":{"summary":"Data to store path to obj file + name to display in the settings"}},{"signature":"ErgoShop.POCO.CustomFurniture.Path","childcount":0,"type":"Property","name":"Path","token":"public string Path { get; set; }","scope":"ErgoShop.POCO.CustomFurniture"},{"signature":"ErgoShop.POCO.CustomFurniture.Name","childcount":0,"type":"Property","name":"Name","token":"public string Name { get; set; }","scope":"ErgoShop.POCO.CustomFurniture"},{"signature":"ErgoShop.POCO.Element","childcount":10,"type":"Class","name":"Element","token":"public abstract class Element : IElement ","scope":"ErgoShop.POCO","comments":{"summary":"Element is base class for almost any object in scene / project.\r\n     It contain all common data for walls, furnitures, and so on"}},{"signature":"ErgoShop.POCO.Element.Id","childcount":0,"type":"Property","name":"Id","token":"public int Id { get; set; }","scope":"ErgoShop.POCO.Element","comments":{"summary":"USED IN SAVE/LOAD"}},{"signature":"ErgoShop.POCO.Element.associated2DObject","childcount":0,"type":"Field","name":"associated2DObject","token":"[JsonIgnore]\npublic GameObject associated2DObject ","scope":"ErgoShop.POCO.Element","comments":{"summary":"2D Object in 2D view. Mostly a sprite"}},{"signature":"ErgoShop.POCO.Element.associated3DObject","childcount":0,"type":"Field","name":"associated3DObject","token":"[JsonIgnore]\npublic GameObject associated3DObject ","scope":"ErgoShop.POCO.Element","comments":{"summary":"3D Object in 3D View. Either a generated mesh, or a, imported mesh with collider and rigidbody"}},{"signature":"ErgoShop.POCO.Element.text2D","childcount":0,"type":"Field","name":"text2D","token":"[JsonIgnore]\npublic TextMesh text2D ","scope":"ErgoShop.POCO.Element","comments":{"summary":"Text mesh 2d to put in front of the associated2DObject with the element name"}},{"signature":"ErgoShop.POCO.Element.widthCotation","childcount":0,"type":"Field","name":"widthCotation","token":"[JsonIgnore]\npublic CotationsScript widthCotation ","scope":"ErgoShop.POCO.Element","comments":{"summary":"measure shown in 2D"}},{"signature":"ErgoShop.POCO.Element.heightCotation","childcount":0,"type":"Field","name":"heightCotation","token":"[JsonIgnore]\npublic CotationsScript heightCotation ","scope":"ErgoShop.POCO.Element","comments":{"summary":"measure shown in 2D"}},{"signature":"ErgoShop.POCO.Element.MeshSize","childcount":0,"type":"Property","name":"MeshSize","token":"[JsonIgnore]\npublic Vector3 MeshSize { get; }","scope":"ErgoShop.POCO.Element","comments":{"summary":"Compute mesh size from mesh boundaries (if no 3D Object returns positiveInfinity)"}},{"signature":"ErgoShop.POCO.Element.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public abstract void RebuildSceneData()","scope":"ErgoShop.POCO.Element","comments":{"summary":"Rebuild 2D and 3D objects from data"}},{"signature":"ErgoShop.POCO.Element.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public abstract Element GetCopy()","scope":"ErgoShop.POCO.Element","comments":{"summary":"Instantiate an identical object","returns":"The same Element"}},{"signature":"ErgoShop.POCO.Element.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public abstract string GetDescription()","scope":"ErgoShop.POCO.Element","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.ElementGroup","childcount":8,"type":"Class","name":"ElementGroup","token":"public class ElementGroup : Element ","scope":"ErgoShop.POCO","comments":{"summary":"An element group is an element containing other elements\r\n     Its used to select several elements easily"}},{"signature":"ErgoShop.POCO.ElementGroup.Elements","childcount":0,"type":"Property","name":"Elements","token":"[JsonIgnore]\npublic List<Element> Elements { get; set; }","scope":"ErgoShop.POCO.ElementGroup","comments":{"summary":"Elements. Not saved in json file because we only store the ids to rebuild references later"}},{"signature":"ErgoShop.POCO.ElementGroup.ElementsIds","childcount":0,"type":"Property","name":"ElementsIds","token":"public List<int> ElementsIds { get; set; }","scope":"ErgoShop.POCO.ElementGroup","comments":{"summary":"Ids for saving"}},{"signature":"ErgoShop.POCO.ElementGroup.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public override Element GetCopy()","scope":"ErgoShop.POCO.ElementGroup","comments":{"summary":"Copy all elements and make a new group containing those new elements","returns":"the new group"}},{"signature":"ErgoShop.POCO.ElementGroup.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public override void RebuildSceneData()","scope":"ErgoShop.POCO.ElementGroup","comments":{"summary":"Rebuild 2D and 3D objects from data"}},{"signature":"ErgoShop.POCO.ElementGroup.GetGroupFromGameObject(GameObject)","childcount":0,"type":"Method","name":"GetGroupFromGameObject","token":"public ElementGroup GetGroupFromGameObject(GameObject go)","scope":"ErgoShop.POCO.ElementGroup","comments":{"summary":"Seek a group from a gameobject associated with any element in this group","returns":"the group"},"params":{"go":"GameObject"}},{"signature":"ErgoShop.POCO.ElementGroup.GetGroupFromElement(Element)","childcount":0,"type":"Method","name":"GetGroupFromElement","token":"public ElementGroup GetGroupFromElement(Element e)","scope":"ErgoShop.POCO.ElementGroup","comments":{"summary":"Seek a group from an element","returns":"the group containing this element"},"params":{"e":"Element"}},{"signature":"ErgoShop.POCO.ElementGroup.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public override string GetDescription()","scope":"ErgoShop.POCO.ElementGroup","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.ElementGroup.ElementGroup()","childcount":0,"type":"Constructor","name":"ElementGroup","token":"public  ElementGroup()","scope":"ErgoShop.POCO.ElementGroup","comments":{"summary":"Constructor"}},{"signature":"ErgoShop.POCO.ErgoShopParameters","childcount":5,"type":"Class","name":"ErgoShopParameters","token":"public class ErgoShopParameters ","scope":"ErgoShop.POCO","comments":{"summary":"Settings stored in a json file in appdata"}},{"signature":"ErgoShop.POCO.ErgoShopParameters.TagOnlyWall","childcount":0,"type":"Property","name":"TagOnlyWall","token":"public bool TagOnlyWall { get; set; }","scope":"ErgoShop.POCO.ErgoShopParameters","comments":{"summary":"Measure to the next obstacle or to the next wall only ?"}},{"signature":"ErgoShop.POCO.ErgoShopParameters.CameraSpeed","childcount":0,"type":"Property","name":"CameraSpeed","token":"public float CameraSpeed { get; set; }","scope":"ErgoShop.POCO.ErgoShopParameters","comments":{"summary":"CameraSpeed to move and zoom"}},{"signature":"ErgoShop.POCO.ErgoShopParameters.ScreenShotFolder","childcount":0,"type":"Property","name":"ScreenShotFolder","token":"public string ScreenShotFolder { get; set; }","scope":"ErgoShop.POCO.ErgoShopParameters","comments":{"summary":"Folder path used to store screenshots"}},{"signature":"ErgoShop.POCO.ErgoShopParameters.ShowGrid","childcount":0,"type":"Property","name":"ShowGrid","token":"public bool ShowGrid { get; set; }","scope":"ErgoShop.POCO.ErgoShopParameters","comments":{"summary":"Show the 1meter/1meter grid in 2d view ?"}},{"signature":"ErgoShop.POCO.ErgoShopParameters.CustomFurnitures","childcount":0,"type":"Property","name":"CustomFurnitures","token":"public List<CustomFurniture> CustomFurnitures { get; set; }","scope":"ErgoShop.POCO.ErgoShopParameters","comments":{"summary":"Custom Furnitures List"}},{"signature":"ErgoShop.POCO.Floor","childcount":12,"type":"Class","name":"Floor","token":"public class Floor ","scope":"ErgoShop.POCO","comments":{"summary":"To have more computer resources, only one floor is loaded at a time.\r\n     Each floor contain all data to rebuild rooms, furnitures etc"}},{"signature":"ErgoShop.POCO.Floor.FloorName","childcount":0,"type":"Property","name":"FloorName","token":"public string FloorName { get; set; }","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.WallHeight","childcount":0,"type":"Property","name":"WallHeight","token":"public float WallHeight { get; set; }","scope":"ErgoShop.POCO.Floor","comments":{"summary":"wall height when creating a new wall"}},{"signature":"ErgoShop.POCO.Floor.Rooms","childcount":0,"type":"Property","name":"Rooms","token":"public List<Room> Rooms { get; set; }","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.Walls","childcount":0,"type":"Property","name":"Walls","token":"public List<Wall> Walls { get; set; }","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.Furnitures","childcount":0,"type":"Property","name":"Furnitures","token":"public List<Furniture> Furnitures { get; set; }","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.Stairs","childcount":0,"type":"Property","name":"Stairs","token":"public List<Stairs> Stairs { get; set; }","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.TextZoneElements","childcount":0,"type":"Property","name":"TextZoneElements","token":"public List<TextZoneElement> TextZoneElements { get; set; }","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.Groups","childcount":0,"type":"Property","name":"Groups","token":"public List<ElementGroup> Groups { get; set; }","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.Characters","childcount":0,"type":"Property","name":"Characters","token":"public List<CharacterElement> Characters { get; set; }","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.Floor()","childcount":0,"type":"Constructor","name":"Floor","token":"public  Floor()","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.ClearAll()","childcount":0,"type":"Method","name":"ClearAll","token":"public void ClearAll()","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Floor.NewLists()","childcount":0,"type":"Method","name":"NewLists","token":"public void NewLists()","scope":"ErgoShop.POCO.Floor"},{"signature":"ErgoShop.POCO.Furniture","childcount":11,"type":"Class","name":"Furniture","token":"public class Furniture : MovableElement ","scope":"ErgoShop.POCO","comments":{"summary":"A furniture is a movableelement"}},{"signature":"ErgoShop.POCO.Furniture.Type","childcount":0,"type":"Property","name":"Type","token":"public string Type { get; set; }","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"Type to filter in list (assise, eau, cuisine...)"}},{"signature":"ErgoShop.POCO.Furniture.Name","childcount":0,"type":"Property","name":"Name","token":"public string Name { get; set; }","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"Name diplayed"}},{"signature":"ErgoShop.POCO.Furniture.PrefabName","childcount":0,"type":"Property","name":"PrefabName","token":"public string PrefabName { get; set; }","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"PrefabName for runtime loading"}},{"signature":"ErgoShop.POCO.Furniture.ScaleModifier","childcount":0,"type":"Property","name":"ScaleModifier","token":"public float ScaleModifier { get; set; }","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"Scale for init size (usually = 1)"}},{"signature":"ErgoShop.POCO.Furniture.IsCustom","childcount":0,"type":"Property","name":"IsCustom","token":"public bool IsCustom { get; set; }","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"True if imported furniture"}},{"signature":"ErgoShop.POCO.Furniture.CustomPath","childcount":0,"type":"Property","name":"CustomPath","token":"public string CustomPath { get; set; }","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"If imported furniture, the obj path. If not, string.empty"}},{"signature":"ErgoShop.POCO.Furniture.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public override void RebuildSceneData()","scope":"ErgoShop.POCO.Furniture"},{"signature":"ErgoShop.POCO.Furniture.SetSize(Vector3)","childcount":0,"type":"Method","name":"SetSize","token":"public override void SetSize(Vector3 newSize)","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"Set element size, updates 2d and 3d objects","param-newSize":"Wanted size"},"params":{"newSize":"Vector3"}},{"signature":"ErgoShop.POCO.Furniture.AdjustSpriteSize()","childcount":0,"type":"Method","name":"AdjustSpriteSize","token":"public void AdjustSpriteSize()","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"Adjust sprite size according to its real size, the scaling, and the furniture size.\r\n         The goal is to have the same x y dimensions as x z in 3d"}},{"signature":"ErgoShop.POCO.Furniture.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public override Element GetCopy()","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"Instantiate an identical object","returns":"The same Element"}},{"signature":"ErgoShop.POCO.Furniture.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public override string GetDescription()","scope":"ErgoShop.POCO.Furniture","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.Ground","childcount":2,"type":"Class","name":"Ground","token":"public class Ground ","scope":"ErgoShop.POCO","comments":{"summary":"Ground data is the color (saved) and its gameobject (regenerated)"}},{"signature":"ErgoShop.POCO.Ground.Color","childcount":0,"type":"Property","name":"Color","token":"public Color Color { get; set; }","scope":"ErgoShop.POCO.Ground"},{"signature":"ErgoShop.POCO.Ground.planeGenerated","childcount":0,"type":"Field","name":"planeGenerated","token":"[JsonIgnore]\npublic GameObject planeGenerated ","scope":"ErgoShop.POCO.Ground","comments":{"summary":"its gameobject (regenerated)"}},{"signature":"ErgoShop.POCO.HelperElement","childcount":0,"type":"Class","name":"HelperElement","token":"public abstract class HelperElement : MovableElement ","scope":"ErgoShop.POCO","comments":{"summary":"For now, an helper element is exactly the same as a movable element. It can be changed in the future"}},{"signature":"ErgoShop.POCO.Home","childcount":2,"type":"Class","name":"Home","token":"public class Home ","scope":"ErgoShop.POCO","comments":{"summary":"Stores address and type."}},{"signature":"ErgoShop.POCO.Home.Address","childcount":0,"type":"Property","name":"Address","token":"public string Address { get; set; }","scope":"ErgoShop.POCO.Home"},{"signature":"ErgoShop.POCO.Home.Type","childcount":0,"type":"Property","name":"Type","token":"public string Type { get; set; }","scope":"ErgoShop.POCO.Home","comments":{"summary":"Can be anything, the users sets it"}},{"signature":"ErgoShop.POCO.IElement","childcount":3,"type":"Interface","name":"IElement","token":"public interface IElement ","scope":"ErgoShop.POCO","comments":{"summary":"Interface for Element"}},{"signature":"ErgoShop.POCO.IElement.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"void RebuildSceneData()","scope":"ErgoShop.POCO.IElement","comments":{"summary":"Rebuild 2D and 3D objects from data"}},{"signature":"ErgoShop.POCO.IElement.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"Element GetCopy()","scope":"ErgoShop.POCO.IElement","comments":{"summary":"Instantiate an identical object","returns":"The same Element"}},{"signature":"ErgoShop.POCO.IElement.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"string GetDescription()","scope":"ErgoShop.POCO.IElement","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.MovableElement","childcount":12,"type":"Class","name":"MovableElement","token":"public abstract class MovableElement : Element ","scope":"ErgoShop.POCO","comments":{"summary":"A movable element is like an element, but movable (thx captain)\r\n     The main feature is the Move method, which will be used by most of elements"}},{"signature":"ErgoShop.POCO.MovableElement.IsLocked","childcount":0,"type":"Property","name":"IsLocked","token":"public bool IsLocked { get; set; }","scope":"ErgoShop.POCO.MovableElement","comments":{"summary":"If true, prevents the object from moving"}},{"signature":"ErgoShop.POCO.MovableElement.Position","childcount":0,"type":"Property","name":"Position","token":"public Vector3 Position { get; set; }","scope":"ErgoShop.POCO.MovableElement"},{"signature":"ErgoShop.POCO.MovableElement.Rotation","childcount":0,"type":"Property","name":"Rotation","token":"public float Rotation { get; set; }","scope":"ErgoShop.POCO.MovableElement"},{"signature":"ErgoShop.POCO.MovableElement.Size","childcount":0,"type":"Property","name":"Size","token":"public Vector3 Size { get; set; }","scope":"ErgoShop.POCO.MovableElement"},{"signature":"ErgoShop.POCO.MovableElement.EulerAngles","childcount":0,"type":"Property","name":"EulerAngles","token":"public Vector3 EulerAngles { get; set; }","scope":"ErgoShop.POCO.MovableElement"},{"signature":"ErgoShop.POCO.MovableElement.AssociatedElement","childcount":0,"type":"Property","name":"AssociatedElement","token":"public Element AssociatedElement { get; set; }","scope":"ErgoShop.POCO.MovableElement"},{"signature":"ErgoShop.POCO.MovableElement.IsOnWall","childcount":0,"type":"Property","name":"IsOnWall","token":"public bool IsOnWall { get; set; }","scope":"ErgoShop.POCO.MovableElement"},{"signature":"ErgoShop.POCO.MovableElement.CanBePutOnFurniture","childcount":0,"type":"Property","name":"CanBePutOnFurniture","token":"public bool CanBePutOnFurniture { get; set; }","scope":"ErgoShop.POCO.MovableElement"},{"signature":"ErgoShop.POCO.MovableElement.AdjustCurrentFurnitureWallPos3D(Vector3, GameObject, Vector3)","childcount":0,"type":"Method","name":"AdjustCurrentFurnitureWallPos3D","token":"private void AdjustCurrentFurnitureWallPos3D(Vector3 pos3D, GameObject go, Vector3 startingPos)","scope":"ErgoShop.POCO.MovableElement","comments":{"summary":"adjust 2d and 3d objects transform according to data"},"params":{"pos3D":"Vector3","go":"GameObject","startingPos":"Vector3"}},{"signature":"ErgoShop.POCO.MovableElement.SetSize(Vector3)","childcount":0,"type":"Method","name":"SetSize","token":"public virtual void SetSize(Vector3 newSize)","scope":"ErgoShop.POCO.MovableElement","comments":{"summary":"Set element size, updates 2d and 3d objects","param-newSize":"Wanted size"},"params":{"newSize":"Vector3"}},{"signature":"ErgoShop.POCO.MovableElement.SetPosition(Vector3)","childcount":0,"type":"Method","name":"SetPosition","token":"public virtual void SetPosition(Vector3 newPosition)","scope":"ErgoShop.POCO.MovableElement","comments":{"summary":"Update position from wanted one"},"params":{"newPosition":"Vector3"}},{"signature":"ErgoShop.POCO.MovableElement.Move(Vector3)","childcount":0,"type":"Method","name":"Move","token":"public virtual void Move(Vector3 startingPos)","scope":"ErgoShop.POCO.MovableElement","comments":{"summary":"Move function. The starting pos is where the users starts clicking,\r\n         so its a kind of offset so the element does not \"teleport\" its position into mouse but moves smoothly","param-startingPos":"where the users starts clicking"},"params":{"startingPos":"Vector3"}},{"signature":"ErgoShop.POCO.Person","childcount":2,"type":"Class","name":"Person","token":"public class Person ","scope":"ErgoShop.POCO","comments":{"summary":"A person is just its first and last name for now"}},{"signature":"ErgoShop.POCO.Person.LastName","childcount":0,"type":"Property","name":"LastName","token":"public string LastName { get; set; }","scope":"ErgoShop.POCO.Person"},{"signature":"ErgoShop.POCO.Person.FirstName","childcount":0,"type":"Property","name":"FirstName","token":"public string FirstName { get; set; }","scope":"ErgoShop.POCO.Person"},{"signature":"ErgoShop.POCO.Project","childcount":11,"type":"Class","name":"Project","token":"public class Project ","scope":"ErgoShop.POCO","comments":{"summary":"Class containing the project data. Its used to load and save data with json files"}},{"signature":"ErgoShop.POCO.Project.ProjectName","childcount":0,"type":"Property","name":"ProjectName","token":"public string ProjectName { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.Date","childcount":0,"type":"Property","name":"Date","token":"public DateTime Date { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.Person","childcount":0,"type":"Property","name":"Person","token":"public Person Person { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.HomeType","childcount":0,"type":"Property","name":"HomeType","token":"public string HomeType { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.Version","childcount":0,"type":"Property","name":"Version","token":"public string Version { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.Comment","childcount":0,"type":"Property","name":"Comment","token":"public string Comment { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.Floors","childcount":0,"type":"Property","name":"Floors","token":"public List<Floor> Floors { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.CurrentFloorIdx","childcount":0,"type":"Property","name":"CurrentFloorIdx","token":"public int CurrentFloorIdx { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.WallThickness","childcount":0,"type":"Property","name":"WallThickness","token":"public float WallThickness { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.WallHeight","childcount":0,"type":"Property","name":"WallHeight","token":"public float WallHeight { get; set; }","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Project.GetCurrentFloor()","childcount":0,"type":"Method","name":"GetCurrentFloor","token":"public Floor GetCurrentFloor()","scope":"ErgoShop.POCO.Project"},{"signature":"ErgoShop.POCO.Room","childcount":13,"type":"Class","name":"Room","token":"public class Room : MovableElement ","scope":"ErgoShop.POCO","comments":{"summary":"Room data. A room is made of at least 3 walls\r\n     Will all those data we can generate a ceiling and a ground floor"}},{"signature":"ErgoShop.POCO.Room.Name","childcount":0,"type":"Property","name":"Name","token":"public string Name { get; set; }","scope":"ErgoShop.POCO.Room"},{"signature":"ErgoShop.POCO.Room.Type","childcount":0,"type":"Property","name":"Type","token":"public string Type { get; set; }","scope":"ErgoShop.POCO.Room","comments":{"summary":"Not used for now"}},{"signature":"ErgoShop.POCO.Room.Walls","childcount":0,"type":"Property","name":"Walls","token":"public List<Wall> Walls { get; set; }","scope":"ErgoShop.POCO.Room"},{"signature":"ErgoShop.POCO.Room.Height","childcount":0,"type":"Property","name":"Height","token":"public float Height { get; set; }","scope":"ErgoShop.POCO.Room"},{"signature":"ErgoShop.POCO.Room.Ceil","childcount":0,"type":"Property","name":"Ceil","token":"public Ceil Ceil { get; set; }","scope":"ErgoShop.POCO.Room"},{"signature":"ErgoShop.POCO.Room.Ground","childcount":0,"type":"Property","name":"Ground","token":"public Ground Ground { get; set; }","scope":"ErgoShop.POCO.Room"},{"signature":"ErgoShop.POCO.Room.LockAngles","childcount":0,"type":"Property","name":"LockAngles","token":"public bool LockAngles { get; set; }","scope":"ErgoShop.POCO.Room"},{"signature":"ErgoShop.POCO.Room.GetCenter()","childcount":0,"type":"Method","name":"GetCenter","token":"public Vector3 GetCenter()","scope":"ErgoShop.POCO.Room"},{"signature":"ErgoShop.POCO.Room.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public override void RebuildSceneData()","scope":"ErgoShop.POCO.Room","comments":{"summary":"Not used since the room is not an element like the others..."}},{"signature":"ErgoShop.POCO.Room.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public override Element GetCopy()","scope":"ErgoShop.POCO.Room","comments":{"summary":"Instantiate an identical object\r\n         Copies also the walls","returns":"The same Element"}},{"signature":"ErgoShop.POCO.Room.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public override string GetDescription()","scope":"ErgoShop.POCO.Room","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.Room.Move(Vector3)","childcount":0,"type":"Method","name":"Move","token":"public override void Move(Vector3 startingPos)","scope":"ErgoShop.POCO.Room","comments":{"summary":"since we move the walls, this override does nothing in particular"},"params":{"startingPos":"Vector3"}},{"signature":"ErgoShop.POCO.Room.ShowCotations","childcount":0,"type":"Field","name":"ShowCotations","token":"[JsonIgnore]\npublic bool ShowCotations ","scope":"ErgoShop.POCO.Room"},{"signature":"ErgoShop.POCO.Stairs","childcount":12,"type":"Class","name":"Stairs","token":"public class Stairs : MovableElement ","scope":"ErgoShop.POCO"},{"signature":"ErgoShop.POCO.Stairs.NbSteps","childcount":0,"type":"Property","name":"NbSteps","token":"public int NbSteps { get; set; }","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.BuildSides","childcount":0,"type":"Property","name":"BuildSides","token":"public bool BuildSides { get; set; }","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.Width","childcount":0,"type":"Property","name":"Width","token":"public float Width { get; set; }","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.Height","childcount":0,"type":"Property","name":"Height","token":"public float Height { get; set; }","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.Curvature","childcount":0,"type":"Property","name":"Curvature","token":"public float Curvature { get; set; }","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.InnerRadius","childcount":0,"type":"Property","name":"InnerRadius","token":"public float InnerRadius { get; set; }","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.ToTheLeft","childcount":0,"type":"Property","name":"ToTheLeft","token":"public bool ToTheLeft { get; set; }","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.Depth","childcount":0,"type":"Property","name":"Depth","token":"public float Depth { get; set; }","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public override void RebuildSceneData()","scope":"ErgoShop.POCO.Stairs"},{"signature":"ErgoShop.POCO.Stairs.Move(Vector3)","childcount":0,"type":"Method","name":"Move","token":"public override void Move(Vector3 offset2d)","scope":"ErgoShop.POCO.Stairs","comments":{"summary":"Move the opening along the wall, according to mouse.","param-offset2d":"The starting position when the users clicks"},"params":{"offset2d":"Vector3"}},{"signature":"ErgoShop.POCO.Stairs.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public override Element GetCopy()","scope":"ErgoShop.POCO.Stairs","comments":{"summary":"Instantiate an identical object","returns":"The same Element"}},{"signature":"ErgoShop.POCO.Stairs.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public override string GetDescription()","scope":"ErgoShop.POCO.Stairs","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.TextZoneElement","childcount":8,"type":"Class","name":"TextZoneElement","token":"public class TextZoneElement : HelperElement ","scope":"ErgoShop.POCO","comments":{"summary":"Comment zone in both 2d and 3d view"}},{"signature":"ErgoShop.POCO.TextZoneElement.Text","childcount":0,"type":"Property","name":"Text","token":"public string Text { get; set; }","scope":"ErgoShop.POCO.TextZoneElement","comments":{"summary":"Text in the comment box"}},{"signature":"ErgoShop.POCO.TextZoneElement.TextSize","childcount":0,"type":"Property","name":"TextSize","token":"public float TextSize { get; set; }","scope":"ErgoShop.POCO.TextZoneElement","comments":{"summary":"Size of the text"}},{"signature":"ErgoShop.POCO.TextZoneElement.TextColor","childcount":0,"type":"Property","name":"TextColor","token":"public Color TextColor { get; set; }","scope":"ErgoShop.POCO.TextZoneElement","comments":{"summary":"text color"}},{"signature":"ErgoShop.POCO.TextZoneElement.BackgroundColor","childcount":0,"type":"Property","name":"BackgroundColor","token":"public Color BackgroundColor { get; set; }","scope":"ErgoShop.POCO.TextZoneElement","comments":{"summary":"Box bg color"}},{"signature":"ErgoShop.POCO.TextZoneElement.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public override Element GetCopy()","scope":"ErgoShop.POCO.TextZoneElement","comments":{"summary":"Instantiate an identical object","returns":"The same Element"}},{"signature":"ErgoShop.POCO.TextZoneElement.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public override string GetDescription()","scope":"ErgoShop.POCO.TextZoneElement","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.TextZoneElement.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public override void RebuildSceneData()","scope":"ErgoShop.POCO.TextZoneElement","comments":{"summary":"Rebuild 2D and 3D objects from data"}},{"signature":"ErgoShop.POCO.TextZoneElement.SetSize(Vector3)","childcount":0,"type":"Method","name":"SetSize","token":"public override void SetSize(Vector3 newSize)","scope":"ErgoShop.POCO.TextZoneElement","comments":{"summary":"Set element size, updates 2d and 3d objects","param-newSize":"Wanted size"},"params":{"newSize":"Vector3"}},{"signature":"ErgoShop.POCO.Wall","childcount":32,"type":"Class","name":"Wall","token":"public class Wall : MovableElement ","scope":"ErgoShop.POCO","comments":{"summary":"Wall data. A wall is constitued of two extremities : P1 and P2\r\n     The wall shape is a trapeze according to other walls, thickness, and those 2 points."}},{"signature":"ErgoShop.POCO.Wall.Thickness","childcount":0,"type":"Property","name":"Thickness","token":"public float Thickness { get; set; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Thickness in meters"}},{"signature":"ErgoShop.POCO.Wall.Height","childcount":0,"type":"Property","name":"Height","token":"public float Height { get; set; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Height in meters"}},{"signature":"ErgoShop.POCO.Wall.IsBearingWall","childcount":0,"type":"Property","name":"IsBearingWall","token":"public bool IsBearingWall { get; set; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Currently not used"}},{"signature":"ErgoShop.POCO.Wall.P1","childcount":0,"type":"Property","name":"P1","token":"public Vector3 P1 { get; set; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Point 1, 2D"}},{"signature":"ErgoShop.POCO.Wall.P2","childcount":0,"type":"Property","name":"P2","token":"public Vector3 P2 { get; set; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Point 2, 2D"}},{"signature":"ErgoShop.POCO.Wall.Color","childcount":0,"type":"Property","name":"Color","token":"public Color Color { get; set; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Wall color, defined by a color picker with RGB"}},{"signature":"ErgoShop.POCO.Wall.Index","childcount":0,"type":"Property","name":"Index","token":"public int Index { get; set; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Wall index"}},{"signature":"ErgoShop.POCO.Wall.Openings","childcount":0,"type":"Property","name":"Openings","token":"public List<WallOpening> Openings { get; set; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Doors and windows contained in the wall"}},{"signature":"ErgoShop.POCO.Wall.linkedP1","childcount":0,"type":"Field","name":"linkedP1","token":"[JsonIgnore]\npublic List<Wall> linkedP1 ","scope":"ErgoShop.POCO.Wall"},{"signature":"ErgoShop.POCO.Wall.linkedP2","childcount":0,"type":"Field","name":"linkedP2","token":"[JsonIgnore]\npublic List<Wall> linkedP2 ","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Linked walls to P2"}},{"signature":"ErgoShop.POCO.Wall.walls2D","childcount":0,"type":"Field","name":"walls2D","token":"[JsonIgnore]\npublic List<Polygon> walls2D ","scope":"ErgoShop.POCO.Wall","comments":{"summary":"2D objects to make the wall"}},{"signature":"ErgoShop.POCO.Wall.walls3D","childcount":0,"type":"Field","name":"walls3D","token":"[JsonIgnore]\npublic List<Polygon> walls3D ","scope":"ErgoShop.POCO.Wall","comments":{"summary":"3D objects to make the wall"}},{"signature":"ErgoShop.POCO.Wall.ShowDetailedCotations","childcount":0,"type":"Property","name":"ShowDetailedCotations","token":"[JsonIgnore]\npublic bool ShowDetailedCotations { get; set; }","scope":"ErgoShop.POCO.Wall"},{"signature":"ErgoShop.POCO.Wall.cotOne","childcount":0,"type":"Field","name":"cotOne","token":"[JsonIgnore]\npublic CotationsScript cotOne ","scope":"ErgoShop.POCO.Wall","comments":{"summary":"measure on one side if ShowDetailedCotations is false"}},{"signature":"ErgoShop.POCO.Wall.cotTwo","childcount":0,"type":"Field","name":"cotTwo","token":"[JsonIgnore]\npublic CotationsScript cotTwo ","scope":"ErgoShop.POCO.Wall","comments":{"summary":"measure on one side if ShowDetailedCotations is false"}},{"signature":"ErgoShop.POCO.Wall.detailedCotations","childcount":0,"type":"Field","name":"detailedCotations","token":"[JsonIgnore]\npublic List<CotationsScript> detailedCotations ","scope":"ErgoShop.POCO.Wall","comments":{"summary":"detailed mesures if ShowDetailedCotations is true"}},{"signature":"ErgoShop.POCO.Wall.detailedCotations2","childcount":0,"type":"Field","name":"detailedCotations2","token":"[JsonIgnore]\npublic List<CotationsScript> detailedCotations2 ","scope":"ErgoShop.POCO.Wall","comments":{"summary":"detailed mesures if ShowDetailedCotations is true"}},{"signature":"ErgoShop.POCO.Wall.vertices2D","childcount":0,"type":"Field","name":"vertices2D","token":"[JsonIgnore]\npublic List<Vector3> vertices2D ","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Mesh data"}},{"signature":"ErgoShop.POCO.Wall.Length","childcount":0,"type":"Property","name":"Length","token":"public float Length { get; }","scope":"ErgoShop.POCO.Wall"},{"signature":"ErgoShop.POCO.Wall.OutsideLength","childcount":0,"type":"Property","name":"OutsideLength","token":"public float OutsideLength { get; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Get the length outside the room"}},{"signature":"ErgoShop.POCO.Wall.InsideLength","childcount":0,"type":"Property","name":"InsideLength","token":"public float InsideLength { get; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Get the length inside the room"}},{"signature":"ErgoShop.POCO.Wall.Direction","childcount":0,"type":"Property","name":"Direction","token":"public Vector3 Direction { get; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Get direction between the two points, normalized (2D)"}},{"signature":"ErgoShop.POCO.Wall.Perpendicular","childcount":0,"type":"Property","name":"Perpendicular","token":"public Vector3 Perpendicular { get; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Get the perpendicular vector according to the Direction, (2D)"}},{"signature":"ErgoShop.POCO.Wall.Center","childcount":0,"type":"Property","name":"Center","token":"public Vector3 Center { get; }","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Get wall center (2D)"}},{"signature":"ErgoShop.POCO.Wall.GetPerpendicularFromPos(Vector3)","childcount":0,"type":"Method","name":"GetPerpendicularFromPos","token":"public Vector3 GetPerpendicularFromPos(Vector3 pos)","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Get perpendicular to adjust furniture on the wall"},"params":{"pos":"Vector3"}},{"signature":"ErgoShop.POCO.Wall.GetInteriorSide(Room)","childcount":0,"type":"Method","name":"GetInteriorSide","token":"public Vector3 GetInteriorSide(Room r)","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Get Normal pointing room interior","returns":"the normal","param-r":"The room"},"params":{"r":"Room"}},{"signature":"ErgoShop.POCO.Wall.SetPosition(Vector3, bool)","childcount":0,"type":"Method","name":"SetPosition","token":"public void SetPosition(Vector3 newPosition, bool updateLinked=true)","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Set wall position. Cost lots of resources since it may update linkedwalls and each point","param-newPosition":"Wanted position","param-updateLinked":"true to update linked walls. Be careful If false the wall might be separated from the others"},"params":{"newPosition":"Vector3","updateLinked":"bool"}},{"signature":"ErgoShop.POCO.Wall.Wall()","childcount":0,"type":"Constructor","name":"Wall","token":"public  Wall()","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Constructor. Initialize associated gameobject for Unity"}},{"signature":"ErgoShop.POCO.Wall.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public override void RebuildSceneData()","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Rebuild associated gameobjects for unity"}},{"signature":"ErgoShop.POCO.Wall.Move(Vector3)","childcount":0,"type":"Method","name":"Move","token":"public override void Move(Vector3 offset)","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Move the opening along the wall, according to mouse.","param-offset":"The starting position when the users clicks"},"params":{"offset":"Vector3"}},{"signature":"ErgoShop.POCO.Wall.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public override Element GetCopy()","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Instantiate an identical object","returns":"The same Element"}},{"signature":"ErgoShop.POCO.Wall.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public override string GetDescription()","scope":"ErgoShop.POCO.Wall","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.WallOpening","childcount":18,"type":"Class","name":"WallOpening","token":"public class WallOpening : MovableElement ","scope":"ErgoShop.POCO","comments":{"summary":"WallOpening : Can be door or window. Several types"}},{"signature":"ErgoShop.POCO.WallOpening.PercentagePosition","childcount":0,"type":"Property","name":"PercentagePosition","token":"public float PercentagePosition { get; set; }","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Percentage position from Wall P1 (extremity)"}},{"signature":"ErgoShop.POCO.WallOpening.IsPull","childcount":0,"type":"Property","name":"IsPull","token":"public bool IsPull { get; set; }","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Pull or Push ?"}},{"signature":"ErgoShop.POCO.WallOpening.IsLeft","childcount":0,"type":"Property","name":"IsLeft","token":"public bool IsLeft { get; set; }","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"handle to open is left"}},{"signature":"ErgoShop.POCO.WallOpening.IsWindow","childcount":0,"type":"Property","name":"IsWindow","token":"public bool IsWindow { get; set; }","scope":"ErgoShop.POCO.WallOpening"},{"signature":"ErgoShop.POCO.WallOpening.WindowHeight","childcount":0,"type":"Property","name":"WindowHeight","token":"public float WindowHeight { get; set; }","scope":"ErgoShop.POCO.WallOpening"},{"signature":"ErgoShop.POCO.WallOpening.IsDouble","childcount":0,"type":"Property","name":"IsDouble","token":"public bool IsDouble { get; set; }","scope":"ErgoShop.POCO.WallOpening"},{"signature":"ErgoShop.POCO.WallOpening.Wall","childcount":0,"type":"Property","name":"Wall","token":"[JsonIgnore]\npublic Wall Wall { get; set; }","scope":"ErgoShop.POCO.WallOpening"},{"signature":"ErgoShop.POCO.WallOpening.DistanceLeft","childcount":0,"type":"Property","name":"DistanceLeft","token":"[JsonIgnore]\npublic float DistanceLeft { get; set; }","scope":"ErgoShop.POCO.WallOpening"},{"signature":"ErgoShop.POCO.WallOpening.DistanceRight","childcount":0,"type":"Property","name":"DistanceRight","token":"[JsonIgnore]\npublic float DistanceRight { get; set; }","scope":"ErgoShop.POCO.WallOpening"},{"signature":"ErgoShop.POCO.WallOpening.WallOpening()","childcount":0,"type":"Constructor","name":"WallOpening","token":"public  WallOpening()","scope":"ErgoShop.POCO.WallOpening"},{"signature":"ErgoShop.POCO.WallOpening.SetPositionFromPercentagePosition()","childcount":0,"type":"Method","name":"SetPositionFromPercentagePosition","token":"public void SetPositionFromPercentagePosition()","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Update opening global position from its position according to the first wall extremity (p1)"}},{"signature":"ErgoShop.POCO.WallOpening.SetPercentagePositionFromPosition()","childcount":0,"type":"Method","name":"SetPercentagePositionFromPosition","token":"public void SetPercentagePositionFromPosition()","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Update the position according to wall P1 (in percentage)"}},{"signature":"ErgoShop.POCO.WallOpening.SetPosition(Vector3)","childcount":0,"type":"Method","name":"SetPosition","token":"public override void SetPosition(Vector3 v)","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Update Global Position. The position is 2D !!","param-v":"Position 2D"},"params":{"v":"Vector3"}},{"signature":"ErgoShop.POCO.WallOpening.GetCorners()","childcount":0,"type":"Method","name":"GetCorners","token":"public Vector3[] GetCorners()","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Computes where the opposite of the handle is.","returns":"Opposite side of the handle. Returns the two extremities if its a double window/door"}},{"signature":"ErgoShop.POCO.WallOpening.Move(Vector3)","childcount":0,"type":"Method","name":"Move","token":"public override void Move(Vector3 offset)","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Move the opening along the wall, according to mouse.","param-offset":"The starting position when the users clicks"},"params":{"offset":"Vector3"}},{"signature":"ErgoShop.POCO.WallOpening.RebuildSceneData()","childcount":0,"type":"Method","name":"RebuildSceneData","token":"public override void RebuildSceneData()","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Rebuild 2D and 3D objects from data"}},{"signature":"ErgoShop.POCO.WallOpening.GetCopy()","childcount":0,"type":"Method","name":"GetCopy","token":"public override Element GetCopy()","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Instantiate an identical object","returns":"The same Element"}},{"signature":"ErgoShop.POCO.WallOpening.GetDescription()","childcount":0,"type":"Method","name":"GetDescription","token":"public override string GetDescription()","scope":"ErgoShop.POCO.WallOpening","comments":{"summary":"Get a textual description","returns":"A string containing the data"}},{"signature":"ErgoShop.POCO.WallIntersection","childcount":3,"type":"Class","name":"WallIntersection","token":"public class WallIntersection ","scope":"ErgoShop.POCO"},{"signature":"ErgoShop.POCO.WallIntersection.w1","childcount":0,"type":"Field","name":"w1","token":"public Wall w1 ","scope":"ErgoShop.POCO.WallIntersection"},{"signature":"ErgoShop.POCO.WallIntersection.w2","childcount":0,"type":"Field","name":"w2","token":"public Wall w2 ","scope":"ErgoShop.POCO.WallIntersection"},{"signature":"ErgoShop.POCO.WallIntersection.intersectionPosition","childcount":0,"type":"Field","name":"intersectionPosition","token":"public Vector3 intersectionPosition ","scope":"ErgoShop.POCO.WallIntersection"},{"signature":"ErgoShop.UI","childcount":37,"type":"Namespace","name":"ErgoShop.UI","token":"namespace ErgoShop.UI","scope":""},{"signature":"ErgoShop.UI.ArrowsScript","childcount":4,"type":"Class","name":"ArrowsScript","token":"public class ArrowsScript : MonoBehaviour ","scope":"ErgoShop.UI"},{"signature":"ErgoShop.UI.ArrowsScript.m_arrowOffset","childcount":0,"type":"Field","name":"m_arrowOffset","token":"protected float m_arrowOffset ","scope":"ErgoShop.UI.ArrowsScript"},{"signature":"ErgoShop.UI.ArrowsScript.m_decal","childcount":0,"type":"Field","name":"m_decal","token":"protected Vector3 m_decal ","scope":"ErgoShop.UI.ArrowsScript"},{"signature":"ErgoShop.UI.ArrowsScript.currentArrow","childcount":0,"type":"Field","name":"currentArrow","token":"protected GameObject currentArrow ","scope":"ErgoShop.UI.ArrowsScript"},{"signature":"ErgoShop.UI.ArrowsScript.Start()","childcount":0,"type":"Method","name":"Start","token":"protected void Start()","scope":"ErgoShop.UI.ArrowsScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript","childcount":22,"type":"Class","name":"CharacterPropertiesScript","token":"public class CharacterPropertiesScript : PropertiesBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI Properties for selected element"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.characterPropertiesPanel","childcount":0,"type":"Field","name":"characterPropertiesPanel","token":"public GameObject characterPropertiesPanel ","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.characterRotationSlider","childcount":0,"type":"Field","name":"characterRotationSlider","token":"public Slider characterRotationSlider ","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.moveToggle","childcount":0,"type":"Field","name":"moveToggle","token":"public Toggle moveToggle ","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.typeDD","childcount":0,"type":"Field","name":"typeDD","token":"public Dropdown typeDD ","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.spreadArmsToggle","childcount":0,"type":"Field","name":"spreadArmsToggle","token":"public Toggle spreadArmsToggle ","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.needsUpdate","childcount":0,"type":"Field","name":"needsUpdate","token":"private bool needsUpdate ","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static CharacterPropertiesScript Instance { get; set; }","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.UpdateCharacterProperties()","childcount":0,"type":"Method","name":"UpdateCharacterProperties","token":"public void UpdateCharacterProperties()","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.CheckPropertiesBindings(List<CharacterElement>)","childcount":0,"type":"Method","name":"CheckPropertiesBindings","token":"private bool CheckPropertiesBindings(List<CharacterElement> chs)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"chs":"List<CharacterElement>"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.Hide()","childcount":0,"type":"Method","name":"Hide","token":"public override void Hide()","scope":"ErgoShop.UI.CharacterPropertiesScript"},{"signature":"ErgoShop.UI.CharacterPropertiesScript.SetCharacterX(string)","childcount":0,"type":"Method","name":"SetCharacterX","token":"public void SetCharacterX(string x)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"x":"string"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.SetCharacterY(string)","childcount":0,"type":"Method","name":"SetCharacterY","token":"public void SetCharacterY(string y)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"y":"string"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.SetCharacterZ(string)","childcount":0,"type":"Method","name":"SetCharacterZ","token":"public void SetCharacterZ(string z)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"z":"string"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.AddRotationToCharacter(float)","childcount":0,"type":"Method","name":"AddRotationToCharacter","token":"public void AddRotationToCharacter(float add)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"add":"float"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.SetCharacterRotationSlider(float)","childcount":0,"type":"Method","name":"SetCharacterRotationSlider","token":"public void SetCharacterRotationSlider(float rotation)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"rotation":"float"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.SetCharacterRotation(float)","childcount":0,"type":"Method","name":"SetCharacterRotation","token":"public void SetCharacterRotation(float rotation)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"rotation":"float"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.SetCharacterRotation(string)","childcount":0,"type":"Method","name":"SetCharacterRotation","token":"public void SetCharacterRotation(string r)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"r":"string"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.SetSpreadArms(bool)","childcount":0,"type":"Method","name":"SetSpreadArms","token":"public void SetSpreadArms(bool spread)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"spread":"bool"}},{"signature":"ErgoShop.UI.CharacterPropertiesScript.SetCharacterType(int)","childcount":0,"type":"Method","name":"SetCharacterType","token":"public void SetCharacterType(int v)","scope":"ErgoShop.UI.CharacterPropertiesScript","params":{"v":"int"}},{"signature":"ErgoShop.UI.ConfirmationPopinScript","childcount":5,"type":"Class","name":"ConfirmationPopinScript","token":"public class ConfirmationPopinScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Confirmation popin logic when save/load project"}},{"signature":"ErgoShop.UI.ConfirmationPopinScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.ConfirmationPopinScript"},{"signature":"ErgoShop.UI.ConfirmationPopinScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.ConfirmationPopinScript"},{"signature":"ErgoShop.UI.ConfirmationPopinScript.QuitAndSave()","childcount":0,"type":"Method","name":"QuitAndSave","token":"public void QuitAndSave()","scope":"ErgoShop.UI.ConfirmationPopinScript"},{"signature":"ErgoShop.UI.ConfirmationPopinScript.QuitWithoutSave()","childcount":0,"type":"Method","name":"QuitWithoutSave","token":"public void QuitWithoutSave()","scope":"ErgoShop.UI.ConfirmationPopinScript"},{"signature":"ErgoShop.UI.ConfirmationPopinScript.CancelQuitting()","childcount":0,"type":"Method","name":"CancelQuitting","token":"public void CancelQuitting()","scope":"ErgoShop.UI.ConfirmationPopinScript"},{"signature":"ErgoShop.UI.CotationsScript","childcount":19,"type":"Class","name":"CotationsScript","token":"public class CotationsScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Display arrows around the size in centimeters we want to display\r\n     The length is computed between start and end point.\r\n     It can be to measure an object size, or a length"}},{"signature":"ErgoShop.UI.CotationsScript.cotationTM","childcount":0,"type":"Field","name":"cotationTM","token":"public TextMeshPro cotationTM ","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.cotationField","childcount":0,"type":"Field","name":"cotationField","token":"public InputField cotationField ","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.textOffset","childcount":0,"type":"Field","name":"textOffset","token":"public Vector3 textOffset ","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.start","childcount":0,"type":"Field","name":"start","token":"public Vector3 start ","scope":"ErgoShop.UI.CotationsScript","comments":{"summary":"Startint point for the measure"}},{"signature":"ErgoShop.UI.CotationsScript.end","childcount":0,"type":"Field","name":"end","token":"public Vector3 end ","scope":"ErgoShop.UI.CotationsScript","comments":{"summary":"Ending point for the measure"}},{"signature":"ErgoShop.UI.CotationsScript.decalTextOffset","childcount":0,"type":"Field","name":"decalTextOffset","token":"public float decalTextOffset ","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.myElement","childcount":0,"type":"Field","name":"myElement","token":"public Element myElement ","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.isMeasure","childcount":0,"type":"Field","name":"isMeasure","token":"public bool isMeasure ","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.IsExterior","childcount":0,"type":"Property","name":"IsExterior","token":"public bool IsExterior { get; set; }","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.is3D","childcount":0,"type":"Field","name":"is3D","token":"public bool is3D ","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.Length","childcount":0,"type":"Property","name":"Length","token":"public float Length { get; }","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.Center","childcount":0,"type":"Property","name":"Center","token":"public Vector3 Center { get; }","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.Dir","childcount":0,"type":"Property","name":"Dir","token":"public Vector3 Dir { get; }","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.Perp","childcount":0,"type":"Property","name":"Perp","token":"public Vector3 Perp { get; set; }","scope":"ErgoShop.UI.CotationsScript"},{"signature":"ErgoShop.UI.CotationsScript.SetPerp(Wall)","childcount":0,"type":"Method","name":"SetPerp","token":"public void SetPerp(Wall w)","scope":"ErgoShop.UI.CotationsScript","params":{"w":"Wall"}},{"signature":"ErgoShop.UI.CotationsScript.SetPerp(Wall, Vector3)","childcount":0,"type":"Method","name":"SetPerp","token":"public void SetPerp(Wall w, Vector3 cent)","scope":"ErgoShop.UI.CotationsScript","params":{"w":"Wall","cent":"Vector3"}},{"signature":"ErgoShop.UI.CotationsScript.Sort(Vector3)","childcount":0,"type":"Method","name":"Sort","token":"public void Sort(Vector3 wallDir)","scope":"ErgoShop.UI.CotationsScript","comments":{"summary":"Sort start and end according to wall P1 and P2"},"params":{"wallDir":"Vector3"}},{"signature":"ErgoShop.UI.CurrentCotation3DScript","childcount":6,"type":"Class","name":"CurrentCotation3DScript","token":"public class CurrentCotation3DScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Handle 4 cotations around an element in 3D to compute north west east and south lengths between element and next obstacles/walls"}},{"signature":"ErgoShop.UI.CurrentCotation3DScript.m_element","childcount":0,"type":"Field","name":"m_element","token":"private GameObject m_element ","scope":"ErgoShop.UI.CurrentCotation3DScript"},{"signature":"ErgoShop.UI.CurrentCotation3DScript.m_wall","childcount":0,"type":"Field","name":"m_wall","token":"private Wall m_wall ","scope":"ErgoShop.UI.CurrentCotation3DScript"},{"signature":"ErgoShop.UI.CurrentCotation3DScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.CurrentCotation3DScript"},{"signature":"ErgoShop.UI.CurrentCotation3DScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.CurrentCotation3DScript"},{"signature":"ErgoShop.UI.CurrentCotation3DScript.GetPointFromRayFromCot3D(CotationsScript, Vector3, GameObject)","childcount":0,"type":"Method","name":"GetPointFromRayFromCot3D","token":"private Vector3 GetPointFromRayFromCot3D(CotationsScript cot, Vector3 dir, GameObject avoid)","scope":"ErgoShop.UI.CurrentCotation3DScript","params":{"cot":"CotationsScript","dir":"Vector3","avoid":"GameObject"}},{"signature":"ErgoShop.UI.CurrentCotation3DScript.GetPointFromRay3D(Vector3, Vector3, GameObject)","childcount":0,"type":"Method","name":"GetPointFromRay3D","token":"private Vector3 GetPointFromRay3D(Vector3 origin, Vector3 dir, GameObject avoid)","scope":"ErgoShop.UI.CurrentCotation3DScript","params":{"origin":"Vector3","dir":"Vector3","avoid":"GameObject"}},{"signature":"ErgoShop.UI.CurrentCotationsScript","childcount":5,"type":"Class","name":"CurrentCotationsScript","token":"public class CurrentCotationsScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Handle 4 cotations around an element in 2D to compute north west east and south lengths between element and next obstacles/walls"}},{"signature":"ErgoShop.UI.CurrentCotationsScript.m_element","childcount":0,"type":"Field","name":"m_element","token":"private GameObject m_element ","scope":"ErgoShop.UI.CurrentCotationsScript"},{"signature":"ErgoShop.UI.CurrentCotationsScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.CurrentCotationsScript"},{"signature":"ErgoShop.UI.CurrentCotationsScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.CurrentCotationsScript"},{"signature":"ErgoShop.UI.CurrentCotationsScript.GetPointFromRayFromCot(CotationsScript, Vector3, GameObject)","childcount":0,"type":"Method","name":"GetPointFromRayFromCot","token":"private Vector3 GetPointFromRayFromCot(CotationsScript cot, Vector3 dir, GameObject avoid)","scope":"ErgoShop.UI.CurrentCotationsScript","params":{"cot":"CotationsScript","dir":"Vector3","avoid":"GameObject"}},{"signature":"ErgoShop.UI.CurrentCotationsScript.GetPointFromRay(Vector3, Vector2, GameObject)","childcount":0,"type":"Method","name":"GetPointFromRay","token":"private Vector3 GetPointFromRay(Vector3 origin, Vector2 dir, GameObject avoid)","scope":"ErgoShop.UI.CurrentCotationsScript","params":{"origin":"Vector3","dir":"Vector2","avoid":"GameObject"}},{"signature":"ErgoShop.UI.CustomConfPopinScript","childcount":6,"type":"Class","name":"CustomConfPopinScript","token":"public class CustomConfPopinScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Can be generic confirmation popin to show a choice between yes and no to an user"}},{"signature":"ErgoShop.UI.CustomConfPopinScript.MadeChoice","childcount":0,"type":"Field","name":"MadeChoice","token":"public bool MadeChoice ","scope":"ErgoShop.UI.CustomConfPopinScript"},{"signature":"ErgoShop.UI.CustomConfPopinScript.IsYes","childcount":0,"type":"Field","name":"IsYes","token":"public bool IsYes ","scope":"ErgoShop.UI.CustomConfPopinScript"},{"signature":"ErgoShop.UI.CustomConfPopinScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static CustomConfPopinScript Instance { get; set; }","scope":"ErgoShop.UI.CustomConfPopinScript"},{"signature":"ErgoShop.UI.CustomConfPopinScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.CustomConfPopinScript"},{"signature":"ErgoShop.UI.CustomConfPopinScript.SayYes()","childcount":0,"type":"Method","name":"SayYes","token":"public void SayYes()","scope":"ErgoShop.UI.CustomConfPopinScript"},{"signature":"ErgoShop.UI.CustomConfPopinScript.SayNo()","childcount":0,"type":"Method","name":"SayNo","token":"public void SayNo()","scope":"ErgoShop.UI.CustomConfPopinScript"},{"signature":"ErgoShop.UI.CustomNamePopinScript","childcount":5,"type":"Class","name":"CustomNamePopinScript","token":"public class CustomNamePopinScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Ask name for an imported model obj"}},{"signature":"ErgoShop.UI.CustomNamePopinScript.NameEntered","childcount":0,"type":"Field","name":"NameEntered","token":"public bool NameEntered ","scope":"ErgoShop.UI.CustomNamePopinScript"},{"signature":"ErgoShop.UI.CustomNamePopinScript.Name","childcount":0,"type":"Field","name":"Name","token":"public string Name ","scope":"ErgoShop.UI.CustomNamePopinScript"},{"signature":"ErgoShop.UI.CustomNamePopinScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static CustomNamePopinScript Instance { get; set; }","scope":"ErgoShop.UI.CustomNamePopinScript"},{"signature":"ErgoShop.UI.CustomNamePopinScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.CustomNamePopinScript"},{"signature":"ErgoShop.UI.CustomNamePopinScript.EnterName(string)","childcount":0,"type":"Method","name":"EnterName","token":"public void EnterName(string name)","scope":"ErgoShop.UI.CustomNamePopinScript","params":{"name":"string"}},{"signature":"ErgoShop.UI.FloorPropertiesScript","childcount":10,"type":"Class","name":"FloorPropertiesScript","token":"public class FloorPropertiesScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI to create and change floors"}},{"signature":"ErgoShop.UI.FloorPropertiesScript.currentFloorDD","childcount":0,"type":"Field","name":"currentFloorDD","token":"public Dropdown currentFloorDD ","scope":"ErgoShop.UI.FloorPropertiesScript"},{"signature":"ErgoShop.UI.FloorPropertiesScript.floorToCopyDD","childcount":0,"type":"Field","name":"floorToCopyDD","token":"public Dropdown floorToCopyDD ","scope":"ErgoShop.UI.FloorPropertiesScript"},{"signature":"ErgoShop.UI.FloorPropertiesScript.copyToggle","childcount":0,"type":"Field","name":"copyToggle","token":"public Toggle copyToggle ","scope":"ErgoShop.UI.FloorPropertiesScript"},{"signature":"ErgoShop.UI.FloorPropertiesScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static FloorPropertiesScript Instance { get; set; }","scope":"ErgoShop.UI.FloorPropertiesScript"},{"signature":"ErgoShop.UI.FloorPropertiesScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.FloorPropertiesScript"},{"signature":"ErgoShop.UI.FloorPropertiesScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.FloorPropertiesScript"},{"signature":"ErgoShop.UI.FloorPropertiesScript.AddFloorToDD(string)","childcount":0,"type":"Method","name":"AddFloorToDD","token":"public void AddFloorToDD(string name)","scope":"ErgoShop.UI.FloorPropertiesScript","comments":{"summary":"update dropdown ui"},"params":{"name":"string"}},{"signature":"ErgoShop.UI.FloorPropertiesScript.SetCurrentFloor(int)","childcount":0,"type":"Method","name":"SetCurrentFloor","token":"public void SetCurrentFloor(int v)","scope":"ErgoShop.UI.FloorPropertiesScript","comments":{"summary":"Load a floor according to selected one in dropdown"},"params":{"v":"int"}},{"signature":"ErgoShop.UI.FloorPropertiesScript.LoadFloorsFromProject()","childcount":0,"type":"Method","name":"LoadFloorsFromProject","token":"public void LoadFloorsFromProject()","scope":"ErgoShop.UI.FloorPropertiesScript","comments":{"summary":"Get floors in project and update dropdowns"}},{"signature":"ErgoShop.UI.FloorPropertiesScript.CreateFloor()","childcount":0,"type":"Method","name":"CreateFloor","token":"public void CreateFloor()","scope":"ErgoShop.UI.FloorPropertiesScript","comments":{"summary":"Create a new floor with parameters"}},{"signature":"ErgoShop.UI.FurnitureListContentScript","childcount":4,"type":"Class","name":"FurnitureListContentScript","token":"public class FurnitureListContentScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Filter furnitures by type in the Add Furniture window.\r\n     Seeks gameobject names starting with two underscores\r\n     Those are the categories (assise, cuisine...)\r\n     This script sets those categories to be toggling and showing / hiding furnitures in them"}},{"signature":"ErgoShop.UI.FurnitureListContentScript.hasBeenEnabled","childcount":0,"type":"Field","name":"hasBeenEnabled","token":"private bool hasBeenEnabled ","scope":"ErgoShop.UI.FurnitureListContentScript"},{"signature":"ErgoShop.UI.FurnitureListContentScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.FurnitureListContentScript"},{"signature":"ErgoShop.UI.FurnitureListContentScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.FurnitureListContentScript"},{"signature":"ErgoShop.UI.FurnitureListContentScript.OnEnable()","childcount":0,"type":"Method","name":"OnEnable","token":"private void OnEnable()","scope":"ErgoShop.UI.FurnitureListContentScript"},{"signature":"ErgoShop.UI.NewProjectConfirmationPopin","childcount":7,"type":"Class","name":"NewProjectConfirmationPopin","token":"public class NewProjectConfirmationPopin : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Confirmation popin to start a new project (reload software)"}},{"signature":"ErgoShop.UI.NewProjectConfirmationPopin.goNew","childcount":0,"type":"Field","name":"goNew","token":"public bool goNew ","scope":"ErgoShop.UI.NewProjectConfirmationPopin"},{"signature":"ErgoShop.UI.NewProjectConfirmationPopin.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.NewProjectConfirmationPopin"},{"signature":"ErgoShop.UI.NewProjectConfirmationPopin.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.NewProjectConfirmationPopin"},{"signature":"ErgoShop.UI.NewProjectConfirmationPopin.Proceed()","childcount":0,"type":"Method","name":"Proceed","token":"private void Proceed()","scope":"ErgoShop.UI.NewProjectConfirmationPopin"},{"signature":"ErgoShop.UI.NewProjectConfirmationPopin.SaveAndChange()","childcount":0,"type":"Method","name":"SaveAndChange","token":"public void SaveAndChange()","scope":"ErgoShop.UI.NewProjectConfirmationPopin"},{"signature":"ErgoShop.UI.NewProjectConfirmationPopin.ChangeWithoutSave()","childcount":0,"type":"Method","name":"ChangeWithoutSave","token":"public void ChangeWithoutSave()","scope":"ErgoShop.UI.NewProjectConfirmationPopin"},{"signature":"ErgoShop.UI.NewProjectConfirmationPopin.CancelAction()","childcount":0,"type":"Method","name":"CancelAction","token":"public void CancelAction()","scope":"ErgoShop.UI.NewProjectConfirmationPopin"},{"signature":"ErgoShop.UI.ProjectFormScript","childcount":12,"type":"Class","name":"ProjectFormScript","token":"public class ProjectFormScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI for project properties like the person name, version of project etc..."}},{"signature":"ErgoShop.UI.ProjectFormScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static ProjectFormScript Instance { get; set; }","scope":"ErgoShop.UI.ProjectFormScript"},{"signature":"ErgoShop.UI.ProjectFormScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.ProjectFormScript"},{"signature":"ErgoShop.UI.ProjectFormScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.ProjectFormScript"},{"signature":"ErgoShop.UI.ProjectFormScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.ProjectFormScript"},{"signature":"ErgoShop.UI.ProjectFormScript.LoadProject()","childcount":0,"type":"Method","name":"LoadProject","token":"public void LoadProject()","scope":"ErgoShop.UI.ProjectFormScript","comments":{"summary":"Load properties from project data"}},{"signature":"ErgoShop.UI.ProjectFormScript.SetProjectName(string)","childcount":0,"type":"Method","name":"SetProjectName","token":"public void SetProjectName(string pn)","scope":"ErgoShop.UI.ProjectFormScript","params":{"pn":"string"}},{"signature":"ErgoShop.UI.ProjectFormScript.SetHomeType(string)","childcount":0,"type":"Method","name":"SetHomeType","token":"public void SetHomeType(string ht)","scope":"ErgoShop.UI.ProjectFormScript","params":{"ht":"string"}},{"signature":"ErgoShop.UI.ProjectFormScript.SetFirstName(string)","childcount":0,"type":"Method","name":"SetFirstName","token":"public void SetFirstName(string firstname)","scope":"ErgoShop.UI.ProjectFormScript","params":{"firstname":"string"}},{"signature":"ErgoShop.UI.ProjectFormScript.SetLastName(string)","childcount":0,"type":"Method","name":"SetLastName","token":"public void SetLastName(string lastname)","scope":"ErgoShop.UI.ProjectFormScript","params":{"lastname":"string"}},{"signature":"ErgoShop.UI.ProjectFormScript.SetDate(string)","childcount":0,"type":"Method","name":"SetDate","token":"public void SetDate(string date)","scope":"ErgoShop.UI.ProjectFormScript","params":{"date":"string"}},{"signature":"ErgoShop.UI.ProjectFormScript.SetVersion(string)","childcount":0,"type":"Method","name":"SetVersion","token":"public void SetVersion(string version)","scope":"ErgoShop.UI.ProjectFormScript","params":{"version":"string"}},{"signature":"ErgoShop.UI.ProjectFormScript.SetComment(string)","childcount":0,"type":"Method","name":"SetComment","token":"public void SetComment(string com)","scope":"ErgoShop.UI.ProjectFormScript","params":{"com":"string"}},{"signature":"ErgoShop.UI.RectRoomFormScript","childcount":6,"type":"Class","name":"RectRoomFormScript","token":"public class RectRoomFormScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Form to create a rectangular room by setting height and width"}},{"signature":"ErgoShop.UI.RectRoomFormScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static RectRoomFormScript Instance { get; set; }","scope":"ErgoShop.UI.RectRoomFormScript"},{"signature":"ErgoShop.UI.RectRoomFormScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.RectRoomFormScript"},{"signature":"ErgoShop.UI.RectRoomFormScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.RectRoomFormScript"},{"signature":"ErgoShop.UI.RectRoomFormScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.RectRoomFormScript"},{"signature":"ErgoShop.UI.RectRoomFormScript.GetHeight()","childcount":0,"type":"Method","name":"GetHeight","token":"public float GetHeight()","scope":"ErgoShop.UI.RectRoomFormScript"},{"signature":"ErgoShop.UI.RectRoomFormScript.GetWidth()","childcount":0,"type":"Method","name":"GetWidth","token":"public float GetWidth()","scope":"ErgoShop.UI.RectRoomFormScript"},{"signature":"ErgoShop.UI.RoundedStairsScript","childcount":5,"type":"Class","name":"RoundedStairsScript","token":"public class RoundedStairsScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Script to generate 2D sprites to match the stairs appearence in 3D"}},{"signature":"ErgoShop.UI.RoundedStairsScript.stairTilePrefab","childcount":0,"type":"Field","name":"stairTilePrefab","token":"public GameObject stairTilePrefab ","scope":"ErgoShop.UI.RoundedStairsScript"},{"signature":"ErgoShop.UI.RoundedStairsScript.associatedStairs","childcount":0,"type":"Field","name":"associatedStairs","token":"public Stairs associatedStairs ","scope":"ErgoShop.UI.RoundedStairsScript"},{"signature":"ErgoShop.UI.RoundedStairsScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.RoundedStairsScript"},{"signature":"ErgoShop.UI.RoundedStairsScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.RoundedStairsScript"},{"signature":"ErgoShop.UI.RoundedStairsScript.Draw()","childcount":0,"type":"Method","name":"Draw","token":"public void Draw()","scope":"ErgoShop.UI.RoundedStairsScript","comments":{"summary":"Draw !"}},{"signature":"ErgoShop.UI.SettingsPopinScript","childcount":10,"type":"Class","name":"SettingsPopinScript","token":"public class SettingsPopinScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI For software settings"}},{"signature":"ErgoShop.UI.SettingsPopinScript.cameraSlider","childcount":0,"type":"Field","name":"cameraSlider","token":"public Slider cameraSlider ","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SettingsPopinScript.tagWalltagAllDD","childcount":0,"type":"Field","name":"tagWalltagAllDD","token":"public Dropdown tagWalltagAllDD ","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SettingsPopinScript.showGridToggle","childcount":0,"type":"Field","name":"showGridToggle","token":"public Toggle showGridToggle ","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SettingsPopinScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static SettingsPopinScript Instance { get; set; }","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SettingsPopinScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SettingsPopinScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SettingsPopinScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SettingsPopinScript.UpdateUI()","childcount":0,"type":"Method","name":"UpdateUI","token":"public void UpdateUI()","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SettingsPopinScript.SaveParameters()","childcount":0,"type":"Method","name":"SaveParameters","token":"public void SaveParameters()","scope":"ErgoShop.UI.SettingsPopinScript","comments":{"summary":"Get all data in UI and store it to json"}},{"signature":"ErgoShop.UI.SettingsPopinScript.OnEnable()","childcount":0,"type":"Method","name":"OnEnable","token":"private void OnEnable()","scope":"ErgoShop.UI.SettingsPopinScript"},{"signature":"ErgoShop.UI.SliderToInput","childcount":5,"type":"Class","name":"SliderToInput","token":"public class SliderToInput : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Update an input field according to slider value"}},{"signature":"ErgoShop.UI.SliderToInput.slider","childcount":0,"type":"Field","name":"slider","token":"public Slider slider ","scope":"ErgoShop.UI.SliderToInput"},{"signature":"ErgoShop.UI.SliderToInput.input","childcount":0,"type":"Field","name":"input","token":"public InputField input ","scope":"ErgoShop.UI.SliderToInput"},{"signature":"ErgoShop.UI.SliderToInput.multix","childcount":0,"type":"Field","name":"multix","token":"public float multix ","scope":"ErgoShop.UI.SliderToInput"},{"signature":"ErgoShop.UI.SliderToInput.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.SliderToInput"},{"signature":"ErgoShop.UI.SliderToInput.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.SliderToInput"},{"signature":"ErgoShop.UI.TabSelectableScript","childcount":2,"type":"Class","name":"TabSelectableScript","token":"public class TabSelectableScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Script to catch any Tabulation to move between UI Elements"}},{"signature":"ErgoShop.UI.TabSelectableScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.TabSelectableScript"},{"signature":"ErgoShop.UI.TabSelectableScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.TabSelectableScript"},{"signature":"ErgoShop.UI.TextZoneScript","childcount":7,"type":"Class","name":"TextZoneScript","token":"public class TextZoneScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Script to handle the behaviour of a text zone\r\n     The 3D version always faces the camera\r\n     Also updates collider"}},{"signature":"ErgoShop.UI.TextZoneScript.bg","childcount":0,"type":"Field","name":"bg","token":"public SpriteRenderer bg ","scope":"ErgoShop.UI.TextZoneScript"},{"signature":"ErgoShop.UI.TextZoneScript.tm","childcount":0,"type":"Field","name":"tm","token":"public TextMesh tm ","scope":"ErgoShop.UI.TextZoneScript"},{"signature":"ErgoShop.UI.TextZoneScript.textSize","childcount":0,"type":"Field","name":"textSize","token":"public float textSize ","scope":"ErgoShop.UI.TextZoneScript"},{"signature":"ErgoShop.UI.TextZoneScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.TextZoneScript"},{"signature":"ErgoShop.UI.TextZoneScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.TextZoneScript"},{"signature":"ErgoShop.UI.TextZoneScript.SetSize(Vector2, Vector2)","childcount":0,"type":"Method","name":"SetSize","token":"public Vector2 SetSize(Vector2 a, Vector2 b)","scope":"ErgoShop.UI.TextZoneScript","params":{"a":"Vector2","b":"Vector2"}},{"signature":"ErgoShop.UI.TextZoneScript.SetSize(Vector2)","childcount":0,"type":"Method","name":"SetSize","token":"public void SetSize(Vector2 a)","scope":"ErgoShop.UI.TextZoneScript","params":{"a":"Vector2"}},{"signature":"ErgoShop.UI.ToggleResetScript","childcount":3,"type":"Class","name":"ToggleResetScript","token":"public class ToggleResetScript : MonoBehaviour ","scope":"ErgoShop.UI"},{"signature":"ErgoShop.UI.ToggleResetScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.ToggleResetScript"},{"signature":"ErgoShop.UI.ToggleResetScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.ToggleResetScript"},{"signature":"ErgoShop.UI.ToggleResetScript.OnEnable()","childcount":0,"type":"Method","name":"OnEnable","token":"private void OnEnable()","scope":"ErgoShop.UI.ToggleResetScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript","childcount":13,"type":"Class","name":"WallButtonsActiveScript","token":"public class WallButtonsActiveScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Change color when creating wall/room"}},{"signature":"ErgoShop.UI.WallButtonsActiveScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"void Awake()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.OnEnable()","childcount":0,"type":"Method","name":"OnEnable","token":"private void OnEnable()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.ActiveWall()","childcount":0,"type":"Method","name":"ActiveWall","token":"public void ActiveWall()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.DesactiveWall()","childcount":0,"type":"Method","name":"DesactiveWall","token":"public void DesactiveWall()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.ActivePolyWall()","childcount":0,"type":"Method","name":"ActivePolyWall","token":"public void ActivePolyWall()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.DesactivePolyWall()","childcount":0,"type":"Method","name":"DesactivePolyWall","token":"public void DesactivePolyWall()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.ActiveRoom()","childcount":0,"type":"Method","name":"ActiveRoom","token":"public void ActiveRoom()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.DesactiveRoom()","childcount":0,"type":"Method","name":"DesactiveRoom","token":"public void DesactiveRoom()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.ActiveDoor()","childcount":0,"type":"Method","name":"ActiveDoor","token":"public void ActiveDoor()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.DesactiveDoor()","childcount":0,"type":"Method","name":"DesactiveDoor","token":"public void DesactiveDoor()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.ActiveWindow()","childcount":0,"type":"Method","name":"ActiveWindow","token":"public void ActiveWindow()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.WallButtonsActiveScript.DesactiveWindow()","childcount":0,"type":"Method","name":"DesactiveWindow","token":"public void DesactiveWindow()","scope":"ErgoShop.UI.WallButtonsActiveScript"},{"signature":"ErgoShop.UI.AngleScript","childcount":10,"type":"Class","name":"AngleScript","token":"public class AngleScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Compute and show angle between two walls"}},{"signature":"ErgoShop.UI.AngleScript.m_segments","childcount":0,"type":"Field","name":"m_segments","token":"private int m_segments ","scope":"ErgoShop.UI.AngleScript"},{"signature":"ErgoShop.UI.AngleScript.LineRend","childcount":0,"type":"Field","name":"LineRend","token":"public LineRenderer LineRend ","scope":"ErgoShop.UI.AngleScript"},{"signature":"ErgoShop.UI.AngleScript.AngleTM","childcount":0,"type":"Field","name":"AngleTM","token":"public TextMeshPro AngleTM ","scope":"ErgoShop.UI.AngleScript"},{"signature":"ErgoShop.UI.AngleScript.Radius","childcount":0,"type":"Property","name":"Radius","token":"public float Radius { get; set; }","scope":"ErgoShop.UI.AngleScript"},{"signature":"ErgoShop.UI.AngleScript.m_angle","childcount":0,"type":"Field","name":"m_angle","token":"private float m_angle ","scope":"ErgoShop.UI.AngleScript"},{"signature":"ErgoShop.UI.AngleScript.m_directionw1w2","childcount":0,"type":"Field","name":"m_directionw1w2","token":"private float m_directionw1w2 ","scope":"ErgoShop.UI.AngleScript"},{"signature":"ErgoShop.UI.AngleScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.AngleScript"},{"signature":"ErgoShop.UI.AngleScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.AngleScript"},{"signature":"ErgoShop.UI.AngleScript.SetAngle(float)","childcount":0,"type":"Method","name":"SetAngle","token":"public void SetAngle(float angle)","scope":"ErgoShop.UI.AngleScript","comments":{"summary":"METHOD TO UPDATE WALL POSITIONS ACCORDING TO WANTED ANGLE\r\n         NOT USED CURRENTLY, WAS CANCELLED"},"params":{"angle":"float"}},{"signature":"ErgoShop.UI.AngleScript.DrawAngle()","childcount":0,"type":"Method","name":"DrawAngle","token":"public void DrawAngle()","scope":"ErgoShop.UI.AngleScript","comments":{"summary":"Draw the computed angle"}},{"signature":"ErgoShop.UI.WallOpeningAngleScript","childcount":10,"type":"Class","name":"WallOpeningAngleScript","token":"public class WallOpeningAngleScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Draw the arc representing the door or window opening"}},{"signature":"ErgoShop.UI.WallOpeningAngleScript.LineRend","childcount":0,"type":"Field","name":"LineRend","token":"public LineRenderer LineRend ","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.m_radius","childcount":0,"type":"Field","name":"m_radius","token":"private float m_radius ","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.m_startAngle","childcount":0,"type":"Field","name":"m_startAngle","token":"private float m_startAngle ","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.m_angle","childcount":0,"type":"Field","name":"m_angle","token":"private float m_angle ","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.m_segments","childcount":0,"type":"Field","name":"m_segments","token":"private float m_segments ","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.wallOpening","childcount":0,"type":"Field","name":"wallOpening","token":"public WallOpening wallOpening ","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.is3D","childcount":0,"type":"Field","name":"is3D","token":"public bool is3D ","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.WallOpeningAngleScript"},{"signature":"ErgoShop.UI.WallOpeningAngleScript.DrawAngle()","childcount":0,"type":"Method","name":"DrawAngle","token":"public void DrawAngle()","scope":"ErgoShop.UI.WallOpeningAngleScript","comments":{"summary":"Draw the Arc"}},{"signature":"ErgoShop.UI.FurniturePropScript","childcount":20,"type":"Class","name":"FurniturePropScript","token":"public class FurniturePropScript : PropertiesBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI Properties for selected element"}},{"signature":"ErgoShop.UI.FurniturePropScript.furniturePropertiesForm","childcount":0,"type":"Field","name":"furniturePropertiesForm","token":"public GameObject furniturePropertiesForm ","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.furnitureNameInput","childcount":0,"type":"Field","name":"furnitureNameInput","token":"public InputField furnitureNameInput ","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.furnitureRotationSlider","childcount":0,"type":"Field","name":"furnitureRotationSlider","token":"public Slider furnitureRotationSlider ","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.moveToggle","childcount":0,"type":"Field","name":"moveToggle","token":"public Toggle moveToggle ","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static FurniturePropScript Instance { get; set; }","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.needsUpdate","childcount":0,"type":"Field","name":"needsUpdate","token":"private bool needsUpdate ","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.UpdateFurnitureProperties()","childcount":0,"type":"Method","name":"UpdateFurnitureProperties","token":"public void UpdateFurnitureProperties()","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.FurniturePropScript.AreFurnituresSame(List<Furniture>)","childcount":0,"type":"Method","name":"AreFurnituresSame","token":"private bool AreFurnituresSame(List<Furniture> furnituresData)","scope":"ErgoShop.UI.FurniturePropScript","params":{"furnituresData":"List<Furniture>"}},{"signature":"ErgoShop.UI.FurniturePropScript.CheckPropertiesBindings(List<Furniture>)","childcount":0,"type":"Method","name":"CheckPropertiesBindings","token":"private bool CheckPropertiesBindings(List<Furniture> furnituresData)","scope":"ErgoShop.UI.FurniturePropScript","params":{"furnituresData":"List<Furniture>"}},{"signature":"ErgoShop.UI.FurniturePropScript.SetFurnitureX(string)","childcount":0,"type":"Method","name":"SetFurnitureX","token":"public void SetFurnitureX(string x)","scope":"ErgoShop.UI.FurniturePropScript","params":{"x":"string"}},{"signature":"ErgoShop.UI.FurniturePropScript.SetFurnitureY(string)","childcount":0,"type":"Method","name":"SetFurnitureY","token":"public void SetFurnitureY(string y)","scope":"ErgoShop.UI.FurniturePropScript","params":{"y":"string"}},{"signature":"ErgoShop.UI.FurniturePropScript.SetFurnitureZ(string)","childcount":0,"type":"Method","name":"SetFurnitureZ","token":"public void SetFurnitureZ(string z)","scope":"ErgoShop.UI.FurniturePropScript","params":{"z":"string"}},{"signature":"ErgoShop.UI.FurniturePropScript.AddRotationToFurniture(float)","childcount":0,"type":"Method","name":"AddRotationToFurniture","token":"public void AddRotationToFurniture(float add)","scope":"ErgoShop.UI.FurniturePropScript","params":{"add":"float"}},{"signature":"ErgoShop.UI.FurniturePropScript.SetFurnitureRotationSlider(float)","childcount":0,"type":"Method","name":"SetFurnitureRotationSlider","token":"public void SetFurnitureRotationSlider(float rotation)","scope":"ErgoShop.UI.FurniturePropScript","params":{"rotation":"float"}},{"signature":"ErgoShop.UI.FurniturePropScript.SetFurnitureRotation(float)","childcount":0,"type":"Method","name":"SetFurnitureRotation","token":"public void SetFurnitureRotation(float rotation)","scope":"ErgoShop.UI.FurniturePropScript","params":{"rotation":"float"}},{"signature":"ErgoShop.UI.FurniturePropScript.SetFurnitureName(string)","childcount":0,"type":"Method","name":"SetFurnitureName","token":"public void SetFurnitureName(string name)","scope":"ErgoShop.UI.FurniturePropScript","params":{"name":"string"}},{"signature":"ErgoShop.UI.FurniturePropScript.SetFurnitureRotation(string)","childcount":0,"type":"Method","name":"SetFurnitureRotation","token":"public void SetFurnitureRotation(string r)","scope":"ErgoShop.UI.FurniturePropScript","params":{"r":"string"}},{"signature":"ErgoShop.UI.FurniturePropScript.Hide()","childcount":0,"type":"Method","name":"Hide","token":"public override void Hide()","scope":"ErgoShop.UI.FurniturePropScript"},{"signature":"ErgoShop.UI.PropertiesBehaviour","childcount":2,"type":"Class","name":"PropertiesBehaviour","token":"public abstract class PropertiesBehaviour : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI Properties\r\n     Currently just a Hide method is common"}},{"signature":"ErgoShop.UI.PropertiesBehaviour.Hide()","childcount":0,"type":"Method","name":"Hide","token":"public abstract void Hide()","scope":"ErgoShop.UI.PropertiesBehaviour"},{"signature":"ErgoShop.UI.PropertiesBehaviour.Update()","childcount":0,"type":"Method","name":"Update","token":"internal void Update()","scope":"ErgoShop.UI.PropertiesBehaviour"},{"signature":"ErgoShop.UI.PropertiesFormManager","childcount":12,"type":"Class","name":"PropertiesFormManager","token":"public class PropertiesFormManager : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI Properties for selected element"}},{"signature":"ErgoShop.UI.PropertiesFormManager.propertiesForm","childcount":0,"type":"Field","name":"propertiesForm","token":"public GameObject propertiesForm ","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.visibilityToggle","childcount":0,"type":"Field","name":"visibilityToggle","token":"public Toggle visibilityToggle ","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.groupsToggle","childcount":0,"type":"Field","name":"groupsToggle","token":"public Toggle groupsToggle ","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.m_hideProps","childcount":0,"type":"Field","name":"m_hideProps","token":"private bool m_hideProps ","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.HideAllBool","childcount":0,"type":"Property","name":"HideAllBool","token":"public bool HideAllBool { get; set; }","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static PropertiesFormManager Instance { get; set; }","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.AllProperties","childcount":0,"type":"Property","name":"AllProperties","token":"public List<PropertiesBehaviour> AllProperties { get; set; }","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.SetProperties(bool)","childcount":0,"type":"Method","name":"SetProperties","token":"public void SetProperties(bool v)","scope":"ErgoShop.UI.PropertiesFormManager","params":{"v":"bool"}},{"signature":"ErgoShop.UI.PropertiesFormManager.CloseProperties()","childcount":0,"type":"Method","name":"CloseProperties","token":"public void CloseProperties()","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.PropertiesFormManager.HideAllProperties()","childcount":0,"type":"Method","name":"HideAllProperties","token":"public void HideAllProperties()","scope":"ErgoShop.UI.PropertiesFormManager"},{"signature":"ErgoShop.UI.RoomPropPanelScript","childcount":16,"type":"Class","name":"RoomPropPanelScript","token":"public class RoomPropPanelScript : PropertiesBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI Properties for selected element"}},{"signature":"ErgoShop.UI.RoomPropPanelScript.roomPropertiesForm","childcount":0,"type":"Field","name":"roomPropertiesForm","token":"public GameObject roomPropertiesForm ","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.roomNameInput","childcount":0,"type":"Field","name":"roomNameInput","token":"public InputField roomNameInput ","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.roomIsRectToggle","childcount":0,"type":"Field","name":"roomIsRectToggle","token":"public Toggle roomIsRectToggle ","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.groundColorPicker","childcount":0,"type":"Field","name":"groundColorPicker","token":"public CUIColorPicker groundColorPicker ","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.groundImageToggle","childcount":0,"type":"Field","name":"groundImageToggle","token":"public Image groundImageToggle ","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.wallsColorPicker","childcount":0,"type":"Field","name":"wallsColorPicker","token":"public CUIColorPicker wallsColorPicker ","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.wallsImageToggle","childcount":0,"type":"Field","name":"wallsImageToggle","token":"public Image wallsImageToggle ","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.m_needsUpdate","childcount":0,"type":"Field","name":"m_needsUpdate","token":"private bool m_needsUpdate ","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static RoomPropPanelScript Instance { get; set; }","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.UpdateRoomProperties()","childcount":0,"type":"Method","name":"UpdateRoomProperties","token":"public void UpdateRoomProperties()","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.CheckPropertiesBindings(Room)","childcount":0,"type":"Method","name":"CheckPropertiesBindings","token":"private bool CheckPropertiesBindings(Room roomData)","scope":"ErgoShop.UI.RoomPropPanelScript","params":{"roomData":"Room"}},{"signature":"ErgoShop.UI.RoomPropPanelScript.ShowWallToggle()","childcount":0,"type":"Method","name":"ShowWallToggle","token":"public void ShowWallToggle()","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.ShowGroundToggle()","childcount":0,"type":"Method","name":"ShowGroundToggle","token":"public void ShowGroundToggle()","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.RoomPropPanelScript.Hide()","childcount":0,"type":"Method","name":"Hide","token":"public override void Hide()","scope":"ErgoShop.UI.RoomPropPanelScript"},{"signature":"ErgoShop.UI.StairsFormScript","childcount":17,"type":"Class","name":"StairsFormScript","token":"public class StairsFormScript : PropertiesBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI Properties for selected element"}},{"signature":"ErgoShop.UI.StairsFormScript.needsUpdate","childcount":0,"type":"Field","name":"needsUpdate","token":"private bool needsUpdate ","scope":"ErgoShop.UI.StairsFormScript"},{"signature":"ErgoShop.UI.StairsFormScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.StairsFormScript"},{"signature":"ErgoShop.UI.StairsFormScript.Show()","childcount":0,"type":"Method","name":"Show","token":"void Show()","scope":"ErgoShop.UI.StairsFormScript"},{"signature":"ErgoShop.UI.StairsFormScript.Hide()","childcount":0,"type":"Method","name":"Hide","token":"public override void Hide()","scope":"ErgoShop.UI.StairsFormScript"},{"signature":"ErgoShop.UI.StairsFormScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.StairsFormScript"},{"signature":"ErgoShop.UI.StairsFormScript.SetCanMove(bool)","childcount":0,"type":"Method","name":"SetCanMove","token":"public void SetCanMove(bool v)","scope":"ErgoShop.UI.StairsFormScript","params":{"v":"bool"}},{"signature":"ErgoShop.UI.StairsFormScript.SetNBSteps(float)","childcount":0,"type":"Method","name":"SetNBSteps","token":"public void SetNBSteps(float nb)","scope":"ErgoShop.UI.StairsFormScript","params":{"nb":"float"}},{"signature":"ErgoShop.UI.StairsFormScript.SetWidth(float)","childcount":0,"type":"Method","name":"SetWidth","token":"public void SetWidth(float width)","scope":"ErgoShop.UI.StairsFormScript","params":{"width":"float"}},{"signature":"ErgoShop.UI.StairsFormScript.SetHeight(float)","childcount":0,"type":"Method","name":"SetHeight","token":"public void SetHeight(float height)","scope":"ErgoShop.UI.StairsFormScript","params":{"height":"float"}},{"signature":"ErgoShop.UI.StairsFormScript.SetDepth(float)","childcount":0,"type":"Method","name":"SetDepth","token":"public void SetDepth(float depth)","scope":"ErgoShop.UI.StairsFormScript","params":{"depth":"float"}},{"signature":"ErgoShop.UI.StairsFormScript.SetAngle(float)","childcount":0,"type":"Method","name":"SetAngle","token":"public void SetAngle(float angle)","scope":"ErgoShop.UI.StairsFormScript","params":{"angle":"float"}},{"signature":"ErgoShop.UI.StairsFormScript.SetInnerRadius(float)","childcount":0,"type":"Method","name":"SetInnerRadius","token":"public void SetInnerRadius(float radius)","scope":"ErgoShop.UI.StairsFormScript","params":{"radius":"float"}},{"signature":"ErgoShop.UI.StairsFormScript.SetToTheLeft(bool)","childcount":0,"type":"Method","name":"SetToTheLeft","token":"public void SetToTheLeft(bool v)","scope":"ErgoShop.UI.StairsFormScript","params":{"v":"bool"}},{"signature":"ErgoShop.UI.StairsFormScript.SetBuildSides(bool)","childcount":0,"type":"Method","name":"SetBuildSides","token":"public void SetBuildSides(bool v)","scope":"ErgoShop.UI.StairsFormScript","params":{"v":"bool"}},{"signature":"ErgoShop.UI.StairsFormScript.SetRotation(float)","childcount":0,"type":"Method","name":"SetRotation","token":"public void SetRotation(float f)","scope":"ErgoShop.UI.StairsFormScript","params":{"f":"float"}},{"signature":"ErgoShop.UI.StairsFormScript.SetRotation(string)","childcount":0,"type":"Method","name":"SetRotation","token":"public void SetRotation(string s)","scope":"ErgoShop.UI.StairsFormScript","params":{"s":"string"}},{"signature":"ErgoShop.UI.StairsFormScript.SetRotationSlider(float)","childcount":0,"type":"Method","name":"SetRotationSlider","token":"public void SetRotationSlider(float f)","scope":"ErgoShop.UI.StairsFormScript","params":{"f":"float"}},{"signature":"ErgoShop.UI.TextZonePropertiesScript","childcount":18,"type":"Class","name":"TextZonePropertiesScript","token":"public class TextZonePropertiesScript : PropertiesBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Text Zone UI for selected zone"}},{"signature":"ErgoShop.UI.TextZonePropertiesScript.textPropertiesPanel","childcount":0,"type":"Field","name":"textPropertiesPanel","token":"public GameObject textPropertiesPanel ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.textField","childcount":0,"type":"Field","name":"textField","token":"public InputField textField ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.fontSizeSlider","childcount":0,"type":"Field","name":"fontSizeSlider","token":"public Slider fontSizeSlider ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.colorPicker","childcount":0,"type":"Field","name":"colorPicker","token":"public CUIColorPicker colorPicker ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.colorPickerBG","childcount":0,"type":"Field","name":"colorPickerBG","token":"public CUIColorPicker colorPickerBG ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.imageToggle","childcount":0,"type":"Field","name":"imageToggle","token":"public Image imageToggle ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.imageToggleBG","childcount":0,"type":"Field","name":"imageToggleBG","token":"public Image imageToggleBG ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.moveToggle","childcount":0,"type":"Field","name":"moveToggle","token":"public Toggle moveToggle ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.needsUpdate","childcount":0,"type":"Field","name":"needsUpdate","token":"private bool needsUpdate ","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static TextZonePropertiesScript Instance { get; set; }","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.UpdateTextZoneProperties()","childcount":0,"type":"Method","name":"UpdateTextZoneProperties","token":"public void UpdateTextZoneProperties()","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.TextZonePropertiesScript.CheckPropertiesBindings(TextZoneElement)","childcount":0,"type":"Method","name":"CheckPropertiesBindings","token":"private bool CheckPropertiesBindings(TextZoneElement tz)","scope":"ErgoShop.UI.TextZonePropertiesScript","params":{"tz":"TextZoneElement"}},{"signature":"ErgoShop.UI.TextZonePropertiesScript.SetText(string)","childcount":0,"type":"Method","name":"SetText","token":"public void SetText(string s)","scope":"ErgoShop.UI.TextZonePropertiesScript","params":{"s":"string"}},{"signature":"ErgoShop.UI.TextZonePropertiesScript.SetFontSize(float)","childcount":0,"type":"Method","name":"SetFontSize","token":"public void SetFontSize(float v)","scope":"ErgoShop.UI.TextZonePropertiesScript","params":{"v":"float"}},{"signature":"ErgoShop.UI.TextZonePropertiesScript.Hide()","childcount":0,"type":"Method","name":"Hide","token":"public override void Hide()","scope":"ErgoShop.UI.TextZonePropertiesScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript","childcount":16,"type":"Class","name":"WallOpeningPropScript","token":"public class WallOpeningPropScript : PropertiesBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI Properties for wall openings"}},{"signature":"ErgoShop.UI.WallOpeningPropScript.woPropertiesForm","childcount":0,"type":"Field","name":"woPropertiesForm","token":"public GameObject woPropertiesForm ","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript.woNameText","childcount":0,"type":"Field","name":"woNameText","token":"public Text woNameText ","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript.woWindowHeightField","childcount":0,"type":"Field","name":"woWindowHeightField","token":"public InputField woWindowHeightField ","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static WallOpeningPropScript Instance { get; set; }","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript.m_needsUpdate","childcount":0,"type":"Field","name":"m_needsUpdate","token":"private bool m_needsUpdate ","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript.UpdateWallOpeningProperties()","childcount":0,"type":"Method","name":"UpdateWallOpeningProperties","token":"public void UpdateWallOpeningProperties()","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallOpeningPropScript.CheckPropertiesBindings(WallOpening)","childcount":0,"type":"Method","name":"CheckPropertiesBindings","token":"private bool CheckPropertiesBindings(WallOpening wo)","scope":"ErgoShop.UI.WallOpeningPropScript","params":{"wo":"WallOpening"}},{"signature":"ErgoShop.UI.WallOpeningPropScript.SetWOX(string)","childcount":0,"type":"Method","name":"SetWOX","token":"public void SetWOX(string x)","scope":"ErgoShop.UI.WallOpeningPropScript","params":{"x":"string"}},{"signature":"ErgoShop.UI.WallOpeningPropScript.SetWOY(string)","childcount":0,"type":"Method","name":"SetWOY","token":"public void SetWOY(string y)","scope":"ErgoShop.UI.WallOpeningPropScript","params":{"y":"string"}},{"signature":"ErgoShop.UI.WallOpeningPropScript.SetIsDouble(bool)","childcount":0,"type":"Method","name":"SetIsDouble","token":"public void SetIsDouble(bool v)","scope":"ErgoShop.UI.WallOpeningPropScript","params":{"v":"bool"}},{"signature":"ErgoShop.UI.WallOpeningPropScript.SetIsPull(bool)","childcount":0,"type":"Method","name":"SetIsPull","token":"public void SetIsPull(bool v)","scope":"ErgoShop.UI.WallOpeningPropScript","params":{"v":"bool"}},{"signature":"ErgoShop.UI.WallOpeningPropScript.SetIsLeft(bool)","childcount":0,"type":"Method","name":"SetIsLeft","token":"public void SetIsLeft(bool v)","scope":"ErgoShop.UI.WallOpeningPropScript","params":{"v":"bool"}},{"signature":"ErgoShop.UI.WallOpeningPropScript.SetWindowHeight(string)","childcount":0,"type":"Method","name":"SetWindowHeight","token":"public void SetWindowHeight(string h)","scope":"ErgoShop.UI.WallOpeningPropScript","params":{"h":"string"}},{"signature":"ErgoShop.UI.WallOpeningPropScript.Hide()","childcount":0,"type":"Method","name":"Hide","token":"public override void Hide()","scope":"ErgoShop.UI.WallOpeningPropScript"},{"signature":"ErgoShop.UI.WallPropPanelScript","childcount":19,"type":"Class","name":"WallPropPanelScript","token":"public class WallPropPanelScript : PropertiesBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"UI Properties for wall and rooms"}},{"signature":"ErgoShop.UI.WallPropPanelScript.wallPropertiesForm","childcount":0,"type":"Field","name":"wallPropertiesForm","token":"public GameObject wallPropertiesForm ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.roomOptionGameObject","childcount":0,"type":"Field","name":"roomOptionGameObject","token":"public GameObject roomOptionGameObject ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.splitWallButton","childcount":0,"type":"Field","name":"splitWallButton","token":"public GameObject splitWallButton ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.wallDimensionsGameObject","childcount":0,"type":"Field","name":"wallDimensionsGameObject","token":"public GameObject wallDimensionsGameObject ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.heightText","childcount":0,"type":"Field","name":"heightText","token":"public Text heightText ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.thicknessField","childcount":0,"type":"Field","name":"thicknessField","token":"public InputField thicknessField ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.lengthField","childcount":0,"type":"Field","name":"lengthField","token":"public InputField lengthField ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.colorPicker","childcount":0,"type":"Field","name":"colorPicker","token":"public CUIColorPicker colorPicker ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.imageToggle","childcount":0,"type":"Field","name":"imageToggle","token":"public Image imageToggle ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.needsUpdate","childcount":0,"type":"Field","name":"needsUpdate","token":"private bool needsUpdate ","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static WallPropPanelScript Instance { get; set; }","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.UpdateWallProperties()","childcount":0,"type":"Method","name":"UpdateWallProperties","token":"public void UpdateWallProperties()","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.SetWallThickness(string)","childcount":0,"type":"Method","name":"SetWallThickness","token":"public void SetWallThickness(string thick)","scope":"ErgoShop.UI.WallPropPanelScript","params":{"thick":"string"}},{"signature":"ErgoShop.UI.WallPropPanelScript.SetWallLength(string)","childcount":0,"type":"Method","name":"SetWallLength","token":"public void SetWallLength(string length)","scope":"ErgoShop.UI.WallPropPanelScript","params":{"length":"string"}},{"signature":"ErgoShop.UI.WallPropPanelScript.CheckPropertiesBindings(List<Wall>)","childcount":0,"type":"Method","name":"CheckPropertiesBindings","token":"private bool CheckPropertiesBindings(List<Wall> wallsData)","scope":"ErgoShop.UI.WallPropPanelScript","params":{"wallsData":"List<Wall>"}},{"signature":"ErgoShop.UI.WallPropPanelScript.ShowWallToggle()","childcount":0,"type":"Method","name":"ShowWallToggle","token":"public void ShowWallToggle()","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.WallPropPanelScript.Hide()","childcount":0,"type":"Method","name":"Hide","token":"public override void Hide()","scope":"ErgoShop.UI.WallPropPanelScript"},{"signature":"ErgoShop.UI.ElementsScrollScript","childcount":4,"type":"Class","name":"ElementsScrollScript","token":"[ExecuteInEditMode]\npublic class ElementsScrollScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Update the content size so the vertical layout can display its children correctly"}},{"signature":"ErgoShop.UI.ElementsScrollScript.ElementsScroll","childcount":0,"type":"Field","name":"ElementsScroll","token":"public RectTransform ElementsScroll ","scope":"ErgoShop.UI.ElementsScrollScript"},{"signature":"ErgoShop.UI.ElementsScrollScript.Content","childcount":0,"type":"Field","name":"Content","token":"public RectTransform Content ","scope":"ErgoShop.UI.ElementsScrollScript"},{"signature":"ErgoShop.UI.ElementsScrollScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.ElementsScrollScript"},{"signature":"ErgoShop.UI.ElementsScrollScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.ElementsScrollScript","comments":{"summary":"Update the content size so the vertical layout can display its children correctly"}},{"signature":"ErgoShop.UI.ExpandScrollScript","childcount":7,"type":"Class","name":"ExpandScrollScript","token":"public class ExpandScrollScript : MonoBehaviour ","scope":"ErgoShop.UI","comments":{"summary":"Show / hide list without desactivate gameobject"}},{"signature":"ErgoShop.UI.ExpandScrollScript.Scroll","childcount":0,"type":"Field","name":"Scroll","token":"public GameObject Scroll ","scope":"ErgoShop.UI.ExpandScrollScript"},{"signature":"ErgoShop.UI.ExpandScrollScript.m_scrollPosition","childcount":0,"type":"Field","name":"m_scrollPosition","token":"private Vector2 m_scrollPosition ","scope":"ErgoShop.UI.ExpandScrollScript"},{"signature":"ErgoShop.UI.ExpandScrollScript.m_expanded","childcount":0,"type":"Field","name":"m_expanded","token":"private bool m_expanded ","scope":"ErgoShop.UI.ExpandScrollScript"},{"signature":"ErgoShop.UI.ExpandScrollScript.Start()","childcount":0,"type":"Method","name":"Start","token":"private void Start()","scope":"ErgoShop.UI.ExpandScrollScript"},{"signature":"ErgoShop.UI.ExpandScrollScript.ToggleScroll()","childcount":0,"type":"Method","name":"ToggleScroll","token":"public void ToggleScroll()","scope":"ErgoShop.UI.ExpandScrollScript"},{"signature":"ErgoShop.UI.ExpandScrollScript.ExpandScroll()","childcount":0,"type":"Method","name":"ExpandScroll","token":"public void ExpandScroll()","scope":"ErgoShop.UI.ExpandScrollScript"},{"signature":"ErgoShop.UI.ExpandScrollScript.MinimizeScroll()","childcount":0,"type":"Method","name":"MinimizeScroll","token":"public void MinimizeScroll()","scope":"ErgoShop.UI.ExpandScrollScript"},{"signature":"ErgoShop.UI.FurnitureListScroll","childcount":7,"type":"Class","name":"FurnitureListScroll","token":"public class FurnitureListScroll : MonoBehaviour, IListScrollScript ","scope":"ErgoShop.UI","comments":{"summary":"List of all furnitures in scene\r\n     User can click on it to select and view it"}},{"signature":"ErgoShop.UI.FurnitureListScroll.OperationButtonPrefab","childcount":0,"type":"Field","name":"OperationButtonPrefab","token":"public GameObject OperationButtonPrefab ","scope":"ErgoShop.UI.FurnitureListScroll"},{"signature":"ErgoShop.UI.FurnitureListScroll.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static FurnitureListScroll Instance { get; set; }","scope":"ErgoShop.UI.FurnitureListScroll"},{"signature":"ErgoShop.UI.FurnitureListScroll.m_elemScroll","childcount":0,"type":"Field","name":"m_elemScroll","token":"private ElementsScrollScript m_elemScroll ","scope":"ErgoShop.UI.FurnitureListScroll"},{"signature":"ErgoShop.UI.FurnitureListScroll.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.FurnitureListScroll"},{"signature":"ErgoShop.UI.FurnitureListScroll.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.FurnitureListScroll"},{"signature":"ErgoShop.UI.FurnitureListScroll.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.FurnitureListScroll"},{"signature":"ErgoShop.UI.FurnitureListScroll.UpdateList()","childcount":0,"type":"Method","name":"UpdateList","token":"public void UpdateList()","scope":"ErgoShop.UI.FurnitureListScroll","comments":{"summary":"Clean and update list\r\n         Generates buttons, each one associated to a furniture"}},{"signature":"ErgoShop.UI.IListScrollScript","childcount":1,"type":"Interface","name":"IListScrollScript","token":"public interface IListScrollScript ","scope":"ErgoShop.UI","comments":{"summary":"A scroll list must be updated"}},{"signature":"ErgoShop.UI.IListScrollScript.UpdateList()","childcount":0,"type":"Method","name":"UpdateList","token":"void UpdateList()","scope":"ErgoShop.UI.IListScrollScript","comments":{"summary":"A scroll list must be updated"}},{"signature":"ErgoShop.UI.OperationsScrollScript","childcount":12,"type":"Class","name":"OperationsScrollScript","token":"public class OperationsScrollScript : MonoBehaviour, IListScrollScript ","scope":"ErgoShop.UI","comments":{"summary":"List of autosaves for cancel/redo system\r\n     The user can click any to go to the wanted state\r\n     Manages also the buttons to cancel and redo"}},{"signature":"ErgoShop.UI.OperationsScrollScript.OperationButtonPrefab","childcount":0,"type":"Field","name":"OperationButtonPrefab","token":"public GameObject OperationButtonPrefab ","scope":"ErgoShop.UI.OperationsScrollScript"},{"signature":"ErgoShop.UI.OperationsScrollScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static OperationsScrollScript Instance { get; set; }","scope":"ErgoShop.UI.OperationsScrollScript"},{"signature":"ErgoShop.UI.OperationsScrollScript.m_elemScroll","childcount":0,"type":"Field","name":"m_elemScroll","token":"private ElementsScrollScript m_elemScroll ","scope":"ErgoShop.UI.OperationsScrollScript"},{"signature":"ErgoShop.UI.OperationsScrollScript.m_buttons","childcount":0,"type":"Field","name":"m_buttons","token":"private List<Button> m_buttons ","scope":"ErgoShop.UI.OperationsScrollScript"},{"signature":"ErgoShop.UI.OperationsScrollScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.OperationsScrollScript"},{"signature":"ErgoShop.UI.OperationsScrollScript.Start()","childcount":0,"type":"Method","name":"Start","token":"void Start()","scope":"ErgoShop.UI.OperationsScrollScript"},{"signature":"ErgoShop.UI.OperationsScrollScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.OperationsScrollScript"},{"signature":"ErgoShop.UI.OperationsScrollScript.UpdateList()","childcount":0,"type":"Method","name":"UpdateList","token":"public void UpdateList()","scope":"ErgoShop.UI.OperationsScrollScript","comments":{"summary":"Clean and loads all states into a button list"}},{"signature":"ErgoShop.UI.OperationsScrollScript.GoToOperation(AutoSave)","childcount":0,"type":"Method","name":"GoToOperation","token":"public void GoToOperation(AutoSave auto)","scope":"ErgoShop.UI.OperationsScrollScript","comments":{"summary":"When user clicks on a button","param-auto":"autosave we want to load"},"params":{"auto":"AutoSave"}},{"signature":"ErgoShop.UI.OperationsScrollScript.ResetColors()","childcount":0,"type":"Method","name":"ResetColors","token":"public void ResetColors()","scope":"ErgoShop.UI.OperationsScrollScript","comments":{"summary":"Set button color to white"}},{"signature":"ErgoShop.UI.OperationsScrollScript.SetCurrentColor(int)","childcount":0,"type":"Method","name":"SetCurrentColor","token":"public void SetCurrentColor(int opId)","scope":"ErgoShop.UI.OperationsScrollScript","comments":{"summary":"The current state is colored"},"params":{"opId":"int"}},{"signature":"ErgoShop.UI.OperationsScrollScript.SetCurrentColor(Button)","childcount":0,"type":"Method","name":"SetCurrentColor","token":"public void SetCurrentColor(Button b)","scope":"ErgoShop.UI.OperationsScrollScript","comments":{"summary":"The current state is colored in cyan"},"params":{"b":"Button"}},{"signature":"ErgoShop.UI.WallArrowsScript","childcount":7,"type":"Class","name":"WallArrowsScript","token":"public class WallArrowsScript : ArrowsScript ","scope":"ErgoShop.UI"},{"signature":"ErgoShop.UI.WallArrowsScript.isMoving","childcount":0,"type":"Field","name":"isMoving","token":"public bool isMoving ","scope":"ErgoShop.UI.WallArrowsScript"},{"signature":"ErgoShop.UI.WallArrowsScript.w","childcount":0,"type":"Field","name":"w","token":"private Wall w ","scope":"ErgoShop.UI.WallArrowsScript"},{"signature":"ErgoShop.UI.WallArrowsScript.m_prevPos","childcount":0,"type":"Field","name":"m_prevPos","token":"private Vector3 m_prevPos ","scope":"ErgoShop.UI.WallArrowsScript"},{"signature":"ErgoShop.UI.WallArrowsScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static WallArrowsScript Instance { get; set; }","scope":"ErgoShop.UI.WallArrowsScript"},{"signature":"ErgoShop.UI.WallArrowsScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.WallArrowsScript"},{"signature":"ErgoShop.UI.WallArrowsScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.WallArrowsScript"},{"signature":"ErgoShop.UI.WallArrowsScript.ClickArrow()","childcount":0,"type":"Method","name":"ClickArrow","token":"private void ClickArrow()","scope":"ErgoShop.UI.WallArrowsScript"},{"signature":"ErgoShop.UI.WallOpeningArrowsScript","childcount":6,"type":"Class","name":"WallOpeningArrowsScript","token":"public class WallOpeningArrowsScript : ArrowsScript ","scope":"ErgoShop.UI"},{"signature":"ErgoShop.UI.WallOpeningArrowsScript.isMoving","childcount":0,"type":"Field","name":"isMoving","token":"public bool isMoving ","scope":"ErgoShop.UI.WallOpeningArrowsScript"},{"signature":"ErgoShop.UI.WallOpeningArrowsScript.wo","childcount":0,"type":"Field","name":"wo","token":"private WallOpening wo ","scope":"ErgoShop.UI.WallOpeningArrowsScript"},{"signature":"ErgoShop.UI.WallOpeningArrowsScript.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static WallOpeningArrowsScript Instance { get; set; }","scope":"ErgoShop.UI.WallOpeningArrowsScript"},{"signature":"ErgoShop.UI.WallOpeningArrowsScript.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"ErgoShop.UI.WallOpeningArrowsScript"},{"signature":"ErgoShop.UI.WallOpeningArrowsScript.Update()","childcount":0,"type":"Method","name":"Update","token":"void Update()","scope":"ErgoShop.UI.WallOpeningArrowsScript"},{"signature":"ErgoShop.UI.WallOpeningArrowsScript.ClickArrow()","childcount":0,"type":"Method","name":"ClickArrow","token":"private void ClickArrow()","scope":"ErgoShop.UI.WallOpeningArrowsScript"},{"signature":"Vertex","childcount":10,"type":"Class","name":"Vertex","token":"public class Vertex ","scope":""},{"signature":"Vertex.position","childcount":0,"type":"Field","name":"position","token":"public Vector3 position ","scope":"Vertex"},{"signature":"Vertex.halfEdge","childcount":0,"type":"Field","name":"halfEdge","token":"public HalfEdge halfEdge ","scope":"Vertex"},{"signature":"Vertex.triangle","childcount":0,"type":"Field","name":"triangle","token":"public Triangle triangle ","scope":"Vertex"},{"signature":"Vertex.prevVertex","childcount":0,"type":"Field","name":"prevVertex","token":"public Vertex prevVertex ","scope":"Vertex"},{"signature":"Vertex.nextVertex","childcount":0,"type":"Field","name":"nextVertex","token":"public Vertex nextVertex ","scope":"Vertex"},{"signature":"Vertex.isReflex","childcount":0,"type":"Field","name":"isReflex","token":"public bool isReflex ","scope":"Vertex"},{"signature":"Vertex.isConvex","childcount":0,"type":"Field","name":"isConvex","token":"public bool isConvex ","scope":"Vertex"},{"signature":"Vertex.isEar","childcount":0,"type":"Field","name":"isEar","token":"public bool isEar ","scope":"Vertex"},{"signature":"Vertex.Vertex(Vector3)","childcount":0,"type":"Constructor","name":"Vertex","token":"public  Vertex(Vector3 position)","scope":"Vertex","params":{"position":"Vector3"}},{"signature":"Vertex.GetPos2D_XZ()","childcount":0,"type":"Method","name":"GetPos2D_XZ","token":"public Vector2 GetPos2D_XZ()","scope":"Vertex"},{"signature":"HalfEdge","childcount":6,"type":"Class","name":"HalfEdge","token":"public class HalfEdge ","scope":""},{"signature":"HalfEdge.v","childcount":0,"type":"Field","name":"v","token":"public Vertex v ","scope":"HalfEdge"},{"signature":"HalfEdge.t","childcount":0,"type":"Field","name":"t","token":"public Triangle t ","scope":"HalfEdge"},{"signature":"HalfEdge.nextEdge","childcount":0,"type":"Field","name":"nextEdge","token":"public HalfEdge nextEdge ","scope":"HalfEdge"},{"signature":"HalfEdge.prevEdge","childcount":0,"type":"Field","name":"prevEdge","token":"public HalfEdge prevEdge ","scope":"HalfEdge"},{"signature":"HalfEdge.oppositeEdge","childcount":0,"type":"Field","name":"oppositeEdge","token":"public HalfEdge oppositeEdge ","scope":"HalfEdge"},{"signature":"HalfEdge.HalfEdge(Vertex)","childcount":0,"type":"Constructor","name":"HalfEdge","token":"public  HalfEdge(Vertex v)","scope":"HalfEdge","params":{"v":"Vertex"}},{"signature":"Triangle","childcount":8,"type":"Class","name":"Triangle","token":"public class Triangle ","scope":""},{"signature":"Triangle.v1","childcount":0,"type":"Field","name":"v1","token":"public Vertex v1 ","scope":"Triangle"},{"signature":"Triangle.v2","childcount":0,"type":"Field","name":"v2","token":"public Vertex v2 ","scope":"Triangle"},{"signature":"Triangle.v3","childcount":0,"type":"Field","name":"v3","token":"public Vertex v3 ","scope":"Triangle"},{"signature":"Triangle.halfEdge","childcount":0,"type":"Field","name":"halfEdge","token":"public HalfEdge halfEdge ","scope":"Triangle"},{"signature":"Triangle.Triangle(Vertex, Vertex, Vertex)","childcount":0,"type":"Constructor","name":"Triangle","token":"public  Triangle(Vertex v1, Vertex v2, Vertex v3)","scope":"Triangle","params":{"v1":"Vertex","v2":"Vertex","v3":"Vertex"}},{"signature":"Triangle.Triangle(Vector3, Vector3, Vector3)","childcount":0,"type":"Constructor","name":"Triangle","token":"public  Triangle(Vector3 v1, Vector3 v2, Vector3 v3)","scope":"Triangle","params":{"v1":"Vector3","v2":"Vector3","v3":"Vector3"}},{"signature":"Triangle.Triangle(HalfEdge)","childcount":0,"type":"Constructor","name":"Triangle","token":"public  Triangle(HalfEdge halfEdge)","scope":"Triangle","params":{"halfEdge":"HalfEdge"}},{"signature":"Triangle.ChangeOrientation()","childcount":0,"type":"Method","name":"ChangeOrientation","token":"public void ChangeOrientation()","scope":"Triangle"},{"signature":"Edge","childcount":7,"type":"Class","name":"Edge","token":"public class Edge ","scope":""},{"signature":"Edge.v1","childcount":0,"type":"Field","name":"v1","token":"public Vertex v1 ","scope":"Edge"},{"signature":"Edge.v2","childcount":0,"type":"Field","name":"v2","token":"public Vertex v2 ","scope":"Edge"},{"signature":"Edge.isIntersecting","childcount":0,"type":"Field","name":"isIntersecting","token":"public bool isIntersecting ","scope":"Edge"},{"signature":"Edge.Edge(Vertex, Vertex)","childcount":0,"type":"Constructor","name":"Edge","token":"public  Edge(Vertex v1, Vertex v2)","scope":"Edge","params":{"v1":"Vertex","v2":"Vertex"}},{"signature":"Edge.Edge(Vector3, Vector3)","childcount":0,"type":"Constructor","name":"Edge","token":"public  Edge(Vector3 v1, Vector3 v2)","scope":"Edge","params":{"v1":"Vector3","v2":"Vector3"}},{"signature":"Edge.GetVertex2D(Vertex)","childcount":0,"type":"Method","name":"GetVertex2D","token":"public Vector2 GetVertex2D(Vertex v)","scope":"Edge","params":{"v":"Vertex"}},{"signature":"Edge.FlipEdge()","childcount":0,"type":"Method","name":"FlipEdge","token":"public void FlipEdge()","scope":"Edge"},{"signature":"Plane","childcount":3,"type":"Class","name":"Plane","token":"public class Plane ","scope":""},{"signature":"Plane.pos","childcount":0,"type":"Field","name":"pos","token":"public Vector3 pos ","scope":"Plane"},{"signature":"Plane.normal","childcount":0,"type":"Field","name":"normal","token":"public Vector3 normal ","scope":"Plane"},{"signature":"Plane.Plane(Vector3, Vector3)","childcount":0,"type":"Constructor","name":"Plane","token":"public  Plane(Vector3 pos, Vector3 normal)","scope":"Plane","params":{"pos":"Vector3","normal":"Vector3"}},{"signature":"ErgoShop.Utils.Extensions","childcount":2,"type":"Namespace","name":"ErgoShop.Utils.Extensions","token":"namespace ErgoShop.Utils.Extensions","scope":""},{"signature":"ErgoShop.Utils.Extensions.CollectionsExtensions","childcount":1,"type":"Class","name":"CollectionsExtensions","token":"public static class CollectionsExtensions ","scope":"ErgoShop.Utils.Extensions"},{"signature":"ErgoShop.Utils.Extensions.CollectionsExtensions.Copy(List<Object>)","childcount":0,"type":"Method","name":"Copy","token":"public static List<Object> Copy(this List<Object> list)","scope":"ErgoShop.Utils.Extensions.CollectionsExtensions","comments":{"summary":"Copy a list content"},"params":{"list":"List<Object>"}},{"signature":"ErgoShop.Utils.Extensions.GameObjectExtensions","childcount":7,"type":"Class","name":"GameObjectExtensions","token":"public static class GameObjectExtensions ","scope":"ErgoShop.Utils.Extensions","comments":{"summary":"Extensions methods for gameobjects"}},{"signature":"ErgoShop.Utils.Extensions.GameObjectExtensions.MeshSize(GameObject)","childcount":0,"type":"Method","name":"MeshSize","token":"public static Vector3 MeshSize(this GameObject go)","scope":"ErgoShop.Utils.Extensions.GameObjectExtensions","comments":{"summary":"Get boundaries size"},"params":{"go":"GameObject"}},{"signature":"ErgoShop.Utils.Extensions.GameObjectExtensions.SetLayerRecursively(GameObject, int)","childcount":0,"type":"Method","name":"SetLayerRecursively","token":"public static void SetLayerRecursively(this GameObject go, int layer)","scope":"ErgoShop.Utils.Extensions.GameObjectExtensions","comments":{"summary":"Set layer to gameobject and its children"},"params":{"go":"GameObject","layer":"int"}},{"signature":"ErgoShop.Utils.Extensions.GameObjectExtensions.RandomColor(Color)","childcount":0,"type":"Method","name":"RandomColor","token":"public static Color RandomColor(this Color c)","scope":"ErgoShop.Utils.Extensions.GameObjectExtensions","comments":{"summary":"Get a random color"},"params":{"c":"Color"}},{"signature":"ErgoShop.Utils.Extensions.GameObjectExtensions.GetCenter(List<Wall>)","childcount":0,"type":"Method","name":"GetCenter","token":"public static Vector3 GetCenter(this List<Wall> walls)","scope":"ErgoShop.Utils.Extensions.GameObjectExtensions","comments":{"summary":"Get walls center"},"params":{"walls":"List<Wall>"}},{"signature":"ErgoShop.Utils.Extensions.GameObjectExtensions.GetCenter(List<Furniture>)","childcount":0,"type":"Method","name":"GetCenter","token":"public static Vector3 GetCenter(this List<Furniture> furnitures)","scope":"ErgoShop.Utils.Extensions.GameObjectExtensions","params":{"furnitures":"List<Furniture>"}},{"signature":"ErgoShop.Utils.Extensions.GameObjectExtensions.GetSpriteBounds(GameObject)","childcount":0,"type":"Method","name":"GetSpriteBounds","token":"public static Bounds GetSpriteBounds(this GameObject go)","scope":"ErgoShop.Utils.Extensions.GameObjectExtensions","params":{"go":"GameObject"}},{"signature":"ErgoShop.Utils.Extensions.GameObjectExtensions.GetMeshBounds(GameObject)","childcount":0,"type":"Method","name":"GetMeshBounds","token":"public static Bounds GetMeshBounds(this GameObject go)","scope":"ErgoShop.Utils.Extensions.GameObjectExtensions","params":{"go":"GameObject"}}
];
const ROOT_MEMBERS = [
{"signature":"ErgoShop.TwoDScripts","childcount":2,"type":"Namespace","name":"ErgoShop.TwoDScripts","token":"namespace ErgoShop.TwoDScripts","scope":""},{"signature":"ErgoShop.Cameras","childcount":2,"type":"Namespace","name":"ErgoShop.Cameras","token":"namespace ErgoShop.Cameras","scope":""},{"signature":"ErgoShop.ConstraintsScripts","childcount":2,"type":"Namespace","name":"ErgoShop.ConstraintsScripts","token":"namespace ErgoShop.ConstraintsScripts","scope":""},{"signature":"ErgoShop.Interactable","childcount":1,"type":"Namespace","name":"ErgoShop.Interactable","token":"namespace ErgoShop.Interactable","scope":""},{"signature":"ErgoShop.Managers","childcount":19,"type":"Namespace","name":"ErgoShop.Managers","token":"namespace ErgoShop.Managers","scope":""},{"signature":"ErgoShop.Utils","childcount":39,"type":"Namespace","name":"ErgoShop.Utils","token":"namespace ErgoShop.Utils","scope":"","comments":{"summary":"Enums"}},{"signature":"ViewMode","childcount":2,"type":"Enum","name":"ViewMode","token":"public enum ViewMode ","scope":"","comments":{"summary":"To know if we are currently in 2D or 3D view"}},{"signature":"IOperation","childcount":1,"type":"Interface","name":"IOperation","token":"public interface IOperation ","scope":"","comments":{"summary":"Interface to define an operation NOT USED"}},{"signature":"ErgoShop.Operations","childcount":3,"type":"Namespace","name":"ErgoShop.Operations","token":"namespace ErgoShop.Operations","scope":""},{"signature":"ErgoShop.POCO","childcount":21,"type":"Namespace","name":"ErgoShop.POCO","token":"namespace ErgoShop.POCO","scope":""},{"signature":"ErgoShop.UI","childcount":37,"type":"Namespace","name":"ErgoShop.UI","token":"namespace ErgoShop.UI","scope":""},{"signature":"Vertex","childcount":10,"type":"Class","name":"Vertex","token":"public class Vertex ","scope":""},{"signature":"HalfEdge","childcount":6,"type":"Class","name":"HalfEdge","token":"public class HalfEdge ","scope":""},{"signature":"Triangle","childcount":8,"type":"Class","name":"Triangle","token":"public class Triangle ","scope":""},{"signature":"Edge","childcount":7,"type":"Class","name":"Edge","token":"public class Edge ","scope":""},{"signature":"Plane","childcount":3,"type":"Class","name":"Plane","token":"public class Plane ","scope":""},{"signature":"ErgoShop.Utils.Extensions","childcount":2,"type":"Namespace","name":"ErgoShop.Utils.Extensions","token":"namespace ErgoShop.Utils.Extensions","scope":""}
];
const BUILTIN_WORDS_REGEX = /\b(?:__arglist|abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|Dictionary|do|double|dynamic|else|enum|event|Exception|extern|false|final|finally|fixed|float|for|foreach|from|from|get|get;|goto|grouby|HashSet|if|in|in|int|interface|internal|is|List|lock|long|nameof|namespace|new|null|object|out|params|partial|private|protected|public|readonly|ref|return|sealed|select|select|set|set;|short|Single|Single32|Single64|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|UInt16|UInt32|UInt64|ulong|unchecked|unsafe|ushort|using|var|virtual|void|volatile|where|where|while)\b/g;
